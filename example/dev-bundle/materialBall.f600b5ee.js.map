{"mappings":"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","sources":["example/materialBall.js","node_modules/three/examples/jsm/loaders/RGBELoader.js","example/utils/LoaderElement.js"],"sourcesContent":["import {\r\n\tACESFilmicToneMapping,\r\n\tCustomBlending,\r\n\tScene,\r\n\tBox3,\r\n\tMesh,\r\n\tCylinderGeometry,\r\n\tMeshPhysicalMaterial,\r\n\tWebGLRenderer,\r\n\tEquirectangularReflectionMapping,\r\n\tPerspectiveCamera,\r\n\tColor,\r\n} from 'three';\r\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { DenoiseMaterial, WebGLPathTracer } from '../src/index.js';\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\r\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\r\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\r\nimport { LoaderElement } from './utils/LoaderElement.js';\r\n\r\nconst ENV_URL = 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/autoshop_01_1k.hdr';\r\nconst MODEL_URL = 'https://raw.githubusercontent.com/disini/3d-demo-data/main/models/material-balls/material_ball_v2.glb';\r\n\r\nlet pathTracer, renderer, controls, denoiseQuad, shellMaterial;\r\nlet camera, scene, loader;\r\n\r\nconst params = {\r\n\r\n\tmaterialProperties: {\r\n\t\tcolor: '#ffe6bd',\r\n\t\temissive: '#000000',\r\n\t\temissiveIntensity: 1,\r\n\t\troughness: 0,\r\n\t\tmetalness: 1,\r\n\t\tior: 1.495,\r\n\t\ttransmission: 0.0,\r\n\t\tthinFilm: false,\r\n\t\tattenuationColor: '#ffffff',\r\n\t\tattenuationDistance: 0.5,\r\n\t\topacity: 1.0,\r\n\t\tclearcoat: 0.0,\r\n\t\tclearcoatRoughness: 0.0,\r\n\t\tsheenColor: '#000000',\r\n\t\tsheenRoughness: 0.0,\r\n\t\tiridescence: 0.0,\r\n\t\tiridescenceIOR: 1.5,\r\n\t\tiridescenceThickness: 400,\r\n\t\tspecularColor: '#ffffff',\r\n\t\tspecularIntensity: 1.0,\r\n\t\tmatte: false,\r\n\t\tflatShading: false,\r\n\t\tcastShadow: true,\r\n\t},\r\n\r\n\tmultipleImportanceSampling: true,\r\n\tdenoiseEnabled: true,\r\n\tdenoiseSigma: 2.5,\r\n\tdenoiseThreshold: 0.1,\r\n\tdenoiseKSigma: 1.0,\r\n\tbounces: 5,\r\n\trenderScale: 1 / window.devicePixelRatio,\r\n\ttransmissiveBounces: 20,\r\n\tfilterGlossyFactor: 0.5,\r\n\ttiles: 1,\r\n};\r\n\r\nif ( window.location.hash.includes( 'transmission' ) ) {\r\n\r\n\tparams.materialProperties.metalness = 0.0;\r\n\tparams.materialProperties.roughness = 0.23;\r\n\tparams.materialProperties.transmission = 1.0;\r\n\tparams.materialProperties.color = '#ffffff';\r\n\r\n\tparams.bounces = 10;\r\n\tparams.tiles = 2;\r\n\r\n} else if ( window.location.hash.includes( 'iridescent' ) ) {\r\n\r\n\tparams.materialProperties.color = '#474747';\r\n\tparams.materialProperties.roughness = 0.25;\r\n\tparams.materialProperties.metalness = 1.0;\r\n\tparams.materialProperties.iridescence = 1.0;\r\n\tparams.materialProperties.iridescenceIOR = 2.2;\r\n\r\n} else if ( window.location.hash.includes( 'acrylic' ) ) {\r\n\r\n\tparams.materialProperties.color = '#ffffff';\r\n\tparams.materialProperties.roughness = 0;\r\n\tparams.materialProperties.metalness = 0;\r\n\tparams.materialProperties.transmission = 1.0;\r\n\tparams.materialProperties.attenuationDistance = 0.75;\r\n\tparams.materialProperties.attenuationColor = '#2a6dc6';\r\n\r\n\tparams.bounces = 20;\r\n\tparams.tiles = 3;\r\n\r\n}\r\n\r\n// adjust performance parameters for mobile\r\nconst aspectRatio = window.innerWidth / window.innerHeight;\r\nif ( aspectRatio < 0.65 ) {\r\n\r\n\tparams.bounces = Math.max( params.bounces, 6 );\r\n\tparams.renderScale *= 0.5;\r\n\tparams.tiles = 2;\r\n\tparams.multipleImportanceSampling = false;\r\n\r\n}\r\n\r\ninit();\r\n\r\nasync function init() {\r\n\r\n\tloader = new LoaderElement();\r\n\tloader.attach( document.body );\r\n\r\n\t// renderer\r\n\trenderer = new WebGLRenderer( { antialias: true } );\r\n\trenderer.toneMapping = ACESFilmicToneMapping;\r\n\tdocument.body.appendChild( renderer.domElement );\r\n\r\n\t// path tracer\r\n\tpathTracer = new WebGLPathTracer( renderer );\r\n\tpathTracer.tiles.set( params.tiles, params.tiles );\r\n\tpathTracer.renderToCanvasCallback = ( target, renderer, quad ) => {\r\n\r\n\t\tdenoiseQuad.material.sigma = params.denoiseSigma;\r\n\t\tdenoiseQuad.material.threshold = params.denoiseThreshold;\r\n\t\tdenoiseQuad.material.kSigma = params.denoiseKSigma;\r\n\t\tdenoiseQuad.material.opacity = quad.material.opacity;\r\n\r\n\t\tconst autoClear = renderer.autoClear;\r\n\t\tconst finalQuad = params.denoiseEnabled ? denoiseQuad : quad;\r\n\t\trenderer.autoClear = false;\r\n\t\tfinalQuad.material.map = target.texture;\r\n\t\tfinalQuad.render( renderer );\r\n\t\trenderer.autoClear = autoClear;\r\n\r\n\t};\r\n\r\n\t// denoiser\r\n\tdenoiseQuad = new FullScreenQuad( new DenoiseMaterial( {\r\n\t\tmap: null,\r\n\t\tblending: CustomBlending,\r\n\t\tpremultipliedAlpha: renderer.getContextAttributes().premultipliedAlpha,\r\n\t} ) );\r\n\r\n\t// camera\r\n\tconst aspect = window.innerWidth / window.innerHeight;\r\n\tcamera = new PerspectiveCamera( 75, aspect, 0.025, 500 );\r\n\tcamera.position.set( - 4, 2, 3 );\r\n\r\n\t// controls\r\n\tcontrols = new OrbitControls( camera, renderer.domElement );\r\n\tcontrols.addEventListener( 'change', () => pathTracer.updateCamera() );\r\n\r\n\tscene = new Scene();\r\n\tscene.backgroundBlurriness = 0.05;\r\n\r\n\t// load assets\r\n\tconst [ envTexture, gltf ] = await Promise.all( [\r\n\t\tnew RGBELoader().loadAsync( ENV_URL ),\r\n\t\tnew GLTFLoader().setMeshoptDecoder( MeshoptDecoder ).loadAsync( MODEL_URL )\r\n\t] );\r\n\r\n\t// set environment\r\n\tenvTexture.mapping = EquirectangularReflectionMapping;\r\n\tscene.background = envTexture;\r\n\tscene.environment = envTexture;\r\n\r\n\t// set up scene\r\n\tgltf.scene.scale.setScalar( 0.01 );\r\n\tgltf.scene.updateMatrixWorld();\r\n\tscene.add( gltf.scene );\r\n\r\n\tconst box = new Box3();\r\n\tbox.setFromObject( gltf.scene );\r\n\r\n\tconst floor = new Mesh(\r\n\t\tnew CylinderGeometry( 3, 3, 0.05, 200 ),\r\n\t\tnew MeshPhysicalMaterial( { color: 0xffffff, roughness: 0.1, metalness: 0.9 } ),\r\n\t);\r\n\tfloor.geometry = floor.geometry.toNonIndexed();\r\n\tfloor.geometry.clearGroups();\r\n\tfloor.position.y = box.min.y - 0.03;\r\n\tscene.add( floor );\r\n\r\n\tconst coreMaterial = new MeshPhysicalMaterial( { color: new Color( 0.5, 0.5, 0.5 ) } );\r\n\tshellMaterial = new MeshPhysicalMaterial();\r\n\r\n\tgltf.scene.traverse( c => {\r\n\r\n\t\t// the vertex normals on the material ball are off...\r\n\t\t// TODO: precompute the vertex normals so they are correct on load\r\n\t\tif ( c.geometry ) {\r\n\r\n\t\t\tc.geometry.computeVertexNormals();\r\n\r\n\t\t}\r\n\r\n\t\tif ( c.name === 'Sphere_1' ) {\r\n\r\n\t\t\tc.material = coreMaterial;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tc.material = shellMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tif ( c.name === 'subsphere_1' ) {\r\n\r\n\t\t\tc.material = coreMaterial;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tloader.setPercentage( 1 );\r\n\tonParamsChange();\r\n\tonResize();\r\n\twindow.addEventListener( 'resize', onResize );\r\n\r\n\t// gui\r\n\tconst gui = new GUI();\r\n\tconst ptFolder = gui.addFolder( 'Path Tracer' );\r\n\tptFolder.add( params, 'multipleImportanceSampling' ).onChange( onParamsChange );\r\n\tptFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\r\n\r\n\t\tpathTracer.tiles.set( value, value );\r\n\r\n\t} );\r\n\tptFolder.add( params, 'filterGlossyFactor', 0, 1 ).onChange( onParamsChange );\r\n\tptFolder.add( params, 'bounces', 1, 30, 1 ).onChange( onParamsChange );\r\n\tptFolder.add( params, 'transmissiveBounces', 0, 40, 1 ).onChange( onParamsChange );\r\n\tptFolder.add( params, 'renderScale', 0.1, 1 ).onChange( onParamsChange );\r\n\r\n\tconst denoiseFolder = gui.addFolder( 'Denoising' );\r\n\tdenoiseFolder.add( params, 'denoiseEnabled' );\r\n\tdenoiseFolder.add( params, 'denoiseSigma', 0.01, 12.0 );\r\n\tdenoiseFolder.add( params, 'denoiseThreshold', 0.01, 1.0 );\r\n\tdenoiseFolder.add( params, 'denoiseKSigma', 0.0, 12.0 );\r\n\tdenoiseFolder.close();\r\n\r\n\tconst matFolder1 = gui.addFolder( 'Material' );\r\n\tmatFolder1.addColor( params.materialProperties, 'color' ).onChange( onParamsChange );\r\n\tmatFolder1.addColor( params.materialProperties, 'emissive' ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'emissiveIntensity', 0.0, 50.0, 0.01 ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'roughness', 0, 1 ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'metalness', 0, 1 ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'opacity', 0, 1 ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'transmission', 0, 1 ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'thinFilm', 0, 1 ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'attenuationDistance', 0.05, 2.0 ).onChange( onParamsChange );\r\n\tmatFolder1.addColor( params.materialProperties, 'attenuationColor' ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'ior', 0.9, 3.0 ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'clearcoat', 0, 1 ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'clearcoatRoughness', 0, 1 ).onChange( onParamsChange );\r\n\tmatFolder1.addColor( params.materialProperties, 'sheenColor' ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'sheenRoughness', 0, 1 ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'iridescence', 0.0, 1.0 ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'iridescenceIOR', 0.1, 3.0 ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'iridescenceThickness', 0.0, 1200.0 ).onChange( onParamsChange );\r\n\tmatFolder1.addColor( params.materialProperties, 'specularColor' ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'specularIntensity', 0.0, 1.0 ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'matte' ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'flatShading' ).onChange( onParamsChange );\r\n\tmatFolder1.add( params.materialProperties, 'castShadow' ).onChange( onParamsChange );\r\n\tmatFolder1.close();\r\n\r\n\tanimate();\r\n\r\n}\r\n\r\nfunction onResize() {\r\n\r\n\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\trenderer.setPixelRatio( window.devicePixelRatio );\r\n\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\tcamera.updateProjectionMatrix();\r\n\tpathTracer.updateCamera();\r\n\r\n}\r\n\r\nfunction onParamsChange() {\r\n\r\n\tconst materialProperties = params.materialProperties;\r\n\tshellMaterial.color.set( materialProperties.color );\r\n\tshellMaterial.emissive.set( materialProperties.emissive );\r\n\tshellMaterial.emissiveIntensity = materialProperties.emissiveIntensity;\r\n\tshellMaterial.metalness = materialProperties.metalness;\r\n\tshellMaterial.roughness = materialProperties.roughness;\r\n\tshellMaterial.transmission = materialProperties.transmission;\r\n\tshellMaterial.attenuationDistance = materialProperties.thinFilm ? Infinity : materialProperties.attenuationDistance;\r\n\tshellMaterial.attenuationColor.set( materialProperties.attenuationColor );\r\n\tshellMaterial.ior = materialProperties.ior;\r\n\tshellMaterial.opacity = materialProperties.opacity;\r\n\tshellMaterial.clearcoat = materialProperties.clearcoat;\r\n\tshellMaterial.clearcoatRoughness = materialProperties.clearcoatRoughness;\r\n\tshellMaterial.sheenColor.set( materialProperties.sheenColor );\r\n\tshellMaterial.sheenRoughness = materialProperties.sheenRoughness;\r\n\tshellMaterial.iridescence = materialProperties.iridescence;\r\n\tshellMaterial.iridescenceIOR = materialProperties.iridescenceIOR;\r\n\tshellMaterial.iridescenceThicknessRange = [ 0, materialProperties.iridescenceThickness ];\r\n\tshellMaterial.specularColor.set( materialProperties.specularColor );\r\n\tshellMaterial.specularIntensity = materialProperties.specularIntensity;\r\n\tshellMaterial.transparent = shellMaterial.opacity < 1;\r\n\tshellMaterial.flatShading = materialProperties.flatShading;\r\n\r\n\tpathTracer.transmissiveBounces = params.transmissiveBounces;\r\n\tpathTracer.multipleImportanceSampling = params.multipleImportanceSampling;\r\n\tpathTracer.filterGlossyFactor = params.filterGlossyFactor;\r\n\tpathTracer.bounces = params.bounces;\r\n\tpathTracer.renderScale = params.renderScale;\r\n\r\n\t// note: custom properties\r\n\tshellMaterial.matte = materialProperties.matte;\r\n\tshellMaterial.castShadow = materialProperties.castShadow;\r\n\r\n\tpathTracer.updateMaterials();\r\n\tpathTracer.setScene( scene, camera );\r\n\r\n}\r\n\r\nfunction animate() {\r\n\r\n\trequestAnimationFrame( animate );\r\n\tpathTracer.renderSample();\r\n\tloader.setSamples( pathTracer.samples, pathTracer.isCompiling );\r\n\r\n}\r\n","import {\n\tDataTextureLoader,\n\tDataUtils,\n\tFloatType,\n\tHalfFloatType,\n\tLinearFilter,\n\tLinearSRGBColorSpace\n} from 'three';\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nclass RGBELoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.type = HalfFloatType;\n\n\t}\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse( buffer ) {\n\n\t\tconst\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: throw new Error( 'THREE.RGBELoader: Read Error: ' + ( msg || '' ) );\n\t\t\t\t\tcase rgbe_write_error: throw new Error( 'THREE.RGBELoader: Write Error: ' + ( msg || '' ) );\n\t\t\t\t\tcase rgbe_format_error: throw new Error( 'THREE.RGBELoader: Bad File Format: ' + ( msg || '' ) );\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: throw new Error( 'THREE.RGBELoader: Memory Error: ' + ( msg || '' ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = '\\n',\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tconst chunkSize = 128;\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tlet p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '',\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\n\t\t\t\t// regexes to parse header info fields\n\t\t\t\tconst magic_token_re = /^#\\?(\\S+)/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tlet line, match;\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_read_error, 'no header found' );\n\n\t\t\t\t}\n\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'bad initial token' );\n\n\t\t\t\t}\n\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + '\\n';\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'missing format specifier' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'missing image size specifier' );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tconst scanline_width = w;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'wrong scanline width' );\n\n\t\t\t\t}\n\n\t\t\t\tconst data_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba.length ) {\n\n\t\t\t\t\trgbe_error( rgbe_memory_error, 'unable to allocate buffer space' );\n\n\t\t\t\t}\n\n\t\t\t\tlet offset = 0, pos = 0;\n\n\t\t\t\tconst ptr_end = 4 * scanline_width;\n\t\t\t\tconst rgbeStart = new Uint8Array( 4 );\n\t\t\t\tconst scanline_buffer = new Uint8Array( ptr_end );\n\t\t\t\tlet num_scanlines = h;\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\trgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\trgbe_error( rgbe_format_error, 'bad rgbe scanline format' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tlet ptr = 0, count;\n\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tconst isEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\trgbe_error( rgbe_format_error, 'bad scanline data' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tconst byteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tconst l = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\tlet off = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tconst RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\t\t\tdestArray[ destOffset + 3 ] = 1;\n\n\t\t};\n\n\t\tconst RGBEByteToRGBHalf = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\t// clamping to 65504, the maximum representable value in float16\n\t\t\tdestArray[ destOffset + 0 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 0 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 1 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 1 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 2 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 2 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 3 ] = DataUtils.toHalfFloat( 1 );\n\n\t\t};\n\n\t\tconst byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tconst rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tconst w = rgbe_header_info.width,\n\t\t\th = rgbe_header_info.height,\n\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\n\t\tlet data, type;\n\t\tlet numElements;\n\n\t\tswitch ( this.type ) {\n\n\t\t\tcase FloatType:\n\n\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\tconst floatArray = new Float32Array( numElements * 4 );\n\n\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 4 );\n\n\t\t\t\t}\n\n\t\t\t\tdata = floatArray;\n\t\t\t\ttype = FloatType;\n\t\t\t\tbreak;\n\n\t\t\tcase HalfFloatType:\n\n\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\tconst halfArray = new Uint16Array( numElements * 4 );\n\n\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 4 );\n\n\t\t\t\t}\n\n\t\t\t\tdata = halfArray;\n\t\t\t\ttype = HalfFloatType;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tthrow new Error( 'THREE.RGBELoader: Unsupported type: ' + this.type );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: w, height: h,\n\t\t\tdata: data,\n\t\t\theader: rgbe_header_info.string,\n\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\texposure: rgbe_header_info.exposure,\n\t\t\ttype: type\n\t\t};\n\n\t}\n\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase FloatType:\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.colorSpace = LinearSRGBColorSpace;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn super.load( url, onLoadCallback, onProgress, onError );\n\n\t}\n\n}\n\nexport { RGBELoader };\n","let _styleElement;\r\nfunction initializeStyles() {\r\n\r\n\tif ( _styleElement ) {\r\n\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\t_styleElement = document.createElement( 'style' );\r\n\t_styleElement.textContent = /* css */`\r\n\r\n\t\t.loader-container, .description {\r\n\t\t\tposition: absolute;\r\n\t\t\twidth: 100%;\r\n\t\t\tfont-family: 'Courier New', Courier, monospace;\r\n\t\t\tcolor: white;\r\n\t\t\tfont-weight: light;\r\n\t\t\talign-items: flex-start;\r\n\t\t\tfont-size: 14px;\r\n\t\t\tpointer-events: none;\r\n\t\t\tuser-select: none;\r\n\t\t}\r\n\r\n\t\t.loader-container {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tbottom: 0;\r\n\t\t}\r\n\r\n\t\t.description {\r\n\t\t\ttop: 0;\r\n\t\t\twidth: 100%;\r\n\t\t\ttext-align: center;\r\n\t\t\tpadding: 5px 0;\r\n\t\t}\r\n\r\n\t\t.loader-container .bar {\r\n\t\t\theight: 2px;\r\n\t\t\tbackground: white;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\r\n\t\t.loader-container .credits,\r\n\t\t.loader-container .samples,\r\n\t\t.loader-container .percentage {\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 0 0 1px 1px;\r\n\t\t\tbackground: rgba( 0, 0, 0, 0.2 );\r\n\t\t\tborder-radius: 2px;\r\n\t\t\tdisplay: inline-block;\r\n\t\t}\r\n\r\n\t\t.loader-container:not(.loading) .bar,\r\n\t\t.loader-container:not(.loading) .percentage,\r\n\t\t.loader-container.loading .credits,\r\n\t\t.loader-container.loading .samples,\r\n\t\t.loader-container .credits:empty {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\t.loader-container .credits a,\r\n\t\t.loader-container .credits,\r\n\t\t.loader-container .samples {\r\n\t\t\tcolor: rgba( 255, 255, 255, 0.75 );\r\n\t\t}\r\n\t`;\r\n\tdocument.head.appendChild( _styleElement );\r\n\r\n}\r\n\r\nexport class LoaderElement {\r\n\r\n\tconstructor() {\r\n\r\n\t\tinitializeStyles();\r\n\r\n\t\tconst container = document.createElement( 'div' );\r\n\t\tcontainer.classList.add( 'loader-container' );\r\n\r\n\t\tconst percentageEl = document.createElement( 'div' );\r\n\t\tpercentageEl.classList.add( 'percentage' );\r\n\t\tcontainer.appendChild( percentageEl );\r\n\r\n\t\tconst samplesEl = document.createElement( 'div' );\r\n\t\tsamplesEl.classList.add( 'samples' );\r\n\t\tcontainer.appendChild( samplesEl );\r\n\r\n\t\tconst creditsEl = document.createElement( 'div' );\r\n\t\tcreditsEl.classList.add( 'credits' );\r\n\t\tcontainer.appendChild( creditsEl );\r\n\r\n\t\tconst loaderBarEl = document.createElement( 'div' );\r\n\t\tloaderBarEl.classList.add( 'bar' );\r\n\t\tcontainer.appendChild( loaderBarEl );\r\n\r\n\t\tconst descriptionEl = document.createElement( 'div' );\r\n\t\tdescriptionEl.classList.add( 'description' );\r\n\t\tcontainer.appendChild( descriptionEl );\r\n\r\n\t\tthis._description = descriptionEl;\r\n\t\tthis._loaderBar = loaderBarEl;\r\n\t\tthis._percentage = percentageEl;\r\n\t\tthis._credits = creditsEl;\r\n\t\tthis._samples = samplesEl;\r\n\t\tthis._container = container;\r\n\r\n\t\tthis.setPercentage( 0 );\r\n\r\n\t}\r\n\r\n\tattach( container ) {\r\n\r\n\t\tcontainer.appendChild( this._container );\r\n\t\tcontainer.appendChild( this._description );\r\n\r\n\t}\r\n\r\n\tsetPercentage( perc ) {\r\n\r\n\t\tthis._loaderBar.style.width = `${ perc * 100 }%`;\r\n\r\n\t\tif ( perc === 0 ) {\r\n\r\n\t\t\tthis._percentage.innerText = 'Loading...';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._percentage.innerText = `${ ( perc * 100 ).toFixed( 0 ) }%`;\r\n\r\n\t\t}\r\n\r\n\t\tif ( perc >= 1 ) {\r\n\r\n\t\t\tthis._container.classList.remove( 'loading' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._container.classList.add( 'loading' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetSamples( count, compiling = false ) {\r\n\r\n\t\tif ( compiling ) {\r\n\r\n\t\t\tthis._samples.innerText = 'compiling shader...';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._samples.innerText = `${ Math.floor( count ) } samples`;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetCredits( credits ) {\r\n\r\n\t\tthis._credits.innerHTML = credits;\r\n\r\n\t}\r\n\r\n\tsetDescription( description ) {\r\n\r\n\t\tthis._description.innerHTML = description;\r\n\r\n\t}\r\n\r\n}\r\n"],"names":[],"version":3,"file":"materialBall.f600b5ee.js.map","sourceRoot":"/__parcel_source_root/"}