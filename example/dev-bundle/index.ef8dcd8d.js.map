{"mappings":"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","sources":["example/index.js","node_modules/three/examples/jsm/loaders/RGBELoader.js","node_modules/three/examples/jsm/loaders/ColladaLoader.js","node_modules/three/examples/jsm/loaders/TGALoader.js","node_modules/three/examples/jsm/libs/stats.module.js","example/utils/generateRadialFloorTexture.js","example/utils/getScaledSettings.js","example/utils/LoaderElement.js","node_modules/three-mesh-bvh/src/workers/ParallelMeshBVHWorker.js","node_modules/three-mesh-bvh/src/workers/utils/WorkerBase.js","node_modules/three-mesh-bvh/src/workers/GenerateMeshBVHWorker.js","node_modules/@parcel/runtime-js/lib/runtime-395c6ce3ce0e5794.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-7fe5e0e3b5d0dbf4.js"],"sourcesContent":["import {\r\n\tACESFilmicToneMapping,\r\n\tNoToneMapping,\r\n\tBox3,\r\n\tLoadingManager,\r\n\tSphere,\r\n\tDoubleSide,\r\n\tMesh,\r\n\tMeshStandardMaterial,\r\n\tPlaneGeometry,\r\n\tMeshPhysicalMaterial,\r\n\tScene,\r\n\tPerspectiveCamera,\r\n\tOrthographicCamera,\r\n\tWebGLRenderer,\r\n\tEquirectangularReflectionMapping,\r\n} from 'three';\r\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { ColladaLoader } from 'three/examples/jsm/loaders/ColladaLoader.js';\r\nimport { LDrawLoader } from 'three/examples/jsm/loaders/LDrawLoader.js';\r\nimport { LDrawUtils } from 'three/examples/jsm/utils/LDrawUtils.js';\r\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\r\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\r\nimport { generateRadialFloorTexture } from './utils/generateRadialFloorTexture.js';\r\nimport { GradientEquirectTexture, WebGLPathTracer } from '../src/index.js';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { getScaledSettings } from './utils/getScaledSettings.js';\r\nimport { LoaderElement } from './utils/LoaderElement.js';\r\nimport { ParallelMeshBVHWorker } from 'three-mesh-bvh/src/workers/ParallelMeshBVHWorker.js';\r\n\r\nconst envMaps = {\r\n\t'Royal Esplanade': 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/royal_esplanade_1k.hdr',\r\n\t'Moonless Golf': 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/moonless_golf_1k.hdr',\r\n\t'Overpass': 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/pedestrian_overpass_1k.hdr',\r\n\t'Venice Sunset': 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/venice_sunset_1k.hdr',\r\n\t'Small Studio': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/studio_small_05_1k.hdr',\r\n\t'Pfalzer Forest': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/phalzer_forest_01_1k.hdr',\r\n\t'Leadenhall Market': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/leadenhall_market_1k.hdr',\r\n\t'Kloppenheim': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/kloppenheim_05_1k.hdr',\r\n\t'Hilly Terrain': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/hilly_terrain_01_1k.hdr',\r\n\t'Circus Arena': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/circus_arena_1k.hdr',\r\n\t'Chinese Garden': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/chinese_garden_1k.hdr',\r\n\t'Autoshop': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/autoshop_01_1k.hdr',\r\n\r\n\t'Measuring Lab': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/vintage_measuring_lab_2k.hdr',\r\n\t'Whale Skeleton': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/whale_skeleton_2k.hdr',\r\n\t'Hall of Mammals': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/hall_of_mammals_2k.hdr',\r\n\r\n\t'Drachenfels Cellar': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/drachenfels_cellar_2k.hdr',\r\n\t'Adams Place Bridge': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/adams_place_bridge_2k.hdr',\r\n\t'Sepulchral Chapel Rotunda': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/sepulchral_chapel_rotunda_2k.hdr',\r\n\t'Peppermint Powerplant': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/peppermint_powerplant_2k.hdr',\r\n\t'Noon Grass': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/noon_grass_2k.hdr',\r\n\t'Narrow Moonlit Road': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/narrow_moonlit_road_2k.hdr',\r\n\t'St Peters Square Night': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/st_peters_square_night_2k.hdr',\r\n\t'Brown Photostudio 01': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/brown_photostudio_01_2k.hdr',\r\n\t'Rainforest Trail': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/rainforest_trail_2k.hdr',\r\n\t'Brown Photostudio 07': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/brown_photostudio_07_2k.hdr',\r\n\t'Brown Photostudio 06': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/brown_photostudio_06_2k.hdr',\r\n\t'Dancing Hall': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/dancing_hall_2k.hdr',\r\n\t'Aristea Wreck Puresky': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/aristea_wreck_puresky_2k.hdr',\r\n\t'Modern Buildings 2': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/modern_buildings_2_2k.hdr',\r\n\t'Thatch Chapel': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/thatch_chapel_2k.hdr',\r\n\t'Vestibule': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/vestibule_2k.hdr',\r\n\t'Blocky Photo Studio': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/blocky_photo_studio_1k.hdr',\r\n\t'Christmas Photo Studio 07': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/christmas_photo_studio_07_2k.hdr',\r\n\t'Aerodynamics Workshop': 'https://raw.githubusercontent.com/disini/3d-demo-data/master/hdri/aerodynamics_workshop_1k.hdr',\r\n\r\n};\r\n\r\nconst models = window.MODEL_LIST || {};\r\n\r\nconst params = {\r\n\r\n\tmultipleImportanceSampling: true,\r\n\tacesToneMapping: true,\r\n\trenderScale: 1 / window.devicePixelRatio,\r\n\ttiles: 2,\r\n\r\n\tmodel: '',\r\n\r\n\tenvMap: envMaps[ 'Aristea Wreck Puresky' ],\r\n\r\n\tgradientTop: '#bfd8ff',\r\n\tgradientBottom: '#ffffff',\r\n\r\n\tenvironmentIntensity: 1.0,\r\n\tenvironmentRotation: 0,\r\n\r\n\tcameraProjection: 'Perspective',\r\n\r\n\tbackgroundType: 'Gradient',\r\n\tbgGradientTop: '#111111',\r\n\tbgGradientBottom: '#000000',\r\n\tbackgroundBlur: 0.0,\r\n\ttransparentBackground: false,\r\n\tcheckerboardTransparency: true,\r\n\r\n\tenable: true,\r\n\tbounces: 5,\r\n\tfilterGlossyFactor: 0.5,\r\n\tpause: false,\r\n\r\n\tfloorColor: '#111111',\r\n\tfloorOpacity: 1.0,\r\n\tfloorRoughness: 0.2,\r\n\tfloorMetalness: 0.2,\r\n\r\n\t...getScaledSettings(),\r\n\r\n};\r\n\r\nlet floorPlane, gui, stats;\r\nlet pathTracer, renderer, orthoCamera, perspectiveCamera, activeCamera;\r\nlet controls, scene, model;\r\nlet gradientMap;\r\nlet loader;\r\n\r\nconst orthoWidth = 2;\r\n\r\ninit();\r\n\r\nasync function init() {\r\n\r\n\tloader = new LoaderElement();\r\n\tloader.attach( document.body );\r\n\r\n\t// renderer\r\n\trenderer = new WebGLRenderer( { antialias: true } );\r\n\trenderer.toneMapping = ACESFilmicToneMapping;\r\n\tdocument.body.appendChild( renderer.domElement );\r\n\r\n\t// path tracer\r\n\tpathTracer = new WebGLPathTracer( renderer );\r\n\tpathTracer.setBVHWorker( new ParallelMeshBVHWorker() );\r\n\tpathTracer.physicallyCorrectLights = true;\r\n\tpathTracer.tiles.set( params.tiles, params.tiles );\r\n\tpathTracer.multipleImportanceSampling = params.multipleImportanceSampling;\r\n\tpathTracer.transmissiveBounces = 10;\r\n\r\n\t// camera\r\n\tconst aspect = window.innerWidth / window.innerHeight;\r\n\tperspectiveCamera = new PerspectiveCamera( 60, aspect, 0.025, 500 );\r\n\tperspectiveCamera.position.set( - 1, 0.25, 1 );\r\n\r\n\tconst orthoHeight = orthoWidth / aspect;\r\n\torthoCamera = new OrthographicCamera( orthoWidth / - 2, orthoWidth / 2, orthoHeight / 2, orthoHeight / - 2, 0, 100 );\r\n\torthoCamera.position.set( - 1, 0.25, 1 );\r\n\r\n\t// background map\r\n\tgradientMap = new GradientEquirectTexture();\r\n\tgradientMap.topColor.set( params.bgGradientTop );\r\n\tgradientMap.bottomColor.set( params.bgGradientBottom );\r\n\tgradientMap.update();\r\n\r\n\t// controls\r\n\tcontrols = new OrbitControls( perspectiveCamera, renderer.domElement );\r\n\tcontrols.addEventListener( 'change', () => {\r\n\r\n\t\tpathTracer.updateCamera();\r\n\r\n\t} );\r\n\r\n\t// scene\r\n\tscene = new Scene();\r\n\tscene.background = gradientMap;\r\n\r\n\tconst floorTex = generateRadialFloorTexture( 2048 );\r\n\tfloorPlane = new Mesh(\r\n\t\tnew PlaneGeometry(),\r\n\t\tnew MeshStandardMaterial( {\r\n\t\t\tmap: floorTex,\r\n\t\t\ttransparent: true,\r\n\t\t\tcolor: 0x111111,\r\n\t\t\troughness: 0.1,\r\n\t\t\tmetalness: 0.0,\r\n\t\t\tside: DoubleSide,\r\n\t\t} )\r\n\t);\r\n\tfloorPlane.scale.setScalar( 5 );\r\n\tfloorPlane.rotation.x = - Math.PI / 2;\r\n\tscene.add( floorPlane );\r\n\r\n\tstats = new Stats();\r\n\tdocument.body.appendChild( stats.dom );\r\n\r\n\tupdateCameraProjection( params.cameraProjection );\r\n\tonHashChange();\r\n\tupdateEnvMap();\r\n\tonResize();\r\n\r\n\tanimate();\r\n\r\n\twindow.addEventListener( 'resize', onResize );\r\n\twindow.addEventListener( 'hashchange', onHashChange );\r\n\r\n}\r\n\r\nfunction animate() {\r\n\r\n\trequestAnimationFrame( animate );\r\n\r\n\tstats.update();\r\n\r\n\tif ( ! model ) {\r\n\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tif ( params.enable ) {\r\n\r\n\t\tif ( ! params.pause || pathTracer.samples < 1 ) {\r\n\r\n\t\t\tpathTracer.renderSample();\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\trenderer.render( scene, activeCamera );\r\n\r\n\t}\r\n\r\n\tloader.setSamples( pathTracer.samples, pathTracer.isCompiling );\r\n\r\n}\r\n\r\nfunction onParamsChange() {\r\n\r\n\tpathTracer.multipleImportanceSampling = params.multipleImportanceSampling;\r\n\tpathTracer.bounces = params.bounces;\r\n\tpathTracer.filterGlossyFactor = params.filterGlossyFactor;\r\n\tpathTracer.renderScale = params.renderScale;\r\n\r\n\tfloorPlane.material.color.set( params.floorColor );\r\n\tfloorPlane.material.roughness = params.floorRoughness;\r\n\tfloorPlane.material.metalness = params.floorMetalness;\r\n\tfloorPlane.material.opacity = params.floorOpacity;\r\n\r\n\tscene.environmentIntensity = params.environmentIntensity;\r\n\tscene.environmentRotation.y = params.environmentRotation;\r\n\tscene.backgroundBlurriness = params.backgroundBlur;\r\n\r\n\tif ( params.backgroundType === 'Gradient' ) {\r\n\r\n\t\tgradientMap.topColor.set( params.bgGradientTop );\r\n\t\tgradientMap.bottomColor.set( params.bgGradientBottom );\r\n\t\tgradientMap.update();\r\n\r\n\t\tscene.background = gradientMap;\r\n\t\tscene.backgroundIntensity = 1;\r\n\t\tscene.environmentRotation.y = 0;\r\n\r\n\t} else {\r\n\r\n\t\tscene.background = scene.environment;\r\n\t\tscene.backgroundIntensity = params.environmentIntensity;\r\n\t\tscene.backgroundRotation.y = params.environmentRotation;\r\n\r\n\t}\r\n\r\n\tif ( params.transparentBackground ) {\r\n\r\n\t\tscene.background = null;\r\n\t\trenderer.setClearAlpha( 0 );\r\n\r\n\t}\r\n\r\n\tpathTracer.updateMaterials();\r\n\tpathTracer.updateEnvironment();\r\n\r\n}\r\n\r\nfunction onHashChange() {\r\n\r\n\tlet hashModel = '';\r\n\tif ( window.location.hash ) {\r\n\r\n\t\tconst modelName = decodeURI( window.location.hash.substring( 1 ) );\r\n\t\tif ( modelName in models ) {\r\n\r\n\t\t\thashModel = modelName;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tif ( ! ( hashModel in models ) ) {\r\n\r\n\t\thashModel = Object.keys( models )[ 0 ];\r\n\r\n\t}\r\n\r\n\tparams.model = hashModel;\r\n\tupdateModel();\r\n\r\n}\r\n\r\nfunction onResize() {\r\n\r\n\tconst w = window.innerWidth;\r\n\tconst h = window.innerHeight;\r\n\tconst dpr = window.devicePixelRatio;\r\n\r\n\trenderer.setSize( w, h );\r\n\trenderer.setPixelRatio( dpr );\r\n\r\n\tconst aspect = w / h;\r\n\tperspectiveCamera.aspect = aspect;\r\n\tperspectiveCamera.updateProjectionMatrix();\r\n\r\n\tconst orthoHeight = orthoWidth / aspect;\r\n\torthoCamera.top = orthoHeight / 2;\r\n\torthoCamera.bottom = orthoHeight / - 2;\r\n\torthoCamera.updateProjectionMatrix();\r\n\r\n\tpathTracer.updateCamera();\r\n\r\n}\r\n\r\nfunction buildGui() {\r\n\r\n\tif ( gui ) {\r\n\r\n\t\tgui.destroy();\r\n\r\n\t}\r\n\r\n\tgui = new GUI();\r\n\r\n\tgui.add( params, 'model', Object.keys( models ).sort() ).onChange( v => {\r\n\r\n\t\twindow.location.hash = v;\r\n\r\n\t} );\r\n\r\n\tconst pathTracingFolder = gui.addFolder( 'Path Tracer' );\r\n\tpathTracingFolder.add( params, 'enable' );\r\n\tpathTracingFolder.add( params, 'pause' );\r\n\tpathTracingFolder.add( params, 'multipleImportanceSampling' ).onChange( onParamsChange );\r\n\tpathTracingFolder.add( params, 'acesToneMapping' ).onChange( v => {\r\n\r\n\t\trenderer.toneMapping = v ? ACESFilmicToneMapping : NoToneMapping;\r\n\r\n\t} );\r\n\tpathTracingFolder.add( params, 'bounces', 1, 20, 1 ).onChange( onParamsChange );\r\n\tpathTracingFolder.add( params, 'filterGlossyFactor', 0, 1 ).onChange( onParamsChange );\r\n\tpathTracingFolder.add( params, 'renderScale', 0.1, 1.0, 0.01 ).onChange( () => {\r\n\r\n\t\tonParamsChange();\r\n\r\n\t} );\r\n\tpathTracingFolder.add( params, 'tiles', 1, 10, 1 ).onChange( v => {\r\n\r\n\t\tpathTracer.tiles.set( v, v );\r\n\r\n\t} );\r\n\tpathTracingFolder.add( params, 'cameraProjection', [ 'Perspective', 'Orthographic' ] ).onChange( v => {\r\n\r\n\t\tupdateCameraProjection( v );\r\n\r\n\t} );\r\n\tpathTracingFolder.open();\r\n\r\n\tconst environmentFolder = gui.addFolder( 'environment' );\r\n\tenvironmentFolder.add( params, 'envMap', envMaps ).name( 'map' ).onChange( updateEnvMap );\r\n\tenvironmentFolder.add( params, 'environmentIntensity', 0.0, 10.0 ).onChange( onParamsChange ).name( 'intensity' );\r\n\tenvironmentFolder.add( params, 'environmentRotation', 0, 2 * Math.PI ).onChange( onParamsChange );\r\n\tenvironmentFolder.open();\r\n\r\n\tconst backgroundFolder = gui.addFolder( 'background' );\r\n\tbackgroundFolder.add( params, 'backgroundType', [ 'Environment', 'Gradient' ] ).onChange( onParamsChange );\r\n\tbackgroundFolder.addColor( params, 'bgGradientTop' ).onChange( onParamsChange );\r\n\tbackgroundFolder.addColor( params, 'bgGradientBottom' ).onChange( onParamsChange );\r\n\tbackgroundFolder.add( params, 'backgroundBlur', 0, 1 ).onChange( onParamsChange );\r\n\tbackgroundFolder.add( params, 'transparentBackground', 0, 1 ).onChange( onParamsChange );\r\n\tbackgroundFolder.add( params, 'checkerboardTransparency' ).onChange( v => {\r\n\r\n\t\tif ( v ) document.body.classList.add( 'checkerboard' );\r\n\t\telse document.body.classList.remove( 'checkerboard' );\r\n\r\n\t} );\r\n\r\n\tconst floorFolder = gui.addFolder( 'floor' );\r\n\tfloorFolder.addColor( params, 'floorColor' ).onChange( onParamsChange );\r\n\tfloorFolder.add( params, 'floorRoughness', 0, 1 ).onChange( onParamsChange );\r\n\tfloorFolder.add( params, 'floorMetalness', 0, 1 ).onChange( onParamsChange );\r\n\tfloorFolder.add( params, 'floorOpacity', 0, 1 ).onChange( onParamsChange );\r\n\tfloorFolder.close();\r\n\r\n}\r\n\r\nfunction updateEnvMap() {\r\n\r\n\tnew RGBELoader()\r\n\t\t.load( params.envMap, texture => {\r\n\r\n\t\t\tif ( scene.environment ) {\r\n\r\n\t\t\t\tscene.environment.dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.mapping = EquirectangularReflectionMapping;\r\n\t\t\tscene.environment = texture;\r\n\t\t\tpathTracer.updateEnvironment();\r\n\r\n\t\t} );\r\n\r\n}\r\n\r\nfunction updateCameraProjection( cameraProjection ) {\r\n\r\n\t// sync position\r\n\tif ( activeCamera ) {\r\n\r\n\t\tperspectiveCamera.position.copy( activeCamera.position );\r\n\t\torthoCamera.position.copy( activeCamera.position );\r\n\r\n\t}\r\n\r\n\t// set active camera\r\n\tif ( cameraProjection === 'Perspective' ) {\r\n\r\n\t\tactiveCamera = perspectiveCamera;\r\n\r\n\t} else {\r\n\r\n\t\tactiveCamera = orthoCamera;\r\n\r\n\t}\r\n\r\n\tcontrols.object = activeCamera;\r\n\tcontrols.update();\r\n\r\n\tpathTracer.setCamera( activeCamera );\r\n\r\n}\r\n\r\nfunction convertOpacityToTransmission( model, ior ) {\r\n\r\n\tmodel.traverse( c => {\r\n\r\n\t\tif ( c.material ) {\r\n\r\n\t\t\tconst material = c.material;\r\n\t\t\tif ( material.opacity < 0.65 && material.opacity > 0.2 ) {\r\n\r\n\t\t\t\tconst newMaterial = new MeshPhysicalMaterial();\r\n\t\t\t\tfor ( const key in material ) {\r\n\r\n\t\t\t\t\tif ( key in material ) {\r\n\r\n\t\t\t\t\t\tif ( material[ key ] === null ) {\r\n\r\n\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( material[ key ].isTexture ) {\r\n\r\n\t\t\t\t\t\t\tnewMaterial[ key ] = material[ key ];\r\n\r\n\t\t\t\t\t\t} else if ( material[ key ].copy && material[ key ].constructor === newMaterial[ key ].constructor ) {\r\n\r\n\t\t\t\t\t\t\tnewMaterial[ key ].copy( material[ key ] );\r\n\r\n\t\t\t\t\t\t} else if ( ( typeof material[ key ] ) === 'number' ) {\r\n\r\n\t\t\t\t\t\t\tnewMaterial[ key ] = material[ key ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnewMaterial.opacity = 1.0;\r\n\t\t\t\tnewMaterial.transmission = 1.0;\r\n\t\t\t\tnewMaterial.ior = ior;\r\n\r\n\t\t\t\tconst hsl = {};\r\n\t\t\t\tnewMaterial.color.getHSL( hsl );\r\n\t\t\t\thsl.l = Math.max( hsl.l, 0.35 );\r\n\t\t\t\tnewMaterial.color.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\t\t\tc.material = newMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\nasync function updateModel() {\r\n\r\n\tif ( gui ) {\r\n\r\n\t\tdocument.body.classList.remove( 'checkerboard' );\r\n\t\tgui.destroy();\r\n\t\tgui = null;\r\n\r\n\t}\r\n\r\n\tconst modelInfo = models[ params.model ];\r\n\r\n\trenderer.domElement.style.visibility = 'hidden';\r\n\tloader.setPercentage( 0 );\r\n\r\n\tif ( model ) {\r\n\r\n\t\tmodel.traverse( c => {\r\n\r\n\t\t\tif ( c.material ) {\r\n\r\n\t\t\t\tconst material = c.material;\r\n\t\t\t\tfor ( const key in material ) {\r\n\r\n\t\t\t\t\tif ( material[ key ] && material[ key ].isTexture ) {\r\n\r\n\t\t\t\t\t\tmaterial[ key ].dispose();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tscene.remove( model );\r\n\t\tmodel = null;\r\n\r\n\t}\r\n\r\n\ttry {\r\n\r\n\t\tmodel = await loadModel( modelInfo.url, v => {\r\n\r\n\t\t\tloader.setPercentage( 0.5 * v );\r\n\r\n\t\t} );\r\n\r\n\t} catch ( err ) {\r\n\r\n\t\tloader.setCredits( 'Failed to load model:' + err.message );\r\n\t\tloader.setPercentage( 1 );\r\n\r\n\t}\r\n\r\n\t// update after model load\r\n\t// TODO: clean up\r\n\tif ( modelInfo.removeEmission ) {\r\n\r\n\t\tmodel.traverse( c => {\r\n\r\n\t\t\tif ( c.material ) {\r\n\r\n\t\t\t\tc.material.emissiveMap = null;\r\n\t\t\t\tc.material.emissiveIntensity = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( modelInfo.opacityToTransmission ) {\r\n\r\n\t\tconvertOpacityToTransmission( model, modelInfo.ior || 1.5 );\r\n\r\n\t}\r\n\r\n\tmodel.traverse( c => {\r\n\r\n\t\tif ( c.material ) {\r\n\r\n\t\t\t// set the thickness so we render the material as a volumetric object\r\n\t\t\tc.material.thickness = 1.0;\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n\tif ( modelInfo.postProcess ) {\r\n\r\n\t\tmodelInfo.postProcess( model );\r\n\r\n\t}\r\n\r\n\t// rotate model after so it doesn't affect the bounding sphere scale\r\n\tif ( modelInfo.rotation ) {\r\n\r\n\t\tmodel.rotation.set( ...modelInfo.rotation );\r\n\r\n\t}\r\n\r\n\t// center the model\r\n\tconst box = new Box3();\r\n\tbox.setFromObject( model );\r\n\tmodel.position\r\n\t\t.addScaledVector( box.min, - 0.5 )\r\n\t\t.addScaledVector( box.max, - 0.5 );\r\n\r\n\tconst sphere = new Sphere();\r\n\tbox.getBoundingSphere( sphere );\r\n\r\n\tmodel.scale.setScalar( 1 / sphere.radius );\r\n\tmodel.position.multiplyScalar( 1 / sphere.radius );\r\n\tbox.setFromObject( model );\r\n\tfloorPlane.position.y = box.min.y;\r\n\r\n\tscene.add( model );\r\n\r\n\tawait pathTracer.setSceneAsync( scene, activeCamera, {\r\n\r\n\t\tonProgress: v => loader.setPercentage( 0.5 + 0.5 * v ),\r\n\r\n\t} );\r\n\r\n\tloader.setPercentage( 1 );\r\n\tloader.setCredits( modelInfo.credit || '' );\r\n\tparams.bounces = modelInfo.bounces || 5;\r\n\tparams.floorColor = modelInfo.floorColor || '#111111';\r\n\tparams.floorRoughness = modelInfo.floorRoughness || 0.2;\r\n\tparams.floorMetalness = modelInfo.floorMetalness || 0.2;\r\n\tparams.bgGradientTop = modelInfo.gradientTop || '#111111';\r\n\tparams.bgGradientBottom = modelInfo.gradientBot || '#000000';\r\n\r\n\tbuildGui();\r\n\tonParamsChange();\r\n\r\n\trenderer.domElement.style.visibility = 'visible';\r\n\tif ( params.checkerboardTransparency ) {\r\n\r\n\t\tdocument.body.classList.add( 'checkerboard' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nasync function loadModel( url, onProgress ) {\r\n\r\n\t// TODO: clean up\r\n\tconst manager = new LoadingManager();\r\n\tif ( /dae$/i.test( url ) ) {\r\n\r\n\t\tconst complete = new Promise( resolve => manager.onLoad = resolve );\r\n\t\tconst res = await new ColladaLoader( manager ).loadAsync( url, progress => {\r\n\r\n\t\t\tif ( progress.total !== 0 && progress.total >= progress.loaded ) {\r\n\r\n\t\t\t\tonProgress( progress.loaded / progress.total );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\t\tawait complete;\r\n\r\n\t\tres.scene.scale.setScalar( 1 );\r\n\t\tres.scene.traverse( c => {\r\n\r\n\t\t\tconst { material } = c;\r\n\t\t\tif ( material && material.isMeshPhongMaterial ) {\r\n\r\n\t\t\t\tc.material = new MeshStandardMaterial( {\r\n\r\n\t\t\t\t\tcolor: material.color,\r\n\t\t\t\t\troughness: material.roughness || 0,\r\n\t\t\t\t\tmetalness: material.metalness || 0,\r\n\t\t\t\t\tmap: material.map || null,\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\treturn res.scene;\r\n\r\n\t} else if ( /(gltf|glb)$/i.test( url ) ) {\r\n\r\n\t\tconst complete = new Promise( resolve => manager.onLoad = resolve );\r\n\t\tconst gltf = await new GLTFLoader( manager ).setMeshoptDecoder( MeshoptDecoder ).loadAsync( url, progress => {\r\n\r\n\t\t\tif ( progress.total !== 0 && progress.total >= progress.loaded ) {\r\n\r\n\t\t\t\tonProgress( progress.loaded / progress.total );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\t\tawait complete;\r\n\r\n\t\treturn gltf.scene;\r\n\r\n\t} else if ( /mpd$/i.test( url ) ) {\r\n\r\n\t\tmanager.onProgress = ( url, loaded, total ) => {\r\n\r\n\t\t\tloader.setPercentage( loaded / total );\r\n\r\n\t\t};\r\n\r\n\t\tconst complete = new Promise( resolve => manager.onLoad = resolve );\r\n\t\tconst ldrawLoader = new LDrawLoader( manager );\r\n\t\tawait ldrawLoader.preloadMaterials( 'https://raw.githubusercontent.com/disini/ldraw-parts-library/master/colors/ldcfgalt.ldr' );\r\n\t\tconst result = await ldrawLoader\r\n\t\t\t.setPartsLibraryPath( 'https://raw.githubusercontent.com/disini/ldraw-parts-library/master/complete/ldraw/' )\r\n\t\t\t.loadAsync( url );\r\n\t\tawait complete;\r\n\r\n\t\tconst model = LDrawUtils.mergeObject( result );\r\n\t\tmodel.rotation.set( Math.PI, 0, 0 );\r\n\r\n\t\tconst toRemove = [];\r\n\t\tmodel.traverse( c => {\r\n\r\n\t\t\tif ( c.isLineSegments ) {\r\n\r\n\t\t\t\ttoRemove.push( c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( c.isMesh ) {\r\n\r\n\t\t\t\tc.material.roughness *= 0.25;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\ttoRemove.forEach( c => {\r\n\r\n\t\t\tc.parent.remove( c );\r\n\r\n\t\t} );\r\n\r\n\t\treturn model;\r\n\r\n\t}\r\n\r\n}\r\n","import {\n\tDataTextureLoader,\n\tDataUtils,\n\tFloatType,\n\tHalfFloatType,\n\tLinearFilter,\n\tLinearSRGBColorSpace\n} from 'three';\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nclass RGBELoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.type = HalfFloatType;\n\n\t}\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse( buffer ) {\n\n\t\tconst\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: throw new Error( 'THREE.RGBELoader: Read Error: ' + ( msg || '' ) );\n\t\t\t\t\tcase rgbe_write_error: throw new Error( 'THREE.RGBELoader: Write Error: ' + ( msg || '' ) );\n\t\t\t\t\tcase rgbe_format_error: throw new Error( 'THREE.RGBELoader: Bad File Format: ' + ( msg || '' ) );\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: throw new Error( 'THREE.RGBELoader: Memory Error: ' + ( msg || '' ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = '\\n',\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tconst chunkSize = 128;\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tlet p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '',\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\n\t\t\t\t// regexes to parse header info fields\n\t\t\t\tconst magic_token_re = /^#\\?(\\S+)/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tlet line, match;\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_read_error, 'no header found' );\n\n\t\t\t\t}\n\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'bad initial token' );\n\n\t\t\t\t}\n\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + '\\n';\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'missing format specifier' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'missing image size specifier' );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tconst scanline_width = w;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'wrong scanline width' );\n\n\t\t\t\t}\n\n\t\t\t\tconst data_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba.length ) {\n\n\t\t\t\t\trgbe_error( rgbe_memory_error, 'unable to allocate buffer space' );\n\n\t\t\t\t}\n\n\t\t\t\tlet offset = 0, pos = 0;\n\n\t\t\t\tconst ptr_end = 4 * scanline_width;\n\t\t\t\tconst rgbeStart = new Uint8Array( 4 );\n\t\t\t\tconst scanline_buffer = new Uint8Array( ptr_end );\n\t\t\t\tlet num_scanlines = h;\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\trgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\trgbe_error( rgbe_format_error, 'bad rgbe scanline format' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tlet ptr = 0, count;\n\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tconst isEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\trgbe_error( rgbe_format_error, 'bad scanline data' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tconst byteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tconst l = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\tlet off = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tconst RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\t\t\tdestArray[ destOffset + 3 ] = 1;\n\n\t\t};\n\n\t\tconst RGBEByteToRGBHalf = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\t// clamping to 65504, the maximum representable value in float16\n\t\t\tdestArray[ destOffset + 0 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 0 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 1 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 1 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 2 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 2 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 3 ] = DataUtils.toHalfFloat( 1 );\n\n\t\t};\n\n\t\tconst byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tconst rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tconst w = rgbe_header_info.width,\n\t\t\th = rgbe_header_info.height,\n\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\n\t\tlet data, type;\n\t\tlet numElements;\n\n\t\tswitch ( this.type ) {\n\n\t\t\tcase FloatType:\n\n\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\tconst floatArray = new Float32Array( numElements * 4 );\n\n\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 4 );\n\n\t\t\t\t}\n\n\t\t\t\tdata = floatArray;\n\t\t\t\ttype = FloatType;\n\t\t\t\tbreak;\n\n\t\t\tcase HalfFloatType:\n\n\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\tconst halfArray = new Uint16Array( numElements * 4 );\n\n\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 4 );\n\n\t\t\t\t}\n\n\t\t\t\tdata = halfArray;\n\t\t\t\ttype = HalfFloatType;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tthrow new Error( 'THREE.RGBELoader: Unsupported type: ' + this.type );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: w, height: h,\n\t\t\tdata: data,\n\t\t\theader: rgbe_header_info.string,\n\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\texposure: rgbe_header_info.exposure,\n\t\t\ttype: type\n\t\t};\n\n\t}\n\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase FloatType:\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.colorSpace = LinearSRGBColorSpace;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn super.load( url, onLoadCallback, onProgress, onError );\n\n\t}\n\n}\n\nexport { RGBELoader };\n","import {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tFrontSide,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tScene,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTextureLoader,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tSRGBColorSpace\n} from 'three';\nimport { TGALoader } from '../loaders/TGALoader.js';\n\nclass ColladaLoader extends Loader {\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( text, path ) {\n\n\t\tfunction getElementsByTagName( xml, name ) {\n\n\t\t\t// Non recursive xml.getElementsByTagName() ...\n\n\t\t\tconst array = [];\n\t\t\tconst childNodes = xml.childNodes;\n\n\t\t\tfor ( let i = 0, l = childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = childNodes[ i ];\n\n\t\t\t\tif ( child.nodeName === name ) {\n\n\t\t\t\t\tarray.push( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseStrings( text ) {\n\n\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\tconst parts = text.trim().split( /\\s+/ );\n\t\t\tconst array = new Array( parts.length );\n\n\t\t\tfor ( let i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = parts[ i ];\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseFloats( text ) {\n\n\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\tconst parts = text.trim().split( /\\s+/ );\n\t\t\tconst array = new Array( parts.length );\n\n\t\t\tfor ( let i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = parseFloat( parts[ i ] );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseInts( text ) {\n\n\t\t\tif ( text.length === 0 ) return [];\n\n\t\t\tconst parts = text.trim().split( /\\s+/ );\n\t\t\tconst array = new Array( parts.length );\n\n\t\t\tfor ( let i = 0, l = parts.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ] = parseInt( parts[ i ] );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tfunction parseId( text ) {\n\n\t\t\treturn text.substring( 1 );\n\n\t\t}\n\n\t\tfunction generateId() {\n\n\t\t\treturn 'three_default_' + ( count ++ );\n\n\t\t}\n\n\t\tfunction isEmpty( object ) {\n\n\t\t\treturn Object.keys( object ).length === 0;\n\n\t\t}\n\n\t\t// asset\n\n\t\tfunction parseAsset( xml ) {\n\n\t\t\treturn {\n\t\t\t\tunit: parseAssetUnit( getElementsByTagName( xml, 'unit' )[ 0 ] ),\n\t\t\t\tupAxis: parseAssetUpAxis( getElementsByTagName( xml, 'up_axis' )[ 0 ] )\n\t\t\t};\n\n\t\t}\n\n\t\tfunction parseAssetUnit( xml ) {\n\n\t\t\tif ( ( xml !== undefined ) && ( xml.hasAttribute( 'meter' ) === true ) ) {\n\n\t\t\t\treturn parseFloat( xml.getAttribute( 'meter' ) );\n\n\t\t\t} else {\n\n\t\t\t\treturn 1; // default 1 meter\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAssetUpAxis( xml ) {\n\n\t\t\treturn xml !== undefined ? xml.textContent : 'Y_UP';\n\n\t\t}\n\n\t\t// library\n\n\t\tfunction parseLibrary( xml, libraryName, nodeName, parser ) {\n\n\t\t\tconst library = getElementsByTagName( xml, libraryName )[ 0 ];\n\n\t\t\tif ( library !== undefined ) {\n\n\t\t\t\tconst elements = getElementsByTagName( library, nodeName );\n\n\t\t\t\tfor ( let i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\t\tparser( elements[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction buildLibrary( data, builder ) {\n\n\t\t\tfor ( const name in data ) {\n\n\t\t\t\tconst object = data[ name ];\n\t\t\t\tobject.build = builder( data[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// get\n\n\t\tfunction getBuild( data, builder ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\tdata.build = builder( data );\n\n\t\t\treturn data.build;\n\n\t\t}\n\n\t\t// animation\n\n\t\tfunction parseAnimation( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsources: {},\n\t\t\t\tsamplers: {},\n\t\t\t\tchannels: {}\n\t\t\t};\n\n\t\t\tlet hasChildren = false;\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tlet id;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tid = child.getAttribute( 'id' );\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'sampler':\n\t\t\t\t\t\tid = child.getAttribute( 'id' );\n\t\t\t\t\t\tdata.samplers[ id ] = parseAnimationSampler( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'channel':\n\t\t\t\t\t\tid = child.getAttribute( 'target' );\n\t\t\t\t\t\tdata.channels[ id ] = parseAnimationChannel( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'animation':\n\t\t\t\t\t\t// hierarchy of related animations\n\t\t\t\t\t\tparseAnimation( child );\n\t\t\t\t\t\thasChildren = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasChildren === false ) {\n\n\t\t\t\t// since 'id' attributes can be optional, it's necessary to generate a UUID for unqiue assignment\n\n\t\t\t\tlibrary.animations[ xml.getAttribute( 'id' ) || MathUtils.generateUUID() ] = data;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimationSampler( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tinputs: {},\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tdata.inputs[ semantic ] = id;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseAnimationChannel( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tconst target = xml.getAttribute( 'target' );\n\n\t\t\t// parsing SID Addressing Syntax\n\n\t\t\tlet parts = target.split( '/' );\n\n\t\t\tconst id = parts.shift();\n\t\t\tlet sid = parts.shift();\n\n\t\t\t// check selection syntax\n\n\t\t\tconst arraySyntax = ( sid.indexOf( '(' ) !== - 1 );\n\t\t\tconst memberSyntax = ( sid.indexOf( '.' ) !== - 1 );\n\n\t\t\tif ( memberSyntax ) {\n\n\t\t\t\t//  member selection access\n\n\t\t\t\tparts = sid.split( '.' );\n\t\t\t\tsid = parts.shift();\n\t\t\t\tdata.member = parts.shift();\n\n\t\t\t} else if ( arraySyntax ) {\n\n\t\t\t\t// array-access syntax. can be used to express fields in one-dimensional vectors or two-dimensional matrices.\n\n\t\t\t\tconst indices = sid.split( '(' );\n\t\t\t\tsid = indices.shift();\n\n\t\t\t\tfor ( let i = 0; i < indices.length; i ++ ) {\n\n\t\t\t\t\tindices[ i ] = parseInt( indices[ i ].replace( /\\)/, '' ) );\n\n\t\t\t\t}\n\n\t\t\t\tdata.indices = indices;\n\n\t\t\t}\n\n\t\t\tdata.id = id;\n\t\t\tdata.sid = sid;\n\n\t\t\tdata.arraySyntax = arraySyntax;\n\t\t\tdata.memberSyntax = memberSyntax;\n\n\t\t\tdata.sampler = parseId( xml.getAttribute( 'source' ) );\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildAnimation( data ) {\n\n\t\t\tconst tracks = [];\n\n\t\t\tconst channels = data.channels;\n\t\t\tconst samplers = data.samplers;\n\t\t\tconst sources = data.sources;\n\n\t\t\tfor ( const target in channels ) {\n\n\t\t\t\tif ( channels.hasOwnProperty( target ) ) {\n\n\t\t\t\t\tconst channel = channels[ target ];\n\t\t\t\t\tconst sampler = samplers[ channel.sampler ];\n\n\t\t\t\t\tconst inputId = sampler.inputs.INPUT;\n\t\t\t\t\tconst outputId = sampler.inputs.OUTPUT;\n\n\t\t\t\t\tconst inputSource = sources[ inputId ];\n\t\t\t\t\tconst outputSource = sources[ outputId ];\n\n\t\t\t\t\tconst animation = buildAnimationChannel( channel, inputSource, outputSource );\n\n\t\t\t\t\tcreateKeyframeTracks( animation, tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn tracks;\n\n\t\t}\n\n\t\tfunction getAnimation( id ) {\n\n\t\t\treturn getBuild( library.animations[ id ], buildAnimation );\n\n\t\t}\n\n\t\tfunction buildAnimationChannel( channel, inputSource, outputSource ) {\n\n\t\t\tconst node = library.nodes[ channel.id ];\n\t\t\tconst object3D = getNode( node.id );\n\n\t\t\tconst transform = node.transforms[ channel.sid ];\n\t\t\tconst defaultMatrix = node.matrix.clone().transpose();\n\n\t\t\tlet time, stride;\n\t\t\tlet i, il, j, jl;\n\n\t\t\tconst data = {};\n\n\t\t\t// the collada spec allows the animation of data in various ways.\n\t\t\t// depending on the transform type (matrix, translate, rotate, scale), we execute different logic\n\n\t\t\tswitch ( transform ) {\n\n\t\t\t\tcase 'matrix':\n\n\t\t\t\t\tfor ( i = 0, il = inputSource.array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\ttime = inputSource.array[ i ];\n\t\t\t\t\t\tstride = i * outputSource.stride;\n\n\t\t\t\t\t\tif ( data[ time ] === undefined ) data[ time ] = {};\n\n\t\t\t\t\t\tif ( channel.arraySyntax === true ) {\n\n\t\t\t\t\t\t\tconst value = outputSource.array[ stride ];\n\t\t\t\t\t\t\tconst index = channel.indices[ 0 ] + 4 * channel.indices[ 1 ];\n\n\t\t\t\t\t\t\tdata[ time ][ index ] = value;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( j = 0, jl = outputSource.stride; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tdata[ time ][ j ] = outputSource.array[ stride + j ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'translate':\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'scale':\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tconst keyframes = prepareAnimationData( data, defaultMatrix );\n\n\t\t\tconst animation = {\n\t\t\t\tname: object3D.uuid,\n\t\t\t\tkeyframes: keyframes\n\t\t\t};\n\n\t\t\treturn animation;\n\n\t\t}\n\n\t\tfunction prepareAnimationData( data, defaultMatrix ) {\n\n\t\t\tconst keyframes = [];\n\n\t\t\t// transfer data into a sortable array\n\n\t\t\tfor ( const time in data ) {\n\n\t\t\t\tkeyframes.push( { time: parseFloat( time ), value: data[ time ] } );\n\n\t\t\t}\n\n\t\t\t// ensure keyframes are sorted by time\n\n\t\t\tkeyframes.sort( ascending );\n\n\t\t\t// now we clean up all animation data, so we can use them for keyframe tracks\n\n\t\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\t\ttransformAnimationData( keyframes, i, defaultMatrix.elements[ i ] );\n\n\t\t\t}\n\n\t\t\treturn keyframes;\n\n\t\t\t// array sort function\n\n\t\t\tfunction ascending( a, b ) {\n\n\t\t\t\treturn a.time - b.time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst position = new Vector3();\n\t\tconst scale = new Vector3();\n\t\tconst quaternion = new Quaternion();\n\n\t\tfunction createKeyframeTracks( animation, tracks ) {\n\n\t\t\tconst keyframes = animation.keyframes;\n\t\t\tconst name = animation.name;\n\n\t\t\tconst times = [];\n\t\t\tconst positionData = [];\n\t\t\tconst quaternionData = [];\n\t\t\tconst scaleData = [];\n\n\t\t\tfor ( let i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\tconst keyframe = keyframes[ i ];\n\n\t\t\t\tconst time = keyframe.time;\n\t\t\t\tconst value = keyframe.value;\n\n\t\t\t\tmatrix.fromArray( value ).transpose();\n\t\t\t\tmatrix.decompose( position, quaternion, scale );\n\n\t\t\t\ttimes.push( time );\n\t\t\t\tpositionData.push( position.x, position.y, position.z );\n\t\t\t\tquaternionData.push( quaternion.x, quaternion.y, quaternion.z, quaternion.w );\n\t\t\t\tscaleData.push( scale.x, scale.y, scale.z );\n\n\t\t\t}\n\n\t\t\tif ( positionData.length > 0 ) tracks.push( new VectorKeyframeTrack( name + '.position', times, positionData ) );\n\t\t\tif ( quaternionData.length > 0 ) tracks.push( new QuaternionKeyframeTrack( name + '.quaternion', times, quaternionData ) );\n\t\t\tif ( scaleData.length > 0 ) tracks.push( new VectorKeyframeTrack( name + '.scale', times, scaleData ) );\n\n\t\t\treturn tracks;\n\n\t\t}\n\n\t\tfunction transformAnimationData( keyframes, property, defaultValue ) {\n\n\t\t\tlet keyframe;\n\n\t\t\tlet empty = true;\n\t\t\tlet i, l;\n\n\t\t\t// check, if values of a property are missing in our keyframes\n\n\t\t\tfor ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\tkeyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] === undefined ) {\n\n\t\t\t\t\tkeyframe.value[ property ] = null; // mark as missing\n\n\t\t\t\t} else {\n\n\t\t\t\t\tempty = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( empty === true ) {\n\n\t\t\t\t// no values at all, so we set a default value\n\n\t\t\t\tfor ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\t\tkeyframe = keyframes[ i ];\n\n\t\t\t\t\tkeyframe.value[ property ] = defaultValue;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// filling gaps\n\n\t\t\t\tcreateMissingKeyframes( keyframes, property );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction createMissingKeyframes( keyframes, property ) {\n\n\t\t\tlet prev, next;\n\n\t\t\tfor ( let i = 0, l = keyframes.length; i < l; i ++ ) {\n\n\t\t\t\tconst keyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] === null ) {\n\n\t\t\t\t\tprev = getPrev( keyframes, i, property );\n\t\t\t\t\tnext = getNext( keyframes, i, property );\n\n\t\t\t\t\tif ( prev === null ) {\n\n\t\t\t\t\t\tkeyframe.value[ property ] = next.value[ property ];\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( next === null ) {\n\n\t\t\t\t\t\tkeyframe.value[ property ] = prev.value[ property ];\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tinterpolate( keyframe, prev, next, property );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getPrev( keyframes, i, property ) {\n\n\t\t\twhile ( i >= 0 ) {\n\n\t\t\t\tconst keyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] !== null ) return keyframe;\n\n\t\t\t\ti --;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction getNext( keyframes, i, property ) {\n\n\t\t\twhile ( i < keyframes.length ) {\n\n\t\t\t\tconst keyframe = keyframes[ i ];\n\n\t\t\t\tif ( keyframe.value[ property ] !== null ) return keyframe;\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfunction interpolate( key, prev, next, property ) {\n\n\t\t\tif ( ( next.time - prev.time ) === 0 ) {\n\n\t\t\t\tkey.value[ property ] = prev.value[ property ];\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tkey.value[ property ] = ( ( key.time - prev.time ) * ( next.value[ property ] - prev.value[ property ] ) / ( next.time - prev.time ) ) + prev.value[ property ];\n\n\t\t}\n\n\t\t// animation clips\n\n\t\tfunction parseAnimationClip( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'id' ) || 'default',\n\t\t\t\tstart: parseFloat( xml.getAttribute( 'start' ) || 0 ),\n\t\t\t\tend: parseFloat( xml.getAttribute( 'end' ) || 0 ),\n\t\t\t\tanimations: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'instance_animation':\n\t\t\t\t\t\tdata.animations.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.clips[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildAnimationClip( data ) {\n\n\t\t\tconst tracks = [];\n\n\t\t\tconst name = data.name;\n\t\t\tconst duration = ( data.end - data.start ) || - 1;\n\t\t\tconst animations = data.animations;\n\n\t\t\tfor ( let i = 0, il = animations.length; i < il; i ++ ) {\n\n\t\t\t\tconst animationTracks = getAnimation( animations[ i ] );\n\n\t\t\t\tfor ( let j = 0, jl = animationTracks.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttracks.push( animationTracks[ j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, duration, tracks );\n\n\t\t}\n\n\t\tfunction getAnimationClip( id ) {\n\n\t\t\treturn getBuild( library.clips[ id ], buildAnimationClip );\n\n\t\t}\n\n\t\t// controller\n\n\t\tfunction parseController( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'skin':\n\t\t\t\t\t\t// there is exactly one skin per controller\n\t\t\t\t\t\tdata.id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tdata.skin = parseSkin( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'morph':\n\t\t\t\t\t\tdata.id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Morph target animation not supported yet.' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.controllers[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseSkin( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsources: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'bind_shape_matrix':\n\t\t\t\t\t\tdata.bindShapeMatrix = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tconst id = child.getAttribute( 'id' );\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'joints':\n\t\t\t\t\t\tdata.joints = parseJoints( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vertex_weights':\n\t\t\t\t\t\tdata.vertexWeights = parseVertexWeights( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseJoints( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tinputs: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tdata.inputs[ semantic ] = id;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseVertexWeights( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tinputs: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconst offset = parseInt( child.getAttribute( 'offset' ) );\n\t\t\t\t\t\tdata.inputs[ semantic ] = { id: id, offset: offset };\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vcount':\n\t\t\t\t\t\tdata.vcount = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tdata.v = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildController( data ) {\n\n\t\t\tconst build = {\n\t\t\t\tid: data.id\n\t\t\t};\n\n\t\t\tconst geometry = library.geometries[ build.id ];\n\n\t\t\tif ( data.skin !== undefined ) {\n\n\t\t\t\tbuild.skin = buildSkin( data.skin );\n\n\t\t\t\t// we enhance the 'sources' property of the corresponding geometry with our skin data\n\n\t\t\t\tgeometry.sources.skinIndices = build.skin.indices;\n\t\t\t\tgeometry.sources.skinWeights = build.skin.weights;\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction buildSkin( data ) {\n\n\t\t\tconst BONE_LIMIT = 4;\n\n\t\t\tconst build = {\n\t\t\t\tjoints: [], // this must be an array to preserve the joint order\n\t\t\t\tindices: {\n\t\t\t\t\tarray: [],\n\t\t\t\t\tstride: BONE_LIMIT\n\t\t\t\t},\n\t\t\t\tweights: {\n\t\t\t\t\tarray: [],\n\t\t\t\t\tstride: BONE_LIMIT\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst sources = data.sources;\n\t\t\tconst vertexWeights = data.vertexWeights;\n\n\t\t\tconst vcount = vertexWeights.vcount;\n\t\t\tconst v = vertexWeights.v;\n\t\t\tconst jointOffset = vertexWeights.inputs.JOINT.offset;\n\t\t\tconst weightOffset = vertexWeights.inputs.WEIGHT.offset;\n\n\t\t\tconst jointSource = data.sources[ data.joints.inputs.JOINT ];\n\t\t\tconst inverseSource = data.sources[ data.joints.inputs.INV_BIND_MATRIX ];\n\n\t\t\tconst weights = sources[ vertexWeights.inputs.WEIGHT.id ].array;\n\t\t\tlet stride = 0;\n\n\t\t\tlet i, j, l;\n\n\t\t\t// process skin data for each vertex\n\n\t\t\tfor ( i = 0, l = vcount.length; i < l; i ++ ) {\n\n\t\t\t\tconst jointCount = vcount[ i ]; // this is the amount of joints that affect a single vertex\n\t\t\t\tconst vertexSkinData = [];\n\n\t\t\t\tfor ( j = 0; j < jointCount; j ++ ) {\n\n\t\t\t\t\tconst skinIndex = v[ stride + jointOffset ];\n\t\t\t\t\tconst weightId = v[ stride + weightOffset ];\n\t\t\t\t\tconst skinWeight = weights[ weightId ];\n\n\t\t\t\t\tvertexSkinData.push( { index: skinIndex, weight: skinWeight } );\n\n\t\t\t\t\tstride += 2;\n\n\t\t\t\t}\n\n\t\t\t\t// we sort the joints in descending order based on the weights.\n\t\t\t\t// this ensures, we only procced the most important joints of the vertex\n\n\t\t\t\tvertexSkinData.sort( descending );\n\n\t\t\t\t// now we provide for each vertex a set of four index and weight values.\n\t\t\t\t// the order of the skin data matches the order of vertices\n\n\t\t\t\tfor ( j = 0; j < BONE_LIMIT; j ++ ) {\n\n\t\t\t\t\tconst d = vertexSkinData[ j ];\n\n\t\t\t\t\tif ( d !== undefined ) {\n\n\t\t\t\t\t\tbuild.indices.array.push( d.index );\n\t\t\t\t\t\tbuild.weights.array.push( d.weight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbuild.indices.array.push( 0 );\n\t\t\t\t\t\tbuild.weights.array.push( 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// setup bind matrix\n\n\t\t\tif ( data.bindShapeMatrix ) {\n\n\t\t\t\tbuild.bindMatrix = new Matrix4().fromArray( data.bindShapeMatrix ).transpose();\n\n\t\t\t} else {\n\n\t\t\t\tbuild.bindMatrix = new Matrix4().identity();\n\n\t\t\t}\n\n\t\t\t// process bones and inverse bind matrix data\n\n\t\t\tfor ( i = 0, l = jointSource.array.length; i < l; i ++ ) {\n\n\t\t\t\tconst name = jointSource.array[ i ];\n\t\t\t\tconst boneInverse = new Matrix4().fromArray( inverseSource.array, i * inverseSource.stride ).transpose();\n\n\t\t\t\tbuild.joints.push( { name: name, boneInverse: boneInverse } );\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t\t// array sort function\n\n\t\t\tfunction descending( a, b ) {\n\n\t\t\t\treturn b.weight - a.weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getController( id ) {\n\n\t\t\treturn getBuild( library.controllers[ id ], buildController );\n\n\t\t}\n\n\t\t// image\n\n\t\tfunction parseImage( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tinit_from: getElementsByTagName( xml, 'init_from' )[ 0 ].textContent\n\t\t\t};\n\n\t\t\tlibrary.images[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildImage( data ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\treturn data.init_from;\n\n\t\t}\n\n\t\tfunction getImage( id ) {\n\n\t\t\tconst data = library.images[ id ];\n\n\t\t\tif ( data !== undefined ) {\n\n\t\t\t\treturn getBuild( data, buildImage );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find image with ID:', id );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// effect\n\n\t\tfunction parseEffect( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'profile_COMMON':\n\t\t\t\t\t\tdata.profile = parseEffectProfileCOMMON( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.effects[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseEffectProfileCOMMON( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsurfaces: {},\n\t\t\t\tsamplers: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'newparam':\n\t\t\t\t\t\tparseEffectNewparam( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\tdata.technique = parseEffectTechnique( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tdata.extra = parseEffectExtra( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectNewparam( xml, data ) {\n\n\t\t\tconst sid = xml.getAttribute( 'sid' );\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'surface':\n\t\t\t\t\t\tdata.surfaces[ sid ] = parseEffectSurface( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'sampler2D':\n\t\t\t\t\t\tdata.samplers[ sid ] = parseEffectSampler( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseEffectSurface( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'init_from':\n\t\t\t\t\t\tdata.init_from = child.textContent;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectSampler( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tdata.source = child.textContent;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectTechnique( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'constant':\n\t\t\t\t\tcase 'lambert':\n\t\t\t\t\tcase 'blinn':\n\t\t\t\t\tcase 'phong':\n\t\t\t\t\t\tdata.type = child.nodeName;\n\t\t\t\t\t\tdata.parameters = parseEffectParameters( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tdata.extra = parseEffectExtra( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameters( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'emission':\n\t\t\t\t\tcase 'diffuse':\n\t\t\t\t\tcase 'specular':\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\tcase 'ambient':\n\t\t\t\t\tcase 'shininess':\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectParameter( child );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\t\tdata[ child.nodeName ] = {\n\t\t\t\t\t\t\topaque: child.hasAttribute( 'opaque' ) ? child.getAttribute( 'opaque' ) : 'A_ONE',\n\t\t\t\t\t\t\tdata: parseEffectParameter( child )\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameter( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'color':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'float':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'texture':\n\t\t\t\t\t\tdata[ child.nodeName ] = { id: child.getAttribute( 'texture' ), extra: parseEffectParameterTexture( child ) };\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameterTexture( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\ttechnique: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tparseEffectParameterTextureExtra( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectParameterTextureExtra( xml, data ) {\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\tparseEffectParameterTextureExtraTechnique( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseEffectParameterTextureExtraTechnique( xml, data ) {\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'repeatU':\n\t\t\t\t\tcase 'repeatV':\n\t\t\t\t\tcase 'offsetU':\n\t\t\t\t\tcase 'offsetV':\n\t\t\t\t\t\tdata.technique[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'wrapU':\n\t\t\t\t\tcase 'wrapV':\n\n\t\t\t\t\t\t// some files have values for wrapU/wrapV which become NaN via parseInt\n\n\t\t\t\t\t\tif ( child.textContent.toUpperCase() === 'TRUE' ) {\n\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = 1;\n\n\t\t\t\t\t\t} else if ( child.textContent.toUpperCase() === 'FALSE' ) {\n\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = parseInt( child.textContent );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectExtraTechniqueBump( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseEffectExtra( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique':\n\t\t\t\t\t\tdata.technique = parseEffectExtraTechnique( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectExtraTechnique( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'double_sided':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseInt( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectExtraTechniqueBump( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseEffectExtraTechniqueBump( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'texture':\n\t\t\t\t\t\tdata[ child.nodeName ] = { id: child.getAttribute( 'texture' ), texcoord: child.getAttribute( 'texcoord' ), extra: parseEffectParameterTexture( child ) };\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildEffect( data ) {\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction getEffect( id ) {\n\n\t\t\treturn getBuild( library.effects[ id ], buildEffect );\n\n\t\t}\n\n\t\t// material\n\n\t\tfunction parseMaterial( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' )\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'instance_effect':\n\t\t\t\t\t\tdata.url = parseId( child.getAttribute( 'url' ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.materials[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction getTextureLoader( image ) {\n\n\t\t\tlet loader;\n\n\t\t\tlet extension = image.slice( ( image.lastIndexOf( '.' ) - 1 >>> 0 ) + 2 ); // http://www.jstips.co/en/javascript/get-file-extension/\n\t\t\textension = extension.toLowerCase();\n\n\t\t\tswitch ( extension ) {\n\n\t\t\t\tcase 'tga':\n\t\t\t\t\tloader = tgaLoader;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tloader = textureLoader;\n\n\t\t\t}\n\n\t\t\treturn loader;\n\n\t\t}\n\n\t\tfunction buildMaterial( data ) {\n\n\t\t\tconst effect = getEffect( data.url );\n\t\t\tconst technique = effect.profile.technique;\n\n\t\t\tlet material;\n\n\t\t\tswitch ( technique.type ) {\n\n\t\t\t\tcase 'phong':\n\t\t\t\tcase 'blinn':\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'lambert':\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmaterial = new MeshBasicMaterial();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tmaterial.name = data.name || '';\n\n\t\t\tfunction getTexture( textureObject, colorSpace = null ) {\n\n\t\t\t\tconst sampler = effect.profile.samplers[ textureObject.id ];\n\t\t\t\tlet image = null;\n\n\t\t\t\t// get image\n\n\t\t\t\tif ( sampler !== undefined ) {\n\n\t\t\t\t\tconst surface = effect.profile.surfaces[ sampler.source ];\n\t\t\t\t\timage = getImage( surface.init_from );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530).' );\n\t\t\t\t\timage = getImage( textureObject.id );\n\n\t\t\t\t}\n\n\t\t\t\t// create texture if image is avaiable\n\n\t\t\t\tif ( image !== null ) {\n\n\t\t\t\t\tconst loader = getTextureLoader( image );\n\n\t\t\t\t\tif ( loader !== undefined ) {\n\n\t\t\t\t\t\tconst texture = loader.load( image );\n\n\t\t\t\t\t\tconst extra = textureObject.extra;\n\n\t\t\t\t\t\tif ( extra !== undefined && extra.technique !== undefined && isEmpty( extra.technique ) === false ) {\n\n\t\t\t\t\t\t\tconst technique = extra.technique;\n\n\t\t\t\t\t\t\ttexture.wrapS = technique.wrapU ? RepeatWrapping : ClampToEdgeWrapping;\n\t\t\t\t\t\t\ttexture.wrapT = technique.wrapV ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\t\t\t\t\t\ttexture.offset.set( technique.offsetU || 0, technique.offsetV || 0 );\n\t\t\t\t\t\t\ttexture.repeat.set( technique.repeatU || 1, technique.repeatV || 1 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttexture.wrapS = RepeatWrapping;\n\t\t\t\t\t\t\ttexture.wrapT = RepeatWrapping;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( colorSpace !== null ) {\n\n\t\t\t\t\t\t\ttexture.colorSpace = colorSpace;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Loader for texture %s not found.', image );\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t create texture with ID:', textureObject.id );\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst parameters = technique.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tconst parameter = parameters[ key ];\n\n\t\t\t\tswitch ( key ) {\n\n\t\t\t\t\tcase 'diffuse':\n\t\t\t\t\t\tif ( parameter.color ) material.color.fromArray( parameter.color );\n\t\t\t\t\t\tif ( parameter.texture ) material.map = getTexture( parameter.texture, SRGBColorSpace );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specular':\n\t\t\t\t\t\tif ( parameter.color && material.specular ) material.specular.fromArray( parameter.color );\n\t\t\t\t\t\tif ( parameter.texture ) material.specularMap = getTexture( parameter.texture );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\tif ( parameter.texture ) material.normalMap = getTexture( parameter.texture );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'ambient':\n\t\t\t\t\t\tif ( parameter.texture ) material.lightMap = getTexture( parameter.texture, SRGBColorSpace );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shininess':\n\t\t\t\t\t\tif ( parameter.float && material.shininess ) material.shininess = parameter.float;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'emission':\n\t\t\t\t\t\tif ( parameter.color && material.emissive ) material.emissive.fromArray( parameter.color );\n\t\t\t\t\t\tif ( parameter.texture ) material.emissiveMap = getTexture( parameter.texture, SRGBColorSpace );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterial.color.convertSRGBToLinear();\n\t\t\tif ( material.specular ) material.specular.convertSRGBToLinear();\n\t\t\tif ( material.emissive ) material.emissive.convertSRGBToLinear();\n\n\t\t\t//\n\n\t\t\tlet transparent = parameters[ 'transparent' ];\n\t\t\tlet transparency = parameters[ 'transparency' ];\n\n\t\t\t// <transparency> does not exist but <transparent>\n\n\t\t\tif ( transparency === undefined && transparent ) {\n\n\t\t\t\ttransparency = {\n\t\t\t\t\tfloat: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// <transparent> does not exist but <transparency>\n\n\t\t\tif ( transparent === undefined && transparency ) {\n\n\t\t\t\ttransparent = {\n\t\t\t\t\topaque: 'A_ONE',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tcolor: [ 1, 1, 1, 1 ]\n\t\t\t\t\t} };\n\n\t\t\t}\n\n\t\t\tif ( transparent && transparency ) {\n\n\t\t\t\t// handle case if a texture exists but no color\n\n\t\t\t\tif ( transparent.data.texture ) {\n\n\t\t\t\t\t// we do not set an alpha map (see #13792)\n\n\t\t\t\t\tmaterial.transparent = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst color = transparent.data.color;\n\n\t\t\t\t\tswitch ( transparent.opaque ) {\n\n\t\t\t\t\t\tcase 'A_ONE':\n\t\t\t\t\t\t\tmaterial.opacity = color[ 3 ] * transparency.float;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'RGB_ZERO':\n\t\t\t\t\t\t\tmaterial.opacity = 1 - ( color[ 0 ] * transparency.float );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'A_ZERO':\n\t\t\t\t\t\t\tmaterial.opacity = 1 - ( color[ 3 ] * transparency.float );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'RGB_ONE':\n\t\t\t\t\t\t\tmaterial.opacity = color[ 0 ] * transparency.float;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Invalid opaque type \"%s\" of transparent tag.', transparent.opaque );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material.opacity < 1 ) material.transparent = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\n\t\t\tif ( technique.extra !== undefined && technique.extra.technique !== undefined ) {\n\n\t\t\t\tconst techniques = technique.extra.technique;\n\n\t\t\t\tfor ( const k in techniques ) {\n\n\t\t\t\t\tconst v = techniques[ k ];\n\n\t\t\t\t\tswitch ( k ) {\n\n\t\t\t\t\t\tcase 'double_sided':\n\t\t\t\t\t\t\tmaterial.side = ( v === 1 ? DoubleSide : FrontSide );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'bump':\n\t\t\t\t\t\t\tmaterial.normalMap = getTexture( v.texture );\n\t\t\t\t\t\t\tmaterial.normalScale = new Vector2( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction getMaterial( id ) {\n\n\t\t\treturn getBuild( library.materials[ id ], buildMaterial );\n\n\t\t}\n\n\t\t// camera\n\n\t\tfunction parseCamera( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' )\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'optics':\n\t\t\t\t\t\tdata.optics = parseCameraOptics( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.cameras[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseCameraOptics( xml ) {\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\treturn parseCameraTechnique( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {};\n\n\t\t}\n\n\t\tfunction parseCameraTechnique( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'perspective':\n\t\t\t\t\tcase 'orthographic':\n\n\t\t\t\t\t\tdata.technique = child.nodeName;\n\t\t\t\t\t\tdata.parameters = parseCameraParameters( child );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseCameraParameters( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'xfov':\n\t\t\t\t\tcase 'yfov':\n\t\t\t\t\tcase 'xmag':\n\t\t\t\t\tcase 'ymag':\n\t\t\t\t\tcase 'znear':\n\t\t\t\t\tcase 'zfar':\n\t\t\t\t\tcase 'aspect_ratio':\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildCamera( data ) {\n\n\t\t\tlet camera;\n\n\t\t\tswitch ( data.optics.technique ) {\n\n\t\t\t\tcase 'perspective':\n\t\t\t\t\tcamera = new PerspectiveCamera(\n\t\t\t\t\t\tdata.optics.parameters.yfov,\n\t\t\t\t\t\tdata.optics.parameters.aspect_ratio,\n\t\t\t\t\t\tdata.optics.parameters.znear,\n\t\t\t\t\t\tdata.optics.parameters.zfar\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'orthographic':\n\t\t\t\t\tlet ymag = data.optics.parameters.ymag;\n\t\t\t\t\tlet xmag = data.optics.parameters.xmag;\n\t\t\t\t\tconst aspectRatio = data.optics.parameters.aspect_ratio;\n\n\t\t\t\t\txmag = ( xmag === undefined ) ? ( ymag * aspectRatio ) : xmag;\n\t\t\t\t\tymag = ( ymag === undefined ) ? ( xmag / aspectRatio ) : ymag;\n\n\t\t\t\t\txmag *= 0.5;\n\t\t\t\t\tymag *= 0.5;\n\n\t\t\t\t\tcamera = new OrthographicCamera(\n\t\t\t\t\t\t- xmag, xmag, ymag, - ymag, // left, right, top, bottom\n\t\t\t\t\t\tdata.optics.parameters.znear,\n\t\t\t\t\t\tdata.optics.parameters.zfar\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tcamera.name = data.name || '';\n\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tfunction getCamera( id ) {\n\n\t\t\tconst data = library.cameras[ id ];\n\n\t\t\tif ( data !== undefined ) {\n\n\t\t\t\treturn getBuild( data, buildCamera );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find camera with ID:', id );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// light\n\n\t\tfunction parseLight( xml ) {\n\n\t\t\tlet data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tdata = parseLightTechnique( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.lights[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseLightTechnique( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'directional':\n\t\t\t\t\tcase 'point':\n\t\t\t\t\tcase 'spot':\n\t\t\t\t\tcase 'ambient':\n\n\t\t\t\t\t\tdata.technique = child.nodeName;\n\t\t\t\t\t\tdata.parameters = parseLightParameters( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseLightParameters( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'color':\n\t\t\t\t\t\tconst array = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.color = new Color().fromArray( array ).convertSRGBToLinear();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'falloff_angle':\n\t\t\t\t\t\tdata.falloffAngle = parseFloat( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'quadratic_attenuation':\n\t\t\t\t\t\tconst f = parseFloat( child.textContent );\n\t\t\t\t\t\tdata.distance = f ? Math.sqrt( 1 / f ) : 0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildLight( data ) {\n\n\t\t\tlet light;\n\n\t\t\tswitch ( data.technique ) {\n\n\t\t\t\tcase 'directional':\n\t\t\t\t\tlight = new DirectionalLight();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'point':\n\t\t\t\t\tlight = new PointLight();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'spot':\n\t\t\t\t\tlight = new SpotLight();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ambient':\n\t\t\t\t\tlight = new AmbientLight();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( data.parameters.color ) light.color.copy( data.parameters.color );\n\t\t\tif ( data.parameters.distance ) light.distance = data.parameters.distance;\n\n\t\t\treturn light;\n\n\t\t}\n\n\t\tfunction getLight( id ) {\n\n\t\t\tconst data = library.lights[ id ];\n\n\t\t\tif ( data !== undefined ) {\n\n\t\t\t\treturn getBuild( data, buildLight );\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find light with ID:', id );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// geometry\n\n\t\tfunction parseGeometry( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ),\n\t\t\t\tsources: {},\n\t\t\t\tvertices: {},\n\t\t\t\tprimitives: []\n\t\t\t};\n\n\t\t\tconst mesh = getElementsByTagName( xml, 'mesh' )[ 0 ];\n\n\t\t\t// the following tags inside geometry are not supported yet (see https://github.com/mrdoob/three.js/pull/12606): convex_mesh, spline, brep\n\t\t\tif ( mesh === undefined ) return;\n\n\t\t\tfor ( let i = 0; i < mesh.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = mesh.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tconst id = child.getAttribute( 'id' );\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'source':\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vertices':\n\t\t\t\t\t\t// data.sources[ id ] = data.sources[ parseId( getElementsByTagName( child, 'input' )[ 0 ].getAttribute( 'source' ) ) ];\n\t\t\t\t\t\tdata.vertices = parseGeometryVertices( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'polygons':\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unsupported primitive type: ', child.nodeName );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'lines':\n\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\tcase 'polylist':\n\t\t\t\t\tcase 'triangles':\n\t\t\t\t\t\tdata.primitives.push( parseGeometryPrimitive( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.geometries[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parseSource( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tarray: [],\n\t\t\t\tstride: 3\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'float_array':\n\t\t\t\t\t\tdata.array = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Name_array':\n\t\t\t\t\t\tdata.array = parseStrings( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tconst accessor = getElementsByTagName( child, 'accessor' )[ 0 ];\n\n\t\t\t\t\t\tif ( accessor !== undefined ) {\n\n\t\t\t\t\t\t\tdata.stride = parseInt( accessor.getAttribute( 'stride' ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseGeometryVertices( xml ) {\n\n\t\t\tconst data = {};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tdata[ child.getAttribute( 'semantic' ) ] = parseId( child.getAttribute( 'source' ) );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseGeometryPrimitive( xml ) {\n\n\t\t\tconst primitive = {\n\t\t\t\ttype: xml.nodeName,\n\t\t\t\tmaterial: xml.getAttribute( 'material' ),\n\t\t\t\tcount: parseInt( xml.getAttribute( 'count' ) ),\n\t\t\t\tinputs: {},\n\t\t\t\tstride: 0,\n\t\t\t\thasUV: false\n\t\t\t};\n\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'input':\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\n\t\t\t\t\t\tconst offset = parseInt( child.getAttribute( 'offset' ) );\n\t\t\t\t\t\tconst set = parseInt( child.getAttribute( 'set' ) );\n\t\t\t\t\t\tconst inputname = ( set > 0 ? semantic + set : semantic );\n\t\t\t\t\t\tprimitive.inputs[ inputname ] = { id: id, offset: offset };\n\t\t\t\t\t\tprimitive.stride = Math.max( primitive.stride, offset + 1 );\n\t\t\t\t\t\tif ( semantic === 'TEXCOORD' ) primitive.hasUV = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'vcount':\n\t\t\t\t\t\tprimitive.vcount = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'p':\n\t\t\t\t\t\tprimitive.p = parseInts( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn primitive;\n\n\t\t}\n\n\t\tfunction groupPrimitives( primitives ) {\n\n\t\t\tconst build = {};\n\n\t\t\tfor ( let i = 0; i < primitives.length; i ++ ) {\n\n\t\t\t\tconst primitive = primitives[ i ];\n\n\t\t\t\tif ( build[ primitive.type ] === undefined ) build[ primitive.type ] = [];\n\n\t\t\t\tbuild[ primitive.type ].push( primitive );\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction checkUVCoordinates( primitives ) {\n\n\t\t\tlet count = 0;\n\n\t\t\tfor ( let i = 0, l = primitives.length; i < l; i ++ ) {\n\n\t\t\t\tconst primitive = primitives[ i ];\n\n\t\t\t\tif ( primitive.hasUV === true ) {\n\n\t\t\t\t\tcount ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( count > 0 && count < primitives.length ) {\n\n\t\t\t\tprimitives.uvsNeedsFix = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction buildGeometry( data ) {\n\n\t\t\tconst build = {};\n\n\t\t\tconst sources = data.sources;\n\t\t\tconst vertices = data.vertices;\n\t\t\tconst primitives = data.primitives;\n\n\t\t\tif ( primitives.length === 0 ) return {};\n\n\t\t\t// our goal is to create one buffer geometry for a single type of primitives\n\t\t\t// first, we group all primitives by their type\n\n\t\t\tconst groupedPrimitives = groupPrimitives( primitives );\n\n\t\t\tfor ( const type in groupedPrimitives ) {\n\n\t\t\t\tconst primitiveType = groupedPrimitives[ type ];\n\n\t\t\t\t// second, ensure consistent uv coordinates for each type of primitives (polylist,triangles or lines)\n\n\t\t\t\tcheckUVCoordinates( primitiveType );\n\n\t\t\t\t// third, create a buffer geometry for each type of primitives\n\n\t\t\t\tbuild[ type ] = buildGeometryType( primitiveType, sources, vertices );\n\n\t\t\t}\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction buildGeometryType( primitives, sources, vertices ) {\n\n\t\t\tconst build = {};\n\n\t\t\tconst position = { array: [], stride: 0 };\n\t\t\tconst normal = { array: [], stride: 0 };\n\t\t\tconst uv = { array: [], stride: 0 };\n\t\t\tconst uv1 = { array: [], stride: 0 };\n\t\t\tconst color = { array: [], stride: 0 };\n\n\t\t\tconst skinIndex = { array: [], stride: 4 };\n\t\t\tconst skinWeight = { array: [], stride: 4 };\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tconst materialKeys = [];\n\n\t\t\tlet start = 0;\n\n\t\t\tfor ( let p = 0; p < primitives.length; p ++ ) {\n\n\t\t\t\tconst primitive = primitives[ p ];\n\t\t\t\tconst inputs = primitive.inputs;\n\n\t\t\t\t// groups\n\n\t\t\t\tlet count = 0;\n\n\t\t\t\tswitch ( primitive.type ) {\n\n\t\t\t\t\tcase 'lines':\n\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\t\tcount = primitive.count * 2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'triangles':\n\t\t\t\t\t\tcount = primitive.count * 3;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'polylist':\n\n\t\t\t\t\t\tfor ( let g = 0; g < primitive.count; g ++ ) {\n\n\t\t\t\t\t\t\tconst vc = primitive.vcount[ g ];\n\n\t\t\t\t\t\t\tswitch ( vc ) {\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tcount += 3; // single triangle\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tcount += 6; // quad, subdivided into two triangles\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tcount += ( vc - 2 ) * 3; // polylist with more than four vertices\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unknow primitive type:', primitive.type );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addGroup( start, count, p );\n\t\t\t\tstart += count;\n\n\t\t\t\t// material\n\n\t\t\t\tif ( primitive.material ) {\n\n\t\t\t\t\tmaterialKeys.push( primitive.material );\n\n\t\t\t\t}\n\n\t\t\t\t// geometry data\n\n\t\t\t\tfor ( const name in inputs ) {\n\n\t\t\t\t\tconst input = inputs[ name ];\n\n\t\t\t\t\tswitch ( name )\t{\n\n\t\t\t\t\t\tcase 'VERTEX':\n\t\t\t\t\t\t\tfor ( const key in vertices ) {\n\n\t\t\t\t\t\t\t\tconst id = vertices[ key ];\n\n\t\t\t\t\t\t\t\tswitch ( key ) {\n\n\t\t\t\t\t\t\t\t\tcase 'POSITION':\n\t\t\t\t\t\t\t\t\t\tconst prevLength = position.array.length;\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, position.array );\n\t\t\t\t\t\t\t\t\t\tposition.stride = sources[ id ].stride;\n\n\t\t\t\t\t\t\t\t\t\tif ( sources.skinWeights && sources.skinIndices ) {\n\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources.skinIndices, input.offset, skinIndex.array );\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources.skinWeights, input.offset, skinWeight.array );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// see #3803\n\n\t\t\t\t\t\t\t\t\t\tif ( primitive.hasUV === false && primitives.uvsNeedsFix === true ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst count = ( position.array.length - prevLength ) / position.stride;\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// fill missing uv coordinates\n\n\t\t\t\t\t\t\t\t\t\t\t\tuv.array.push( 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'NORMAL':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, normal.array );\n\t\t\t\t\t\t\t\t\t\tnormal.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, color.array );\n\t\t\t\t\t\t\t\t\t\tcolor.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, uv.array );\n\t\t\t\t\t\t\t\t\t\tuv.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'TEXCOORD1':\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, uv1.array );\n\t\t\t\t\t\t\t\t\t\tuv.stride = sources[ id ].stride;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Semantic \"%s\" not handled in geometry build process.', key );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'NORMAL':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, normal.array );\n\t\t\t\t\t\t\tnormal.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, color.array, true );\n\t\t\t\t\t\t\tcolor.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, uv.array );\n\t\t\t\t\t\t\tuv.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TEXCOORD1':\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, uv1.array );\n\t\t\t\t\t\t\tuv1.stride = sources[ input.id ].stride;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tif ( position.array.length > 0 ) geometry.setAttribute( 'position', new Float32BufferAttribute( position.array, position.stride ) );\n\t\t\tif ( normal.array.length > 0 ) geometry.setAttribute( 'normal', new Float32BufferAttribute( normal.array, normal.stride ) );\n\t\t\tif ( color.array.length > 0 ) geometry.setAttribute( 'color', new Float32BufferAttribute( color.array, color.stride ) );\n\t\t\tif ( uv.array.length > 0 ) geometry.setAttribute( 'uv', new Float32BufferAttribute( uv.array, uv.stride ) );\n\t\t\tif ( uv1.array.length > 0 ) geometry.setAttribute( 'uv1', new Float32BufferAttribute( uv1.array, uv1.stride ) );\n\n\t\t\tif ( skinIndex.array.length > 0 ) geometry.setAttribute( 'skinIndex', new Float32BufferAttribute( skinIndex.array, skinIndex.stride ) );\n\t\t\tif ( skinWeight.array.length > 0 ) geometry.setAttribute( 'skinWeight', new Float32BufferAttribute( skinWeight.array, skinWeight.stride ) );\n\n\t\t\tbuild.data = geometry;\n\t\t\tbuild.type = primitives[ 0 ].type;\n\t\t\tbuild.materialKeys = materialKeys;\n\n\t\t\treturn build;\n\n\t\t}\n\n\t\tfunction buildGeometryData( primitive, source, offset, array, isColor = false ) {\n\n\t\t\tconst indices = primitive.p;\n\t\t\tconst stride = primitive.stride;\n\t\t\tconst vcount = primitive.vcount;\n\n\t\t\tfunction pushVector( i ) {\n\n\t\t\t\tlet index = indices[ i + offset ] * sourceStride;\n\t\t\t\tconst length = index + sourceStride;\n\n\t\t\t\tfor ( ; index < length; index ++ ) {\n\n\t\t\t\t\tarray.push( sourceArray[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isColor ) {\n\n\t\t\t\t\t// convert the vertex colors from srgb to linear if present\n\t\t\t\t\tconst startIndex = array.length - sourceStride - 1;\n\t\t\t\t\ttempColor.setRGB(\n\t\t\t\t\t\tarray[ startIndex + 0 ],\n\t\t\t\t\t\tarray[ startIndex + 1 ],\n\t\t\t\t\t\tarray[ startIndex + 2 ]\n\t\t\t\t\t).convertSRGBToLinear();\n\n\t\t\t\t\tarray[ startIndex + 0 ] = tempColor.r;\n\t\t\t\t\tarray[ startIndex + 1 ] = tempColor.g;\n\t\t\t\t\tarray[ startIndex + 2 ] = tempColor.b;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst sourceArray = source.array;\n\t\t\tconst sourceStride = source.stride;\n\n\t\t\tif ( primitive.vcount !== undefined ) {\n\n\t\t\t\tlet index = 0;\n\n\t\t\t\tfor ( let i = 0, l = vcount.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst count = vcount[ i ];\n\n\t\t\t\t\tif ( count === 4 ) {\n\n\t\t\t\t\t\tconst a = index + stride * 0;\n\t\t\t\t\t\tconst b = index + stride * 1;\n\t\t\t\t\t\tconst c = index + stride * 2;\n\t\t\t\t\t\tconst d = index + stride * 3;\n\n\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( d );\n\t\t\t\t\t\tpushVector( b ); pushVector( c ); pushVector( d );\n\n\t\t\t\t\t} else if ( count === 3 ) {\n\n\t\t\t\t\t\tconst a = index + stride * 0;\n\t\t\t\t\t\tconst b = index + stride * 1;\n\t\t\t\t\t\tconst c = index + stride * 2;\n\n\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( c );\n\n\t\t\t\t\t} else if ( count > 4 ) {\n\n\t\t\t\t\t\tfor ( let k = 1, kl = ( count - 2 ); k <= kl; k ++ ) {\n\n\t\t\t\t\t\t\tconst a = index + stride * 0;\n\t\t\t\t\t\t\tconst b = index + stride * k;\n\t\t\t\t\t\t\tconst c = index + stride * ( k + 1 );\n\n\t\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( c );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex += stride * count;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( let i = 0, l = indices.length; i < l; i += stride ) {\n\n\t\t\t\t\tpushVector( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getGeometry( id ) {\n\n\t\t\treturn getBuild( library.geometries[ id ], buildGeometry );\n\n\t\t}\n\n\t\t// kinematics\n\n\t\tfunction parseKinematicsModel( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\tjoints: {},\n\t\t\t\tlinks: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tparseKinematicsTechniqueCommon( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.kinematicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildKinematicsModel( data ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction getKinematicsModel( id ) {\n\n\t\t\treturn getBuild( library.kinematicsModels[ id ], buildKinematicsModel );\n\n\t\t}\n\n\t\tfunction parseKinematicsTechniqueCommon( xml, data ) {\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'joint':\n\t\t\t\t\t\tdata.joints[ child.getAttribute( 'sid' ) ] = parseKinematicsJoint( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\tdata.links.push( parseKinematicsLink( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseKinematicsJoint( xml ) {\n\n\t\t\tlet data;\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'prismatic':\n\t\t\t\t\tcase 'revolute':\n\t\t\t\t\t\tdata = parseKinematicsJointParameter( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsJointParameter( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\taxis: new Vector3(),\n\t\t\t\tlimits: {\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: 0\n\t\t\t\t},\n\t\t\t\ttype: xml.nodeName,\n\t\t\t\tstatic: false,\n\t\t\t\tzeroPosition: 0,\n\t\t\t\tmiddlePosition: 0\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'axis':\n\t\t\t\t\t\tconst array = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.axis.fromArray( array );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'limits':\n\t\t\t\t\t\tconst max = child.getElementsByTagName( 'max' )[ 0 ];\n\t\t\t\t\t\tconst min = child.getElementsByTagName( 'min' )[ 0 ];\n\n\t\t\t\t\t\tdata.limits.max = parseFloat( max.textContent );\n\t\t\t\t\t\tdata.limits.min = parseFloat( min.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// if min is equal to or greater than max, consider the joint static\n\n\t\t\tif ( data.limits.min >= data.limits.max ) {\n\n\t\t\t\tdata.static = true;\n\n\t\t\t}\n\n\t\t\t// calculate middle position\n\n\t\t\tdata.middlePosition = ( data.limits.min + data.limits.max ) / 2.0;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsLink( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\tattachments: [],\n\t\t\t\ttransforms: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'attachment_full':\n\t\t\t\t\t\tdata.attachments.push( parseKinematicsAttachment( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tdata.transforms.push( parseKinematicsTransform( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsAttachment( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tjoint: xml.getAttribute( 'joint' ).split( '/' ).pop(),\n\t\t\t\ttransforms: [],\n\t\t\t\tlinks: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'link':\n\t\t\t\t\t\tdata.links.push( parseKinematicsLink( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tdata.transforms.push( parseKinematicsTransform( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseKinematicsTransform( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\ttype: xml.nodeName\n\t\t\t};\n\n\t\t\tconst array = parseFloats( xml.textContent );\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'matrix':\n\t\t\t\t\tdata.obj = new Matrix4();\n\t\t\t\t\tdata.obj.fromArray( array ).transpose();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'translate':\n\t\t\t\t\tdata.obj = new Vector3();\n\t\t\t\t\tdata.obj.fromArray( array );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tdata.obj = new Vector3();\n\t\t\t\t\tdata.obj.fromArray( array );\n\t\t\t\t\tdata.angle = MathUtils.degToRad( array[ 3 ] );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// physics\n\n\t\tfunction parsePhysicsModel( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\trigidBodies: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'rigid_body':\n\t\t\t\t\t\tdata.rigidBodies[ child.getAttribute( 'name' ) ] = {};\n\t\t\t\t\t\tparsePhysicsRigidBody( child, data.rigidBodies[ child.getAttribute( 'name' ) ] );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.physicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction parsePhysicsRigidBody( xml, data ) {\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'technique_common':\n\t\t\t\t\t\tparsePhysicsTechniqueCommon( child, data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parsePhysicsTechniqueCommon( xml, data ) {\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'inertia':\n\t\t\t\t\t\tdata.inertia = parseFloats( child.textContent );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'mass':\n\t\t\t\t\t\tdata.mass = parseFloats( child.textContent )[ 0 ];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// scene\n\n\t\tfunction parseKinematicsScene( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tbindJointAxis: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'bind_joint_axis':\n\t\t\t\t\t\tdata.bindJointAxis.push( parseKinematicsBindJointAxis( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlibrary.kinematicsScenes[ parseId( xml.getAttribute( 'url' ) ) ] = data;\n\n\t\t}\n\n\t\tfunction parseKinematicsBindJointAxis( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\ttarget: xml.getAttribute( 'target' ).split( '/' ).pop()\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'axis':\n\t\t\t\t\t\tconst param = child.getElementsByTagName( 'param' )[ 0 ];\n\t\t\t\t\t\tdata.axis = param.textContent;\n\t\t\t\t\t\tconst tmpJointIndex = data.axis.split( 'inst_' ).pop().split( 'axis' )[ 0 ];\n\t\t\t\t\t\tdata.jointIndex = tmpJointIndex.substring( 0, tmpJointIndex.length - 1 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildKinematicsScene( data ) {\n\n\t\t\tif ( data.build !== undefined ) return data.build;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction getKinematicsScene( id ) {\n\n\t\t\treturn getBuild( library.kinematicsScenes[ id ], buildKinematicsScene );\n\n\t\t}\n\n\t\tfunction setupKinematics() {\n\n\t\t\tconst kinematicsModelId = Object.keys( library.kinematicsModels )[ 0 ];\n\t\t\tconst kinematicsSceneId = Object.keys( library.kinematicsScenes )[ 0 ];\n\t\t\tconst visualSceneId = Object.keys( library.visualScenes )[ 0 ];\n\n\t\t\tif ( kinematicsModelId === undefined || kinematicsSceneId === undefined ) return;\n\n\t\t\tconst kinematicsModel = getKinematicsModel( kinematicsModelId );\n\t\t\tconst kinematicsScene = getKinematicsScene( kinematicsSceneId );\n\t\t\tconst visualScene = getVisualScene( visualSceneId );\n\n\t\t\tconst bindJointAxis = kinematicsScene.bindJointAxis;\n\t\t\tconst jointMap = {};\n\n\t\t\tfor ( let i = 0, l = bindJointAxis.length; i < l; i ++ ) {\n\n\t\t\t\tconst axis = bindJointAxis[ i ];\n\n\t\t\t\t// the result of the following query is an element of type 'translate', 'rotate','scale' or 'matrix'\n\n\t\t\t\tconst targetElement = collada.querySelector( '[sid=\"' + axis.target + '\"]' );\n\n\t\t\t\tif ( targetElement ) {\n\n\t\t\t\t\t// get the parent of the transform element\n\n\t\t\t\t\tconst parentVisualElement = targetElement.parentElement;\n\n\t\t\t\t\t// connect the joint of the kinematics model with the element in the visual scene\n\n\t\t\t\t\tconnect( axis.jointIndex, parentVisualElement );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction connect( jointIndex, visualElement ) {\n\n\t\t\t\tconst visualElementName = visualElement.getAttribute( 'name' );\n\t\t\t\tconst joint = kinematicsModel.joints[ jointIndex ];\n\n\t\t\t\tvisualScene.traverse( function ( object ) {\n\n\t\t\t\t\tif ( object.name === visualElementName ) {\n\n\t\t\t\t\t\tjointMap[ jointIndex ] = {\n\t\t\t\t\t\t\tobject: object,\n\t\t\t\t\t\t\ttransforms: buildTransformList( visualElement ),\n\t\t\t\t\t\t\tjoint: joint,\n\t\t\t\t\t\t\tposition: joint.zeroPosition\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tconst m0 = new Matrix4();\n\n\t\t\tkinematics = {\n\n\t\t\t\tjoints: kinematicsModel && kinematicsModel.joints,\n\n\t\t\t\tgetJointValue: function ( jointIndex ) {\n\n\t\t\t\t\tconst jointData = jointMap[ jointIndex ];\n\n\t\t\t\t\tif ( jointData ) {\n\n\t\t\t\t\t\treturn jointData.position;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' doesn\\'t exist.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetJointValue: function ( jointIndex, value ) {\n\n\t\t\t\t\tconst jointData = jointMap[ jointIndex ];\n\n\t\t\t\t\tif ( jointData ) {\n\n\t\t\t\t\t\tconst joint = jointData.joint;\n\n\t\t\t\t\t\tif ( value > joint.limits.max || value < joint.limits.min ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' value ' + value + ' outside of limits (min: ' + joint.limits.min + ', max: ' + joint.limits.max + ').' );\n\n\t\t\t\t\t\t} else if ( joint.static ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' is static.' );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst object = jointData.object;\n\t\t\t\t\t\t\tconst axis = joint.axis;\n\t\t\t\t\t\t\tconst transforms = jointData.transforms;\n\n\t\t\t\t\t\t\tmatrix.identity();\n\n\t\t\t\t\t\t\t// each update, we have to apply all transforms in the correct order\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < transforms.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst transform = transforms[ i ];\n\n\t\t\t\t\t\t\t\t// if there is a connection of the transform node with a joint, apply the joint value\n\n\t\t\t\t\t\t\t\tif ( transform.sid && transform.sid.indexOf( jointIndex ) !== - 1 ) {\n\n\t\t\t\t\t\t\t\t\tswitch ( joint.type ) {\n\n\t\t\t\t\t\t\t\t\t\tcase 'revolute':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeRotationAxis( axis, MathUtils.degToRad( value ) ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'prismatic':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeTranslation( axis.x * value, axis.y * value, axis.z * value ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unknown joint type: ' + joint.type );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tswitch ( transform.type ) {\n\n\t\t\t\t\t\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( transform.obj );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeTranslation( transform.obj.x, transform.obj.y, transform.obj.z ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.scale( transform.obj );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeRotationAxis( transform.obj, transform.angle ) );\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tobject.matrix.copy( matrix );\n\t\t\t\t\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t\t\t\t\tjointMap[ jointIndex ].position = value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.log( 'THREE.ColladaLoader: ' + jointIndex + ' does not exist.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction buildTransformList( node ) {\n\n\t\t\tconst transforms = [];\n\n\t\t\tconst xml = collada.querySelector( '[id=\"' + node.id + '\"]' );\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tlet array, vector;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tconst matrix = new Matrix4().fromArray( array ).transpose();\n\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\tobj: matrix\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tvector = new Vector3().fromArray( array );\n\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\tobj: vector\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tvector = new Vector3().fromArray( array );\n\t\t\t\t\t\tconst angle = MathUtils.degToRad( array[ 3 ] );\n\t\t\t\t\t\ttransforms.push( {\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\n\t\t\t\t\t\t\ttype: child.nodeName,\n\t\t\t\t\t\t\tobj: vector,\n\t\t\t\t\t\t\tangle: angle\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn transforms;\n\n\t\t}\n\n\t\t// nodes\n\n\t\tfunction prepareNodes( xml ) {\n\n\t\t\tconst elements = xml.getElementsByTagName( 'node' );\n\n\t\t\t// ensure all node elements have id attributes\n\n\t\t\tfor ( let i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\tconst element = elements[ i ];\n\n\t\t\t\tif ( element.hasAttribute( 'id' ) === false ) {\n\n\t\t\t\t\telement.setAttribute( 'id', generateId() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst matrix = new Matrix4();\n\t\tconst vector = new Vector3();\n\n\t\tfunction parseNode( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\n\t\t\t\ttype: xml.getAttribute( 'type' ),\n\t\t\t\tid: xml.getAttribute( 'id' ),\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\n\t\t\t\tmatrix: new Matrix4(),\n\t\t\t\tnodes: [],\n\t\t\t\tinstanceCameras: [],\n\t\t\t\tinstanceControllers: [],\n\t\t\t\tinstanceLights: [],\n\t\t\t\tinstanceGeometries: [],\n\t\t\t\tinstanceNodes: [],\n\t\t\t\ttransforms: {}\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\n\n\t\t\t\tlet array;\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'node':\n\t\t\t\t\t\tdata.nodes.push( child.getAttribute( 'id' ) );\n\t\t\t\t\t\tparseNode( child );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_camera':\n\t\t\t\t\t\tdata.instanceCameras.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_controller':\n\t\t\t\t\t\tdata.instanceControllers.push( parseNodeInstance( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_light':\n\t\t\t\t\t\tdata.instanceLights.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_geometry':\n\t\t\t\t\t\tdata.instanceGeometries.push( parseNodeInstance( child ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'instance_node':\n\t\t\t\t\t\tdata.instanceNodes.push( parseId( child.getAttribute( 'url' ) ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'matrix':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.matrix.multiply( matrix.fromArray( array ).transpose() );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'translate':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tvector.fromArray( array );\n\t\t\t\t\t\tdata.matrix.multiply( matrix.makeTranslation( vector.x, vector.y, vector.z ) );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'rotate':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tconst angle = MathUtils.degToRad( array[ 3 ] );\n\t\t\t\t\t\tdata.matrix.multiply( matrix.makeRotationAxis( vector.fromArray( array ), angle ) );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'scale':\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\n\t\t\t\t\t\tdata.matrix.scale( vector.fromArray( array ) );\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'extra':\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log( child );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasNode( data.id ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.', data.id );\n\n\t\t\t} else {\n\n\t\t\t\tlibrary.nodes[ data.id ] = data;\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction parseNodeInstance( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tid: parseId( xml.getAttribute( 'url' ) ),\n\t\t\t\tmaterials: {},\n\t\t\t\tskeletons: []\n\t\t\t};\n\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\n\n\t\t\t\tconst child = xml.childNodes[ i ];\n\n\t\t\t\tswitch ( child.nodeName ) {\n\n\t\t\t\t\tcase 'bind_material':\n\t\t\t\t\t\tconst instances = child.getElementsByTagName( 'instance_material' );\n\n\t\t\t\t\t\tfor ( let j = 0; j < instances.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst instance = instances[ j ];\n\t\t\t\t\t\t\tconst symbol = instance.getAttribute( 'symbol' );\n\t\t\t\t\t\t\tconst target = instance.getAttribute( 'target' );\n\n\t\t\t\t\t\t\tdata.materials[ symbol ] = parseId( target );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'skeleton':\n\t\t\t\t\t\tdata.skeletons.push( parseId( child.textContent ) );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tfunction buildSkeleton( skeletons, joints ) {\n\n\t\t\tconst boneData = [];\n\t\t\tconst sortedBoneData = [];\n\n\t\t\tlet i, j, data;\n\n\t\t\t// a skeleton can have multiple root bones. collada expresses this\n\t\t\t// situtation with multiple \"skeleton\" tags per controller instance\n\n\t\t\tfor ( i = 0; i < skeletons.length; i ++ ) {\n\n\t\t\t\tconst skeleton = skeletons[ i ];\n\n\t\t\t\tlet root;\n\n\t\t\t\tif ( hasNode( skeleton ) ) {\n\n\t\t\t\t\troot = getNode( skeleton );\n\t\t\t\t\tbuildBoneHierarchy( root, joints, boneData );\n\n\t\t\t\t} else if ( hasVisualScene( skeleton ) ) {\n\n\t\t\t\t\t// handle case where the skeleton refers to the visual scene (#13335)\n\n\t\t\t\t\tconst visualScene = library.visualScenes[ skeleton ];\n\t\t\t\t\tconst children = visualScene.children;\n\n\t\t\t\t\tfor ( let j = 0; j < children.length; j ++ ) {\n\n\t\t\t\t\t\tconst child = children[ j ];\n\n\t\t\t\t\t\tif ( child.type === 'JOINT' ) {\n\n\t\t\t\t\t\t\tconst root = getNode( child.id );\n\t\t\t\t\t\t\tbuildBoneHierarchy( root, joints, boneData );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.ColladaLoader: Unable to find root bone of skeleton with ID:', skeleton );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// sort bone data (the order is defined in the corresponding controller)\n\n\t\t\tfor ( i = 0; i < joints.length; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < boneData.length; j ++ ) {\n\n\t\t\t\t\tdata = boneData[ j ];\n\n\t\t\t\t\tif ( data.bone.name === joints[ i ].name ) {\n\n\t\t\t\t\t\tsortedBoneData[ i ] = data;\n\t\t\t\t\t\tdata.processed = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add unprocessed bone data at the end of the list\n\n\t\t\tfor ( i = 0; i < boneData.length; i ++ ) {\n\n\t\t\t\tdata = boneData[ i ];\n\n\t\t\t\tif ( data.processed === false ) {\n\n\t\t\t\t\tsortedBoneData.push( data );\n\t\t\t\t\tdata.processed = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// setup arrays for skeleton creation\n\n\t\t\tconst bones = [];\n\t\t\tconst boneInverses = [];\n\n\t\t\tfor ( i = 0; i < sortedBoneData.length; i ++ ) {\n\n\t\t\t\tdata = sortedBoneData[ i ];\n\n\t\t\t\tbones.push( data.bone );\n\t\t\t\tboneInverses.push( data.boneInverse );\n\n\t\t\t}\n\n\t\t\treturn new Skeleton( bones, boneInverses );\n\n\t\t}\n\n\t\tfunction buildBoneHierarchy( root, joints, boneData ) {\n\n\t\t\t// setup bone data from visual scene\n\n\t\t\troot.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isBone === true ) {\n\n\t\t\t\t\tlet boneInverse;\n\n\t\t\t\t\t// retrieve the boneInverse from the controller data\n\n\t\t\t\t\tfor ( let i = 0; i < joints.length; i ++ ) {\n\n\t\t\t\t\t\tconst joint = joints[ i ];\n\n\t\t\t\t\t\tif ( joint.name === object.name ) {\n\n\t\t\t\t\t\t\tboneInverse = joint.boneInverse;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boneInverse === undefined ) {\n\n\t\t\t\t\t\t// Unfortunately, there can be joints in the visual scene that are not part of the\n\t\t\t\t\t\t// corresponding controller. In this case, we have to create a dummy boneInverse matrix\n\t\t\t\t\t\t// for the respective bone. This bone won't affect any vertices, because there are no skin indices\n\t\t\t\t\t\t// and weights defined for it. But we still have to add the bone to the sorted bone list in order to\n\t\t\t\t\t\t// ensure a correct animation of the model.\n\n\t\t\t\t\t\tboneInverse = new Matrix4();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tboneData.push( { bone: object, boneInverse: boneInverse, processed: false } );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction buildNode( data ) {\n\n\t\t\tconst objects = [];\n\n\t\t\tconst matrix = data.matrix;\n\t\t\tconst nodes = data.nodes;\n\t\t\tconst type = data.type;\n\t\t\tconst instanceCameras = data.instanceCameras;\n\t\t\tconst instanceControllers = data.instanceControllers;\n\t\t\tconst instanceLights = data.instanceLights;\n\t\t\tconst instanceGeometries = data.instanceGeometries;\n\t\t\tconst instanceNodes = data.instanceNodes;\n\n\t\t\t// nodes\n\n\t\t\tfor ( let i = 0, l = nodes.length; i < l; i ++ ) {\n\n\t\t\t\tobjects.push( getNode( nodes[ i ] ) );\n\n\t\t\t}\n\n\t\t\t// instance cameras\n\n\t\t\tfor ( let i = 0, l = instanceCameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst instanceCamera = getCamera( instanceCameras[ i ] );\n\n\t\t\t\tif ( instanceCamera !== null ) {\n\n\t\t\t\t\tobjects.push( instanceCamera.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance controllers\n\n\t\t\tfor ( let i = 0, l = instanceControllers.length; i < l; i ++ ) {\n\n\t\t\t\tconst instance = instanceControllers[ i ];\n\t\t\t\tconst controller = getController( instance.id );\n\t\t\t\tconst geometries = getGeometry( controller.id );\n\t\t\t\tconst newObjects = buildObjects( geometries, instance.materials );\n\n\t\t\t\tconst skeletons = instance.skeletons;\n\t\t\t\tconst joints = controller.skin.joints;\n\n\t\t\t\tconst skeleton = buildSkeleton( skeletons, joints );\n\n\t\t\t\tfor ( let j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst object = newObjects[ j ];\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\tobject.bind( skeleton, controller.skin.bindMatrix );\n\t\t\t\t\t\tobject.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance lights\n\n\t\t\tfor ( let i = 0, l = instanceLights.length; i < l; i ++ ) {\n\n\t\t\t\tconst instanceLight = getLight( instanceLights[ i ] );\n\n\t\t\t\tif ( instanceLight !== null ) {\n\n\t\t\t\t\tobjects.push( instanceLight.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance geometries\n\n\t\t\tfor ( let i = 0, l = instanceGeometries.length; i < l; i ++ ) {\n\n\t\t\t\tconst instance = instanceGeometries[ i ];\n\n\t\t\t\t// a single geometry instance in collada can lead to multiple object3Ds.\n\t\t\t\t// this is the case when primitives are combined like triangles and lines\n\n\t\t\t\tconst geometries = getGeometry( instance.id );\n\t\t\t\tconst newObjects = buildObjects( geometries, instance.materials );\n\n\t\t\t\tfor ( let j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n\t\t\t\t\tobjects.push( newObjects[ j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// instance nodes\n\n\t\t\tfor ( let i = 0, l = instanceNodes.length; i < l; i ++ ) {\n\n\t\t\t\tobjects.push( getNode( instanceNodes[ i ] ).clone() );\n\n\t\t\t}\n\n\t\t\tlet object;\n\n\t\t\tif ( nodes.length === 0 && objects.length === 1 ) {\n\n\t\t\t\tobject = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tobject = ( type === 'JOINT' ) ? new Bone() : new Group();\n\n\t\t\t\tfor ( let i = 0; i < objects.length; i ++ ) {\n\n\t\t\t\t\tobject.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobject.name = ( type === 'JOINT' ) ? data.sid : data.name;\n\t\t\tobject.matrix.copy( matrix );\n\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\treturn object;\n\n\t\t}\n\n\t\tconst fallbackMaterial = new MeshBasicMaterial( {\n\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\tcolor: 0xff00ff\n\t\t} );\n\n\t\tfunction resolveMaterialBinding( keys, instanceMaterials ) {\n\n\t\t\tconst materials = [];\n\n\t\t\tfor ( let i = 0, l = keys.length; i < l; i ++ ) {\n\n\t\t\t\tconst id = instanceMaterials[ keys[ i ] ];\n\n\t\t\t\tif ( id === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Material with key %s not found. Apply fallback material.', keys[ i ] );\n\t\t\t\t\tmaterials.push( fallbackMaterial );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials.push( getMaterial( id ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t}\n\n\t\tfunction buildObjects( geometries, instanceMaterials ) {\n\n\t\t\tconst objects = [];\n\n\t\t\tfor ( const type in geometries ) {\n\n\t\t\t\tconst geometry = geometries[ type ];\n\n\t\t\t\tconst materials = resolveMaterialBinding( geometry.materialKeys, instanceMaterials );\n\n\t\t\t\t// handle case if no materials are defined\n\n\t\t\t\tif ( materials.length === 0 ) {\n\n\t\t\t\t\tif ( type === 'lines' || type === 'linestrips' ) {\n\n\t\t\t\t\t\tmaterials.push( new LineBasicMaterial() );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterials.push( new MeshPhongMaterial() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Collada allows to use phong and lambert materials with lines. Replacing these cases with LineBasicMaterial.\n\n\t\t\t\tif ( type === 'lines' || type === 'linestrips' ) {\n\n\t\t\t\t\tfor ( let i = 0, l = materials.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst material = materials[ i ];\n\n\t\t\t\t\t\tif ( material.isMeshPhongMaterial === true || material.isMeshLambertMaterial === true ) {\n\n\t\t\t\t\t\t\tconst lineMaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t\t// copy compatible properties\n\n\t\t\t\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\t\t\t\tlineMaterial.opacity = material.opacity;\n\t\t\t\t\t\t\tlineMaterial.transparent = material.transparent;\n\n\t\t\t\t\t\t\t// replace material\n\n\t\t\t\t\t\t\tmaterials[ i ] = lineMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// regard skinning\n\n\t\t\t\tconst skinning = ( geometry.data.attributes.skinIndex !== undefined );\n\n\t\t\t\t// choose between a single or multi materials (material array)\n\n\t\t\t\tconst material = ( materials.length === 1 ) ? materials[ 0 ] : materials;\n\n\t\t\t\t// now create a specific 3D object\n\n\t\t\t\tlet object;\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'lines':\n\t\t\t\t\t\tobject = new LineSegments( geometry.data, material );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'linestrips':\n\t\t\t\t\t\tobject = new Line( geometry.data, material );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'triangles':\n\t\t\t\t\tcase 'polylist':\n\t\t\t\t\t\tif ( skinning ) {\n\n\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry.data, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tobject = new Mesh( geometry.data, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tobjects.push( object );\n\n\t\t\t}\n\n\t\t\treturn objects;\n\n\t\t}\n\n\t\tfunction hasNode( id ) {\n\n\t\t\treturn library.nodes[ id ] !== undefined;\n\n\t\t}\n\n\t\tfunction getNode( id ) {\n\n\t\t\treturn getBuild( library.nodes[ id ], buildNode );\n\n\t\t}\n\n\t\t// visual scenes\n\n\t\tfunction parseVisualScene( xml ) {\n\n\t\t\tconst data = {\n\t\t\t\tname: xml.getAttribute( 'name' ),\n\t\t\t\tchildren: []\n\t\t\t};\n\n\t\t\tprepareNodes( xml );\n\n\t\t\tconst elements = getElementsByTagName( xml, 'node' );\n\n\t\t\tfor ( let i = 0; i < elements.length; i ++ ) {\n\n\t\t\t\tdata.children.push( parseNode( elements[ i ] ) );\n\n\t\t\t}\n\n\t\t\tlibrary.visualScenes[ xml.getAttribute( 'id' ) ] = data;\n\n\t\t}\n\n\t\tfunction buildVisualScene( data ) {\n\n\t\t\tconst group = new Group();\n\t\t\tgroup.name = data.name;\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tgroup.add( getNode( child.id ) );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t}\n\n\t\tfunction hasVisualScene( id ) {\n\n\t\t\treturn library.visualScenes[ id ] !== undefined;\n\n\t\t}\n\n\t\tfunction getVisualScene( id ) {\n\n\t\t\treturn getBuild( library.visualScenes[ id ], buildVisualScene );\n\n\t\t}\n\n\t\t// scenes\n\n\t\tfunction parseScene( xml ) {\n\n\t\t\tconst instance = getElementsByTagName( xml, 'instance_visual_scene' )[ 0 ];\n\t\t\treturn getVisualScene( parseId( instance.getAttribute( 'url' ) ) );\n\n\t\t}\n\n\t\tfunction setupAnimations() {\n\n\t\t\tconst clips = library.clips;\n\n\t\t\tif ( isEmpty( clips ) === true ) {\n\n\t\t\t\tif ( isEmpty( library.animations ) === false ) {\n\n\t\t\t\t\t// if there are animations but no clips, we create a default clip for playback\n\n\t\t\t\t\tconst tracks = [];\n\n\t\t\t\t\tfor ( const id in library.animations ) {\n\n\t\t\t\t\t\tconst animationTracks = getAnimation( id );\n\n\t\t\t\t\t\tfor ( let i = 0, l = animationTracks.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\ttracks.push( animationTracks[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimations.push( new AnimationClip( 'default', - 1, tracks ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( const id in clips ) {\n\n\t\t\t\t\tanimations.push( getAnimationClip( id ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// convert the parser error element into text with each child elements text\n\t\t// separated by new lines.\n\n\t\tfunction parserErrorToText( parserError ) {\n\n\t\t\tlet result = '';\n\t\t\tconst stack = [ parserError ];\n\n\t\t\twhile ( stack.length ) {\n\n\t\t\t\tconst node = stack.shift();\n\n\t\t\t\tif ( node.nodeType === Node.TEXT_NODE ) {\n\n\t\t\t\t\tresult += node.textContent;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresult += '\\n';\n\t\t\t\t\tstack.push.apply( stack, node.childNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result.trim();\n\n\t\t}\n\n\t\tif ( text.length === 0 ) {\n\n\t\t\treturn { scene: new Scene() };\n\n\t\t}\n\n\t\tconst xml = new DOMParser().parseFromString( text, 'application/xml' );\n\n\t\tconst collada = getElementsByTagName( xml, 'COLLADA' )[ 0 ];\n\n\t\tconst parserError = xml.getElementsByTagName( 'parsererror' )[ 0 ];\n\t\tif ( parserError !== undefined ) {\n\n\t\t\t// Chrome will return parser error with a div in it\n\n\t\t\tconst errorElement = getElementsByTagName( parserError, 'div' )[ 0 ];\n\t\t\tlet errorText;\n\n\t\t\tif ( errorElement ) {\n\n\t\t\t\terrorText = errorElement.textContent;\n\n\t\t\t} else {\n\n\t\t\t\terrorText = parserErrorToText( parserError );\n\n\t\t\t}\n\n\t\t\tconsole.error( 'THREE.ColladaLoader: Failed to parse collada file.\\n', errorText );\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// metadata\n\n\t\tconst version = collada.getAttribute( 'version' );\n\t\tconsole.debug( 'THREE.ColladaLoader: File version', version );\n\n\t\tconst asset = parseAsset( getElementsByTagName( collada, 'asset' )[ 0 ] );\n\t\tconst textureLoader = new TextureLoader( this.manager );\n\t\ttextureLoader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\tlet tgaLoader;\n\n\t\tif ( TGALoader ) {\n\n\t\t\ttgaLoader = new TGALoader( this.manager );\n\t\t\ttgaLoader.setPath( this.resourcePath || path );\n\n\t\t}\n\n\t\t//\n\n\t\tconst tempColor = new Color();\n\t\tconst animations = [];\n\t\tlet kinematics = {};\n\t\tlet count = 0;\n\n\t\t//\n\n\t\tconst library = {\n\t\t\tanimations: {},\n\t\t\tclips: {},\n\t\t\tcontrollers: {},\n\t\t\timages: {},\n\t\t\teffects: {},\n\t\t\tmaterials: {},\n\t\t\tcameras: {},\n\t\t\tlights: {},\n\t\t\tgeometries: {},\n\t\t\tnodes: {},\n\t\t\tvisualScenes: {},\n\t\t\tkinematicsModels: {},\n\t\t\tphysicsModels: {},\n\t\t\tkinematicsScenes: {}\n\t\t};\n\n\t\tparseLibrary( collada, 'library_animations', 'animation', parseAnimation );\n\t\tparseLibrary( collada, 'library_animation_clips', 'animation_clip', parseAnimationClip );\n\t\tparseLibrary( collada, 'library_controllers', 'controller', parseController );\n\t\tparseLibrary( collada, 'library_images', 'image', parseImage );\n\t\tparseLibrary( collada, 'library_effects', 'effect', parseEffect );\n\t\tparseLibrary( collada, 'library_materials', 'material', parseMaterial );\n\t\tparseLibrary( collada, 'library_cameras', 'camera', parseCamera );\n\t\tparseLibrary( collada, 'library_lights', 'light', parseLight );\n\t\tparseLibrary( collada, 'library_geometries', 'geometry', parseGeometry );\n\t\tparseLibrary( collada, 'library_nodes', 'node', parseNode );\n\t\tparseLibrary( collada, 'library_visual_scenes', 'visual_scene', parseVisualScene );\n\t\tparseLibrary( collada, 'library_kinematics_models', 'kinematics_model', parseKinematicsModel );\n\t\tparseLibrary( collada, 'library_physics_models', 'physics_model', parsePhysicsModel );\n\t\tparseLibrary( collada, 'scene', 'instance_kinematics_scene', parseKinematicsScene );\n\n\t\tbuildLibrary( library.animations, buildAnimation );\n\t\tbuildLibrary( library.clips, buildAnimationClip );\n\t\tbuildLibrary( library.controllers, buildController );\n\t\tbuildLibrary( library.images, buildImage );\n\t\tbuildLibrary( library.effects, buildEffect );\n\t\tbuildLibrary( library.materials, buildMaterial );\n\t\tbuildLibrary( library.cameras, buildCamera );\n\t\tbuildLibrary( library.lights, buildLight );\n\t\tbuildLibrary( library.geometries, buildGeometry );\n\t\tbuildLibrary( library.visualScenes, buildVisualScene );\n\n\t\tsetupAnimations();\n\t\tsetupKinematics();\n\n\t\tconst scene = parseScene( getElementsByTagName( collada, 'scene' )[ 0 ] );\n\t\tscene.animations = animations;\n\n\t\tif ( asset.upAxis === 'Z_UP' ) {\n\n\t\t\tconsole.warn( 'THREE.ColladaLoader: You are loading an asset with a Z-UP coordinate system. The loader just rotates the asset to transform it into Y-UP. The vertex data are not converted, see #24289.' );\n\t\t\tscene.rotation.set( - Math.PI / 2, 0, 0 );\n\n\t\t}\n\n\t\tscene.scale.multiplyScalar( asset.unit );\n\n\t\treturn {\n\t\t\tget animations() {\n\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Please access animations over scene.animations now.' );\n\t\t\t\treturn animations;\n\n\t\t\t},\n\t\t\tkinematics: kinematics,\n\t\t\tlibrary: library,\n\t\t\tscene: scene\n\t\t};\n\n\t}\n\n}\n\nexport { ColladaLoader };\n","import {\n\tDataTextureLoader,\n\tLinearMipmapLinearFilter\n} from 'three';\n\nclass TGALoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tparse( buffer ) {\n\n\t\t// reference from vthibault, https://github.com/vthibault/roBrowser/blob/master/src/Loaders/Targa.js\n\n\t\tfunction tgaCheckHeader( header ) {\n\n\t\t\tswitch ( header.image_type ) {\n\n\t\t\t\t// check indexed type\n\n\t\t\t\tcase TGA_TYPE_INDEXED:\n\t\t\t\tcase TGA_TYPE_RLE_INDEXED:\n\t\t\t\t\tif ( header.colormap_length > 256 || header.colormap_size !== 24 || header.colormap_type !== 1 ) {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.TGALoader: Invalid type colormap data for indexed type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// check colormap type\n\n\t\t\t\tcase TGA_TYPE_RGB:\n\t\t\t\tcase TGA_TYPE_GREY:\n\t\t\t\tcase TGA_TYPE_RLE_RGB:\n\t\t\t\tcase TGA_TYPE_RLE_GREY:\n\t\t\t\t\tif ( header.colormap_type ) {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.TGALoader: Invalid type colormap data for colormap type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// What the need of a file without data ?\n\n\t\t\t\tcase TGA_TYPE_NO_DATA:\n\t\t\t\t\tthrow new Error( 'THREE.TGALoader: No data.' );\n\n\t\t\t\t\t// Invalid type ?\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'THREE.TGALoader: Invalid type ' + header.image_type );\n\n\t\t\t}\n\n\t\t\t// check image width and height\n\n\t\t\tif ( header.width <= 0 || header.height <= 0 ) {\n\n\t\t\t\tthrow new Error( 'THREE.TGALoader: Invalid image size.' );\n\n\t\t\t}\n\n\t\t\t// check image pixel size\n\n\t\t\tif ( header.pixel_size !== 8 && header.pixel_size !== 16 &&\n\t\t\t\theader.pixel_size !== 24 && header.pixel_size !== 32 ) {\n\n\t\t\t\tthrow new Error( 'THREE.TGALoader: Invalid pixel size ' + header.pixel_size );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// parse tga image buffer\n\n\t\tfunction tgaParse( use_rle, use_pal, header, offset, data ) {\n\n\t\t\tlet pixel_data,\n\t\t\t\tpalettes;\n\n\t\t\tconst pixel_size = header.pixel_size >> 3;\n\t\t\tconst pixel_total = header.width * header.height * pixel_size;\n\n\t\t\t // read palettes\n\n\t\t\t if ( use_pal ) {\n\n\t\t\t\t palettes = data.subarray( offset, offset += header.colormap_length * ( header.colormap_size >> 3 ) );\n\n\t\t\t }\n\n\t\t\t // read RLE\n\n\t\t\t if ( use_rle ) {\n\n\t\t\t\t pixel_data = new Uint8Array( pixel_total );\n\n\t\t\t\tlet c, count, i;\n\t\t\t\tlet shift = 0;\n\t\t\t\tconst pixels = new Uint8Array( pixel_size );\n\n\t\t\t\twhile ( shift < pixel_total ) {\n\n\t\t\t\t\tc = data[ offset ++ ];\n\t\t\t\t\tcount = ( c & 0x7f ) + 1;\n\n\t\t\t\t\t// RLE pixels\n\n\t\t\t\t\tif ( c & 0x80 ) {\n\n\t\t\t\t\t\t// bind pixel tmp array\n\n\t\t\t\t\t\tfor ( i = 0; i < pixel_size; ++ i ) {\n\n\t\t\t\t\t\t\tpixels[ i ] = data[ offset ++ ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// copy pixel array\n\n\t\t\t\t\t\tfor ( i = 0; i < count; ++ i ) {\n\n\t\t\t\t\t\t\tpixel_data.set( pixels, shift + i * pixel_size );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tshift += pixel_size * count;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// raw pixels\n\n\t\t\t\t\t\tcount *= pixel_size;\n\n\t\t\t\t\t\tfor ( i = 0; i < count; ++ i ) {\n\n\t\t\t\t\t\t\tpixel_data[ shift + i ] = data[ offset ++ ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tshift += count;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t } else {\n\n\t\t\t\t// raw pixels\n\n\t\t\t\tpixel_data = data.subarray(\n\t\t\t\t\t offset, offset += ( use_pal ? header.width * header.height : pixel_total )\n\t\t\t\t);\n\n\t\t\t }\n\n\t\t\t return {\n\t\t\t\tpixel_data: pixel_data,\n\t\t\t\tpalettes: palettes\n\t\t\t };\n\n\t\t}\n\n\t\tfunction tgaGetImageData8bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image, palettes ) {\n\n\t\t\tconst colormap = palettes;\n\t\t\tlet color, i = 0, x, y;\n\t\t\tconst width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i ++ ) {\n\n\t\t\t\t\tcolor = image[ i ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = 255;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = colormap[ ( color * 3 ) + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = colormap[ ( color * 3 ) + 1 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = colormap[ ( color * 3 ) + 2 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageData16bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tlet color, i = 0, x, y;\n\t\t\tconst width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 2 ) {\n\n\t\t\t\t\tcolor = image[ i + 0 ] + ( image[ i + 1 ] << 8 );\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = ( color & 0x7C00 ) >> 7;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = ( color & 0x03E0 ) >> 2;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = ( color & 0x001F ) << 3;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = ( color & 0x8000 ) ? 0 : 255;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageData24bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tlet i = 0, x, y;\n\t\t\tconst width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 3 ) {\n\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = 255;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = image[ i + 1 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = image[ i + 2 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageData32bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tlet i = 0, x, y;\n\t\t\tconst width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 4 ) {\n\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = image[ i + 1 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = image[ i + 2 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = image[ i + 3 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageDataGrey8bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tlet color, i = 0, x, y;\n\t\t\tconst width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i ++ ) {\n\n\t\t\t\t\tcolor = image[ i ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = color;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = color;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = color;\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = 255;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction tgaGetImageDataGrey16bits( imageData, y_start, y_step, y_end, x_start, x_step, x_end, image ) {\n\n\t\t\tlet i = 0, x, y;\n\t\t\tconst width = header.width;\n\n\t\t\tfor ( y = y_start; y !== y_end; y += y_step ) {\n\n\t\t\t\tfor ( x = x_start; x !== x_end; x += x_step, i += 2 ) {\n\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 0 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 1 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 2 ] = image[ i + 0 ];\n\t\t\t\t\timageData[ ( x + width * y ) * 4 + 3 ] = image[ i + 1 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn imageData;\n\n\t\t}\n\n\t\tfunction getTgaRGBA( data, width, height, image, palette ) {\n\n\t\t\tlet x_start,\n\t\t\t\ty_start,\n\t\t\t\tx_step,\n\t\t\t\ty_step,\n\t\t\t\tx_end,\n\t\t\t\ty_end;\n\n\t\t\tswitch ( ( header.flags & TGA_ORIGIN_MASK ) >> TGA_ORIGIN_SHIFT ) {\n\n\t\t\t\tdefault:\n\t\t\t\tcase TGA_ORIGIN_UL:\n\t\t\t\t\tx_start = 0;\n\t\t\t\t\tx_step = 1;\n\t\t\t\t\tx_end = width;\n\t\t\t\t\ty_start = 0;\n\t\t\t\t\ty_step = 1;\n\t\t\t\t\ty_end = height;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TGA_ORIGIN_BL:\n\t\t\t\t\tx_start = 0;\n\t\t\t\t\tx_step = 1;\n\t\t\t\t\tx_end = width;\n\t\t\t\t\ty_start = height - 1;\n\t\t\t\t\ty_step = - 1;\n\t\t\t\t\ty_end = - 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TGA_ORIGIN_UR:\n\t\t\t\t\tx_start = width - 1;\n\t\t\t\t\tx_step = - 1;\n\t\t\t\t\tx_end = - 1;\n\t\t\t\t\ty_start = 0;\n\t\t\t\t\ty_step = 1;\n\t\t\t\t\ty_end = height;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TGA_ORIGIN_BR:\n\t\t\t\t\tx_start = width - 1;\n\t\t\t\t\tx_step = - 1;\n\t\t\t\t\tx_end = - 1;\n\t\t\t\t\ty_start = height - 1;\n\t\t\t\t\ty_step = - 1;\n\t\t\t\t\ty_end = - 1;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( use_grey ) {\n\n\t\t\t\tswitch ( header.pixel_size ) {\n\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\ttgaGetImageDataGrey8bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\ttgaGetImageDataGrey16bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error( 'THREE.TGALoader: Format not supported.' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( header.pixel_size ) {\n\n\t\t\t\t\tcase 8:\n\t\t\t\t\t\ttgaGetImageData8bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image, palette );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\ttgaGetImageData16bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 24:\n\t\t\t\t\t\ttgaGetImageData24bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 32:\n\t\t\t\t\t\ttgaGetImageData32bits( data, y_start, y_step, y_end, x_start, x_step, x_end, image );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error( 'THREE.TGALoader: Format not supported.' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Load image data according to specific method\n\t\t\t// let func = 'tgaGetImageData' + (use_grey ? 'Grey' : '') + (header.pixel_size) + 'bits';\n\t\t\t// func(data, y_start, y_step, y_end, x_start, x_step, x_end, width, image, palette );\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// TGA constants\n\n\t\tconst TGA_TYPE_NO_DATA = 0,\n\t\t\tTGA_TYPE_INDEXED = 1,\n\t\t\tTGA_TYPE_RGB = 2,\n\t\t\tTGA_TYPE_GREY = 3,\n\t\t\tTGA_TYPE_RLE_INDEXED = 9,\n\t\t\tTGA_TYPE_RLE_RGB = 10,\n\t\t\tTGA_TYPE_RLE_GREY = 11,\n\n\t\t\tTGA_ORIGIN_MASK = 0x30,\n\t\t\tTGA_ORIGIN_SHIFT = 0x04,\n\t\t\tTGA_ORIGIN_BL = 0x00,\n\t\t\tTGA_ORIGIN_BR = 0x01,\n\t\t\tTGA_ORIGIN_UL = 0x02,\n\t\t\tTGA_ORIGIN_UR = 0x03;\n\n\t\tif ( buffer.length < 19 ) throw new Error( 'THREE.TGALoader: Not enough data to contain header.' );\n\n\t\tlet offset = 0;\n\n\t\tconst content = new Uint8Array( buffer ),\n\t\t\theader = {\n\t\t\t\tid_length: content[ offset ++ ],\n\t\t\t\tcolormap_type: content[ offset ++ ],\n\t\t\t\timage_type: content[ offset ++ ],\n\t\t\t\tcolormap_index: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\tcolormap_length: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\tcolormap_size: content[ offset ++ ],\n\t\t\t\torigin: [\n\t\t\t\t\tcontent[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\t\tcontent[ offset ++ ] | content[ offset ++ ] << 8\n\t\t\t\t],\n\t\t\t\twidth: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\theight: content[ offset ++ ] | content[ offset ++ ] << 8,\n\t\t\t\tpixel_size: content[ offset ++ ],\n\t\t\t\tflags: content[ offset ++ ]\n\t\t\t};\n\n\t\t// check tga if it is valid format\n\n\t\ttgaCheckHeader( header );\n\n\t\tif ( header.id_length + offset > buffer.length ) {\n\n\t\t\tthrow new Error( 'THREE.TGALoader: No data.' );\n\n\t\t}\n\n\t\t// skip the needn't data\n\n\t\toffset += header.id_length;\n\n\t\t// get targa information about RLE compression and palette\n\n\t\tlet use_rle = false,\n\t\t\tuse_pal = false,\n\t\t\tuse_grey = false;\n\n\t\tswitch ( header.image_type ) {\n\n\t\t\tcase TGA_TYPE_RLE_INDEXED:\n\t\t\t\tuse_rle = true;\n\t\t\t\tuse_pal = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_INDEXED:\n\t\t\t\tuse_pal = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_RLE_RGB:\n\t\t\t\tuse_rle = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_RGB:\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_RLE_GREY:\n\t\t\t\tuse_rle = true;\n\t\t\t\tuse_grey = true;\n\t\t\t\tbreak;\n\n\t\t\tcase TGA_TYPE_GREY:\n\t\t\t\tuse_grey = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t//\n\n\t\tconst imageData = new Uint8Array( header.width * header.height * 4 );\n\t\tconst result = tgaParse( use_rle, use_pal, header, offset, content );\n\t\tgetTgaRGBA( imageData, header.width, header.height, result.pixel_data, result.palettes );\n\n\t\treturn {\n\n\t\t\tdata: imageData,\n\t\t\twidth: header.width,\n\t\t\theight: header.height,\n\t\t\tflipY: true,\n\t\t\tgenerateMipmaps: true,\n\t\t\tminFilter: LinearMipmapLinearFilter,\n\n\t\t};\n\n\t}\n\n}\n\nexport { TGALoader };\n","var Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport default Stats;\n","import * as THREE from 'three';\r\n\r\nexport function generateRadialFloorTexture( dim ) {\r\n\r\n\tconst data = new Uint8Array( dim * dim * 4 );\r\n\r\n\tfor ( let x = 0; x < dim; x ++ ) {\r\n\r\n\t\tfor ( let y = 0; y < dim; y ++ ) {\r\n\r\n\t\t\tconst xNorm = x / ( dim - 1 );\r\n\t\t\tconst yNorm = y / ( dim - 1 );\r\n\r\n\t\t\tconst xCent = 2.0 * ( xNorm - 0.5 );\r\n\t\t\tconst yCent = 2.0 * ( yNorm - 0.5 );\r\n\t\t\tlet a = Math.max( Math.min( 1.0 - Math.sqrt( xCent ** 2 + yCent ** 2 ), 1.0 ), 0.0 );\r\n\t\t\ta = a ** 2;\r\n\t\t\ta = a * 1.5;\r\n\t\t\ta = Math.min( a, 1.0 );\r\n\r\n\t\t\tconst i = y * dim + x;\r\n\t\t\tdata[ i * 4 + 0 ] = 255;\r\n\t\t\tdata[ i * 4 + 1 ] = 255;\r\n\t\t\tdata[ i * 4 + 2 ] = 255;\r\n\t\t\tdata[ i * 4 + 3 ] = a * 255;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst tex = new THREE.DataTexture( data, dim, dim );\r\n\ttex.format = THREE.RGBAFormat;\r\n\ttex.type = THREE.UnsignedByteType;\r\n\ttex.minFilter = THREE.LinearFilter;\r\n\ttex.magFilter = THREE.LinearFilter;\r\n\ttex.wrapS = THREE.RepeatWrapping;\r\n\ttex.wrapT = THREE.RepeatWrapping;\r\n\ttex.needsUpdate = true;\r\n\treturn tex;\r\n\r\n}\r\n","export function getScaledSettings() {\r\n\r\n\tlet tiles = 3;\r\n\tlet renderScale = Math.max( 1 / window.devicePixelRatio, 0.5 );\r\n\r\n\t// adjust performance parameters for mobile\r\n\tconst aspectRatio = window.innerWidth / window.innerHeight;\r\n\tif ( aspectRatio < 0.65 ) {\r\n\r\n\t\ttiles = 4;\r\n\t\trenderScale = 0.5 / window.devicePixelRatio;\r\n\r\n\t}\r\n\r\n\treturn { tiles, renderScale };\r\n\r\n}\r\n","let _styleElement;\r\nfunction initializeStyles() {\r\n\r\n\tif ( _styleElement ) {\r\n\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\t_styleElement = document.createElement( 'style' );\r\n\t_styleElement.textContent = /* css */`\r\n\r\n\t\t.loader-container, .description {\r\n\t\t\tposition: absolute;\r\n\t\t\twidth: 100%;\r\n\t\t\tfont-family: 'Courier New', Courier, monospace;\r\n\t\t\tcolor: white;\r\n\t\t\tfont-weight: light;\r\n\t\t\talign-items: flex-start;\r\n\t\t\tfont-size: 14px;\r\n\t\t\tpointer-events: none;\r\n\t\t\tuser-select: none;\r\n\t\t}\r\n\r\n\t\t.loader-container {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tbottom: 0;\r\n\t\t}\r\n\r\n\t\t.description {\r\n\t\t\ttop: 0;\r\n\t\t\twidth: 100%;\r\n\t\t\ttext-align: center;\r\n\t\t\tpadding: 5px 0;\r\n\t\t}\r\n\r\n\t\t.loader-container .bar {\r\n\t\t\theight: 2px;\r\n\t\t\tbackground: white;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\r\n\t\t.loader-container .credits,\r\n\t\t.loader-container .samples,\r\n\t\t.loader-container .percentage {\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 0 0 1px 1px;\r\n\t\t\tbackground: rgba( 0, 0, 0, 0.2 );\r\n\t\t\tborder-radius: 2px;\r\n\t\t\tdisplay: inline-block;\r\n\t\t}\r\n\r\n\t\t.loader-container:not(.loading) .bar,\r\n\t\t.loader-container:not(.loading) .percentage,\r\n\t\t.loader-container.loading .credits,\r\n\t\t.loader-container.loading .samples,\r\n\t\t.loader-container .credits:empty {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\t.loader-container .credits a,\r\n\t\t.loader-container .credits,\r\n\t\t.loader-container .samples {\r\n\t\t\tcolor: rgba( 255, 255, 255, 0.75 );\r\n\t\t}\r\n\t`;\r\n\tdocument.head.appendChild( _styleElement );\r\n\r\n}\r\n\r\nexport class LoaderElement {\r\n\r\n\tconstructor() {\r\n\r\n\t\tinitializeStyles();\r\n\r\n\t\tconst container = document.createElement( 'div' );\r\n\t\tcontainer.classList.add( 'loader-container' );\r\n\r\n\t\tconst percentageEl = document.createElement( 'div' );\r\n\t\tpercentageEl.classList.add( 'percentage' );\r\n\t\tcontainer.appendChild( percentageEl );\r\n\r\n\t\tconst samplesEl = document.createElement( 'div' );\r\n\t\tsamplesEl.classList.add( 'samples' );\r\n\t\tcontainer.appendChild( samplesEl );\r\n\r\n\t\tconst creditsEl = document.createElement( 'div' );\r\n\t\tcreditsEl.classList.add( 'credits' );\r\n\t\tcontainer.appendChild( creditsEl );\r\n\r\n\t\tconst loaderBarEl = document.createElement( 'div' );\r\n\t\tloaderBarEl.classList.add( 'bar' );\r\n\t\tcontainer.appendChild( loaderBarEl );\r\n\r\n\t\tconst descriptionEl = document.createElement( 'div' );\r\n\t\tdescriptionEl.classList.add( 'description' );\r\n\t\tcontainer.appendChild( descriptionEl );\r\n\r\n\t\tthis._description = descriptionEl;\r\n\t\tthis._loaderBar = loaderBarEl;\r\n\t\tthis._percentage = percentageEl;\r\n\t\tthis._credits = creditsEl;\r\n\t\tthis._samples = samplesEl;\r\n\t\tthis._container = container;\r\n\r\n\t\tthis.setPercentage( 0 );\r\n\r\n\t}\r\n\r\n\tattach( container ) {\r\n\r\n\t\tcontainer.appendChild( this._container );\r\n\t\tcontainer.appendChild( this._description );\r\n\r\n\t}\r\n\r\n\tsetPercentage( perc ) {\r\n\r\n\t\tthis._loaderBar.style.width = `${ perc * 100 }%`;\r\n\r\n\t\tif ( perc === 0 ) {\r\n\r\n\t\t\tthis._percentage.innerText = 'Loading...';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._percentage.innerText = `${ ( perc * 100 ).toFixed( 0 ) }%`;\r\n\r\n\t\t}\r\n\r\n\t\tif ( perc >= 1 ) {\r\n\r\n\t\t\tthis._container.classList.remove( 'loading' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._container.classList.add( 'loading' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetSamples( count, compiling = false ) {\r\n\r\n\t\tif ( compiling ) {\r\n\r\n\t\t\tthis._samples.innerText = 'compiling shader...';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._samples.innerText = `${ Math.floor( count ) } samples`;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetCredits( credits ) {\r\n\r\n\t\tthis._credits.innerHTML = credits;\r\n\r\n\t}\r\n\r\n\tsetDescription( description ) {\r\n\r\n\t\tthis._description.innerHTML = description;\r\n\r\n\t}\r\n\r\n}\r\n","import { Box3, BufferAttribute } from 'three';\nimport { MeshBVH } from '../core/MeshBVH.js';\nimport { WorkerBase } from './utils/WorkerBase.js';\nimport { convertToBufferType, isSharedArrayBufferSupported } from '../utils/BufferUtils.js';\nimport { GenerateMeshBVHWorker } from './GenerateMeshBVHWorker.js';\nimport { ensureIndex } from '../core/build/geometryUtils.js';\n\nconst DEFAULT_WORKER_COUNT = typeof navigator !== 'undefined' ? navigator.hardwareConcurrency : 4;\nclass _ParallelMeshBVHWorker extends WorkerBase {\n\n\tconstructor() {\n\n\t\tconst worker = new Worker( new URL( './parallelMeshBVH.worker.js', import.meta.url ), { type: 'module' } );\n\t\tsuper( worker );\n\n\t\tthis.name = 'ParallelMeshBVHWorker';\n\t\tthis.maxWorkerCount = Math.max( DEFAULT_WORKER_COUNT, 4 );\n\n\t\tif ( ! isSharedArrayBufferSupported() ) {\n\n\t\t\tthrow new Error( 'ParallelMeshBVHWorker: Shared Array Buffers are not supported.' );\n\n\t\t}\n\n\t}\n\n\trunTask( worker, geometry, options = {} ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tif ( ! geometry.index && ! options.indirect ) {\n\n\t\t\t\tensureIndex( geometry, options );\n\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tgeometry.getAttribute( 'position' ).isInterleavedBufferAttribute ||\n\t\t\t\tgeometry.index && geometry.index.isInterleavedBufferAttribute\n\t\t\t) {\n\n\t\t\t\tthrow new Error( 'ParallelMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.' );\n\n\t\t\t}\n\n\t\t\tworker.onerror = e => {\n\n\t\t\t\treject( new Error( `ParallelMeshBVHWorker: ${ e.message }` ) );\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tconst { data } = e;\n\n\t\t\t\tif ( data.error ) {\n\n\t\t\t\t\treject( new Error( data.error ) );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( data.serialized ) {\n\n\t\t\t\t\tconst { serialized, position } = data;\n\t\t\t\t\tconst bvh = MeshBVH.deserialize( serialized, geometry, { setIndex: false } );\n\t\t\t\t\tconst boundsOptions = {\n\t\t\t\t\t\tsetBoundingBox: true,\n\t\t\t\t\t\t...options,\n\t\t\t\t\t};\n\n\t\t\t\t\t// we need to replace the arrays because they're neutered entirely by the\n\t\t\t\t\t// webworker transfer.\n\t\t\t\t\tgeometry.attributes.position.array = position;\n\t\t\t\t\tif ( serialized.index ) {\n\n\t\t\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\t\t\tgeometry.index.array = serialized.index;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst newIndex = new BufferAttribute( serialized.index, 1, false );\n\t\t\t\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boundsOptions.setBoundingBox ) {\n\n\t\t\t\t\t\tgeometry.boundingBox = bvh.getBoundingBox( new Box3() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( options.onProgress ) {\n\n\t\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( bvh );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( options.onProgress ) {\n\n\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst index = geometry.index ? geometry.index.array : null;\n\t\t\tconst position = geometry.attributes.position.array;\n\t\t\tworker.postMessage( {\n\n\t\t\t\toperation: 'BUILD_BVH',\n\t\t\t\tmaxWorkerCount: this.maxWorkerCount,\n\t\t\t\tindex: convertToBufferType( index, SharedArrayBuffer ),\n\t\t\t\tposition: convertToBufferType( position, SharedArrayBuffer ),\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tonProgress: null,\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\n\t\t\t\t\tgroups: [ ... geometry.groups ],\n\t\t\t\t},\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n}\n\nexport class ParallelMeshBVHWorker {\n\n\tconstructor() {\n\n\t\tif ( isSharedArrayBufferSupported() ) {\n\n\t\t\treturn new _ParallelMeshBVHWorker();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'ParallelMeshBVHWorker: SharedArrayBuffers not supported. Falling back to single-threaded GenerateMeshBVHWorker.' );\n\n\t\t\tconst object = new GenerateMeshBVHWorker();\n\t\t\tobject.maxWorkerCount = DEFAULT_WORKER_COUNT;\n\t\t\treturn object;\n\n\t\t}\n\n\t}\n\n}\n","export class WorkerBase {\n\n\tconstructor( worker ) {\n\n\t\tthis.name = 'WorkerBase';\n\t\tthis.running = false;\n\t\tthis.worker = worker;\n\t\tthis.worker.onerror = e => {\n\n\t\t\tif ( e.message ) {\n\n\t\t\t\tthrow new Error( `${ this.name }: Could not create Web Worker with error \"${ e.message }\"` );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( `${ this.name }: Could not create Web Worker.` );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\trunTask() {}\n\n\tgenerate( ...args ) {\n\n\t\tif ( this.running ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Already running job.' );\n\n\t\t}\n\n\t\tif ( this.worker === null ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Worker has been disposed.' );\n\n\t\t}\n\n\t\tthis.running = true;\n\n\t\tconst promise = this.runTask( this.worker, ...args );\n\t\tpromise.finally( () => {\n\n\t\t\tthis.running = false;\n\n\t\t} );\n\n\t\treturn promise;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.worker.terminate();\n\t\tthis.worker = null;\n\n\t}\n\n}\n","import { Box3, BufferAttribute } from 'three';\nimport { MeshBVH } from '../core/MeshBVH.js';\nimport { WorkerBase } from './utils/WorkerBase.js';\n\nexport class GenerateMeshBVHWorker extends WorkerBase {\n\n\tconstructor() {\n\n\t\tconst worker = new Worker( new URL( './generateMeshBVH.worker.js', import.meta.url ), { type: 'module' } );\n\t\tsuper( worker );\n\t\tthis.name = 'GenerateMeshBVHWorker';\n\n\t}\n\n\trunTask( worker, geometry, options = {} ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tif (\n\t\t\t\tgeometry.getAttribute( 'position' ).isInterleavedBufferAttribute ||\n\t\t\t\tgeometry.index && geometry.index.isInterleavedBufferAttribute\n\t\t\t) {\n\n\t\t\t\tthrow new Error( 'GenerateMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.' );\n\n\t\t\t}\n\n\t\t\tworker.onerror = e => {\n\n\t\t\t\treject( new Error( `GenerateMeshBVHWorker: ${ e.message }` ) );\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tconst { data } = e;\n\n\t\t\t\tif ( data.error ) {\n\n\t\t\t\t\treject( new Error( data.error ) );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( data.serialized ) {\n\n\t\t\t\t\tconst { serialized, position } = data;\n\t\t\t\t\tconst bvh = MeshBVH.deserialize( serialized, geometry, { setIndex: false } );\n\t\t\t\t\tconst boundsOptions = Object.assign( {\n\n\t\t\t\t\t\tsetBoundingBox: true,\n\n\t\t\t\t\t}, options );\n\n\t\t\t\t\t// we need to replace the arrays because they're neutered entirely by the\n\t\t\t\t\t// webworker transfer.\n\t\t\t\t\tgeometry.attributes.position.array = position;\n\t\t\t\t\tif ( serialized.index ) {\n\n\t\t\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\t\t\tgeometry.index.array = serialized.index;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst newIndex = new BufferAttribute( serialized.index, 1, false );\n\t\t\t\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boundsOptions.setBoundingBox ) {\n\n\t\t\t\t\t\tgeometry.boundingBox = bvh.getBoundingBox( new Box3() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( options.onProgress ) {\n\n\t\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( bvh );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( options.onProgress ) {\n\n\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst index = geometry.index ? geometry.index.array : null;\n\t\t\tconst position = geometry.attributes.position.array;\n\t\t\tconst transferable = [ position ];\n\t\t\tif ( index ) {\n\n\t\t\t\ttransferable.push( index );\n\n\t\t\t}\n\n\t\t\tworker.postMessage( {\n\n\t\t\t\tindex,\n\t\t\t\tposition,\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tonProgress: null,\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\n\t\t\t\t\tgroups: [ ... geometry.groups ],\n\t\t\t\t},\n\n\t\t\t}, transferable.map( arr => arr.buffer ).filter( v => ( typeof SharedArrayBuffer === 'undefined' ) || ! ( v instanceof SharedArrayBuffer ) ) );\n\n\t\t} );\n\n\t}\n\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('bOlxE') + \"generateMeshBVH.worker.e1a14054.js\";module.exports = workerURL(url, bundleURL.getOrigin(url), false);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('bOlxE') + \"parallelMeshBVH.worker.fa7afa10.js\";module.exports = workerURL(url, bundleURL.getOrigin(url), false);"],"names":[],"version":3,"file":"index.ef8dcd8d.js.map","sourceRoot":"/__parcel_source_root/"}