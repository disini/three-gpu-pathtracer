{"mappings":"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","sources":["example/spotLights.js","node_modules/three/examples/jsm/loaders/IESLoader.js","node_modules/three/examples/jsm/loaders/RGBELoader.js","example/utils/getScaledSettings.js","example/utils/LoaderElement.js","node_modules/three-mesh-bvh/src/workers/ParallelMeshBVHWorker.js","node_modules/three-mesh-bvh/src/workers/utils/WorkerBase.js","node_modules/three-mesh-bvh/src/workers/GenerateMeshBVHWorker.js","node_modules/@parcel/runtime-js/lib/runtime-59731d538c325279.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-05e35ee8b98113ac.js"],"sourcesContent":["import {\r\n\tWebGLRenderer,\r\n\tACESFilmicToneMapping,\r\n\tPCFSoftShadowMap,\r\n\tScene,\r\n\tEquirectangularReflectionMapping,\r\n\tBox3,\r\n\tMesh,\r\n\tCylinderGeometry,\r\n\tMeshStandardMaterial,\r\n\tBoxGeometry,\r\n\tPerspectiveCamera,\r\n} from 'three';\r\nimport { IESLoader } from 'three/examples/jsm/loaders/IESLoader.js';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { PhysicalSpotLight, WebGLPathTracer } from '../src/index.js';\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\r\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\r\nimport { getScaledSettings } from './utils/getScaledSettings.js';\r\nimport { LoaderElement } from './utils/LoaderElement.js';\r\nimport { ParallelMeshBVHWorker } from 'three-mesh-bvh/src/workers/ParallelMeshBVHWorker.js';\r\n\r\nconst MODEL_URL = 'https://raw.githubusercontent.com/disini/3d-demo-data/main/models/steampunk-robot/scene.gltf';\r\nconst ENV_URL = 'https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/royal_esplanade_1k.hdr';\r\nconst CREDITS = 'Model by Benedict Chew on Sketchfab';\r\nconst IES_PROFILE_URLS = [\r\n\t'https://raw.githubusercontent.com/disini/3d-demo-data/main/ies/0646706b3d2d9658994fc4ad80681dec.ies',\r\n\t'https://raw.githubusercontent.com/disini/3d-demo-data/main/ies/06b4cfdc8805709e767b5e2e904be8ad.ies',\r\n\t'https://raw.githubusercontent.com/disini/3d-demo-data/main/ies/007cfb11e343e2f42e3b476be4ab684e.ies',\r\n\t'https://raw.githubusercontent.com/disini/3d-demo-data/main/ies/01dac7d6c646814dcda6780e7b7b4566.ies',\r\n\t'https://raw.githubusercontent.com/disini/3d-demo-data/main/ies/108b32f07d6d38a7a6528a6d307440df.ies',\r\n\t'https://raw.githubusercontent.com/disini/3d-demo-data/main/ies/1aec5958092c236d005093ca27ebe378.ies',\r\n\t'https://raw.githubusercontent.com/disini/3d-demo-data/main/ies/02a7562c650498ebb301153dbbf59207.ies',\r\n\t'https://raw.githubusercontent.com/disini/3d-demo-data/main/ies/1a936937a49c63374e6d4fbed9252b29.ies',\r\n\t'https://raw.githubusercontent.com/disini/3d-demo-data/main/ies/00c6ce79e1d2cdf3a1fb491aaaa47ae0.ies',\r\n];\r\n\r\nlet pathTracer, renderer, controls;\r\nlet scene, camera, spotLight, iesTextures;\r\nlet loader;\r\n\r\n// gui parameters\r\nconst params = {\r\n\tmultipleImportanceSampling: true,\r\n\tbounces: 3,\r\n\trenderScale: 1 / window.devicePixelRatio,\r\n\ttiles: 2,\r\n\tiesProfile: - 1,\r\n\t...getScaledSettings(),\r\n};\r\n\r\ninit();\r\n\r\nasync function init() {\r\n\r\n\tloader = new LoaderElement();\r\n\tloader.attach( document.body );\r\n\r\n\t// renderer\r\n\trenderer = new WebGLRenderer();\r\n\trenderer.shadowMap.enabled = true;\r\n\trenderer.physicallyCorrectLights = true;\r\n\trenderer.shadowMap.type = PCFSoftShadowMap;\r\n\trenderer.toneMapping = ACESFilmicToneMapping;\r\n\tdocument.body.appendChild( renderer.domElement );\r\n\r\n\t// path tracer\r\n\tpathTracer = new WebGLPathTracer( renderer );\r\n\tpathTracer.setBVHWorker( new ParallelMeshBVHWorker() );\r\n\tpathTracer.tiles.set( params.tiles, params.tiles );\r\n\tpathTracer.textureSize.set( 2048, 2048 );\r\n\tpathTracer.filterGlossyFactor = 0.5;\r\n\r\n\t// camera\r\n\tconst aspect = window.innerWidth / window.innerHeight;\r\n\tcamera = new PerspectiveCamera( 75, aspect, 0.025, 500 );\r\n\tcamera.position.set( - 2, 4, 8 ).multiplyScalar( 0.8 );\r\n\r\n\t// controls\r\n\tcontrols = new OrbitControls( camera, renderer.domElement );\r\n\tcontrols.target.y = 1.5;\r\n\tcontrols.update();\r\n\tcontrols.addEventListener( 'change', () => pathTracer.updateCamera() );\r\n\r\n\t// scene\r\n\tscene = new Scene();\r\n\tscene.backgroundBlurriness = 0.1;\r\n\tscene.environmentIntensity = 0.1;\r\n\tscene.backgroundIntensity = 0.1;\r\n\r\n\t// load assets\r\n\tconst iesLoader = new IESLoader();\r\n\tconst [ envTexture, gltf, textures ] = await Promise.all( [\r\n\t\tnew RGBELoader().loadAsync( ENV_URL ),\r\n\t\tnew GLTFLoader().loadAsync( MODEL_URL ),\r\n\t\tPromise.all( IES_PROFILE_URLS.map( url => iesLoader.loadAsync( url ) ) )\r\n\t] );\r\n\r\n\t// ies textures\r\n\tiesTextures = textures;\r\n\r\n\t// environment\r\n\tenvTexture.mapping = EquirectangularReflectionMapping;\r\n\tscene.environment = envTexture;\r\n\tscene.background = envTexture;\r\n\r\n\t// objects\r\n\tgltf.scene.scale.setScalar( 1 );\r\n\tgltf.scene.updateMatrixWorld();\r\n\tgltf.scene.traverse( c => {\r\n\r\n\t\tc.castShadow = true;\r\n\t\tc.receiveShadow = true;\r\n\r\n\t} );\r\n\tscene.add( gltf.scene );\r\n\r\n\tconst box = new Box3();\r\n\tbox.setFromObject( gltf.scene );\r\n\r\n\t// init environment\r\n\tconst floor = new Mesh(\r\n\t\tnew CylinderGeometry( 8, 8, 0.5, 200 ),\r\n\t\tnew MeshStandardMaterial( { color: 0x555555, roughness: 0.05, metalness: 0.4 } ),\r\n\t);\r\n\tfloor.geometry = floor.geometry.toNonIndexed();\r\n\tfloor.geometry.clearGroups();\r\n\tfloor.position.y = box.min.y - 0.25;\r\n\tfloor.receiveShadow = true;\r\n\tfloor.material.color.convertSRGBToLinear();\r\n\tscene.add( floor );\r\n\r\n\tconst wall = new Mesh(\r\n\t\tnew BoxGeometry( 14, 6, 0.5 ),\r\n\t\tnew MeshStandardMaterial( { color: 0xa06464, roughness: 0.4, metalness: 0.1 } ),\r\n\t);\r\n\twall.castShadow = true;\r\n\twall.receiveShadow = true;\r\n\twall.geometry = wall.geometry.toNonIndexed();\r\n\twall.geometry.clearGroups();\r\n\twall.position.x = 0.0;\r\n\twall.position.y = box.min.y + 3;\r\n\twall.position.z = box.min.z - 0.5;\r\n\twall.material.color.convertSRGBToLinear();\r\n\tscene.add( wall );\r\n\r\n\t// spot light\r\n\tspotLight = new PhysicalSpotLight( 0xffffff );\r\n\tspotLight.position.set( 0, 7.0, 4 );\r\n\tspotLight.angle = Math.PI / 4.5;\r\n\tspotLight.decay = 0;\r\n\tspotLight.penumbra = 1.0;\r\n\tspotLight.distance = 0.0;\r\n\tspotLight.intensity = 50.0;\r\n\tspotLight.radius = 0.5;\r\n\r\n\t// spot light shadow\r\n\tspotLight.shadow.mapSize.width = 512;\r\n\tspotLight.shadow.mapSize.height = 512;\r\n\tspotLight.shadow.camera.near = 0.1;\r\n\tspotLight.shadow.camera.far = 10.0;\r\n\tspotLight.shadow.focus = 1.0;\r\n\tspotLight.castShadow = true;\r\n\tscene.add( spotLight );\r\n\r\n\t// spot light target\r\n\tconst targetObject = spotLight.target;\r\n\ttargetObject.position.x = 0;\r\n\ttargetObject.position.y = floor.position.y + 2;\r\n\ttargetObject.position.z = 0.05;\r\n\tscene.add( targetObject );\r\n\r\n\tawait pathTracer.setSceneAsync( scene, camera, {\r\n\t\tonProgress: v => loader.setPercentage( v ),\r\n\t} );\r\n\r\n\tloader.setCredits( CREDITS );\r\n\tonParamsChange();\r\n\tonResize();\r\n\twindow.addEventListener( 'resize', onResize );\r\n\r\n\t// gui\r\n\tconst gui = new GUI();\r\n\tconst ptFolder = gui.addFolder( 'Path Tracing' );\r\n\tptFolder.add( params, 'multipleImportanceSampling' ).onChange( onParamsChange );\r\n\tptFolder.add( params, 'tiles', 1, 4, 1 ).onChange( value => {\r\n\r\n\t\tpathTracer.tiles.set( value, value );\r\n\r\n\t} );\r\n\tptFolder.add( params, 'bounces', 1, 30, 1 ).onChange( onParamsChange );\r\n\tptFolder.add( params, 'renderScale', 0.1, 1 ).onChange( onResize );\r\n\r\n\tconst lightFolder = gui.addFolder( 'Spot Light' );\r\n\tlightFolder.addColor( spotLight, 'color' ).onChange( onParamsChange );\r\n\tlightFolder.add( spotLight, 'intensity', 0.0, 200.0, 0.01 ).onChange( onParamsChange );\r\n\tlightFolder.add( spotLight, 'radius', 0.0, 10.0 ).onChange( onParamsChange );\r\n\tlightFolder.add( spotLight, 'decay', 0.0, 2.0 ).onChange( onParamsChange );\r\n\tlightFolder.add( spotLight, 'distance', 0.0, 20.0 ).onChange( onParamsChange );\r\n\tlightFolder.add( spotLight, 'angle', 0.0, Math.PI / 2.0 ).onChange( onParamsChange );\r\n\tlightFolder.add( spotLight, 'penumbra', 0.0, 1.0 ).onChange( onParamsChange );\r\n\tlightFolder.add( params, 'iesProfile', - 1, IES_PROFILE_URLS.length - 1, 1 ).onChange( v => {\r\n\r\n\t\tspotLight.iesMap = v === - 1 ? null : iesTextures[ v ];\r\n\t\tonParamsChange();\r\n\r\n\t} );\r\n\r\n\tanimate();\r\n\r\n}\r\n\r\nfunction onResize() {\r\n\r\n\t// TODO: we need to handle the interpolation of the float texture more intelligently to avoid\r\n\t// extra bright hot spots - then this can be moved to \"onParamsChange\"\r\n\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\trenderer.setPixelRatio( window.devicePixelRatio * params.renderScale );\r\n\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\tcamera.updateProjectionMatrix();\r\n\tpathTracer.updateCamera();\r\n\r\n}\r\n\r\nfunction onParamsChange() {\r\n\r\n\t// pathTracer.renderScale = params.renderScale;\r\n\tpathTracer.multipleImportanceSampling = params.multipleImportanceSampling;\r\n\tpathTracer.bounces = params.bounces;\r\n\tpathTracer.updateLights();\r\n\r\n}\r\n\r\nfunction animate() {\r\n\r\n\trequestAnimationFrame( animate );\r\n\r\n\tcamera.updateMatrixWorld();\r\n\tpathTracer.renderSample();\r\n\tloader.setSamples( pathTracer.samples, pathTracer.isCompiling );\r\n\r\n}\r\n","import {\n\tDataTexture,\n\tFileLoader,\n\tFloatType,\n\tRedFormat,\n\tMathUtils,\n\tLoader,\n\tUnsignedByteType,\n\tLinearFilter,\n\tHalfFloatType,\n\tDataUtils\n} from 'three';\n\nclass IESLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.type = HalfFloatType;\n\n\t}\n\n\t_getIESValues( iesLamp, type ) {\n\n\t\tconst width = 360;\n\t\tconst height = 180;\n\t\tconst size = width * height;\n\n\t\tconst data = new Array( size );\n\n\t\tfunction interpolateCandelaValues( phi, theta ) {\n\n\t\t\tlet phiIndex = 0, thetaIndex = 0;\n\t\t\tlet startTheta = 0, endTheta = 0, startPhi = 0, endPhi = 0;\n\n\t\t\tfor ( let i = 0; i < iesLamp.numHorAngles - 1; ++ i ) { // numHorAngles = horAngles.length-1 because of extra padding, so this wont cause an out of bounds error\n\n\t\t\t\tif ( theta < iesLamp.horAngles[ i + 1 ] || i == iesLamp.numHorAngles - 2 ) {\n\n\t\t\t\t\tthetaIndex = i;\n\t\t\t\t\tstartTheta = iesLamp.horAngles[ i ];\n\t\t\t\t\tendTheta = iesLamp.horAngles[ i + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < iesLamp.numVerAngles - 1; ++ i ) {\n\n\t\t\t\tif ( phi < iesLamp.verAngles[ i + 1 ] || i == iesLamp.numVerAngles - 2 ) {\n\n\t\t\t\t\tphiIndex = i;\n\t\t\t\t\tstartPhi = iesLamp.verAngles[ i ];\n\t\t\t\t\tendPhi = iesLamp.verAngles[ i + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst deltaTheta = endTheta - startTheta;\n\t\t\tconst deltaPhi = endPhi - startPhi;\n\n\t\t\tif ( deltaPhi === 0 ) // Outside range\n\t\t\t\treturn 0;\n\n\t\t\tconst t1 = deltaTheta === 0 ? 0 : ( theta - startTheta ) / deltaTheta;\n\t\t\tconst t2 = ( phi - startPhi ) / deltaPhi;\n\n\t\t\tconst nextThetaIndex = deltaTheta === 0 ? thetaIndex : thetaIndex + 1;\n\n\t\t\tconst v1 = MathUtils.lerp( iesLamp.candelaValues[ thetaIndex ][ phiIndex ], iesLamp.candelaValues[ nextThetaIndex ][ phiIndex ], t1 );\n\t\t\tconst v2 = MathUtils.lerp( iesLamp.candelaValues[ thetaIndex ][ phiIndex + 1 ], iesLamp.candelaValues[ nextThetaIndex ][ phiIndex + 1 ], t1 );\n\t\t\tconst v = MathUtils.lerp( v1, v2, t2 );\n\n\t\t\treturn v;\n\n\t\t}\n\n\t\tconst startTheta = iesLamp.horAngles[ 0 ], endTheta = iesLamp.horAngles[ iesLamp.numHorAngles - 1 ];\n\n\t\tfor ( let i = 0; i < size; ++ i ) {\n\n\t\t\tlet theta = i % width;\n\t\t\tconst phi = Math.floor( i / width );\n\n\t\t\tif ( endTheta - startTheta !== 0 && ( theta < startTheta || theta >= endTheta ) ) { // Handle symmetry for hor angles\n\n\t\t\t\ttheta %= endTheta * 2;\n\n\t\t\t\tif ( theta > endTheta )\n\t\t\t\t\ttheta = endTheta * 2 - theta;\n\n\t\t\t}\n\n\t\t\tdata[ phi + theta * height ] = interpolateCandelaValues( phi, theta );\n\n\t\t}\n\n\t\tlet result = null;\n\n\t\tif ( type === UnsignedByteType ) result = Uint8Array.from( data.map( v => Math.min( v * 0xFF, 0xFF ) ) );\n\t\telse if ( type === HalfFloatType ) result = Uint16Array.from( data.map( v => DataUtils.toHalfFloat( v ) ) );\n\t\telse if ( type === FloatType ) result = Float32Array.from( data );\n\t\telse console.error( 'IESLoader: Unsupported type:', type );\n\n\t\treturn result;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'text' );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\n\t\tloader.load( url, text => {\n\n\t\t\tonLoad( this.parse( text ) );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst type = this.type;\n\n\t\tconst iesLamp = new IESLamp( text );\n\t\tconst data = this._getIESValues( iesLamp, type );\n\n\t\tconst texture = new DataTexture( data, 180, 1, RedFormat, type );\n\t\ttexture.minFilter = LinearFilter;\n\t\ttexture.magFilter = LinearFilter;\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t}\n\n}\n\n\nfunction IESLamp( text ) {\n\n\tconst _self = this;\n\n\tconst textArray = text.split( '\\n' );\n\n\tlet lineNumber = 0;\n\tlet line;\n\n\t_self.verAngles = [ ];\n\t_self.horAngles = [ ];\n\n\t_self.candelaValues = [ ];\n\n\t_self.tiltData = { };\n\t_self.tiltData.angles = [ ];\n\t_self.tiltData.mulFactors = [ ];\n\n\tfunction textToArray( text ) {\n\n\t\ttext = text.replace( /^\\s+|\\s+$/g, '' ); // remove leading or trailing spaces\n\t\ttext = text.replace( /,/g, ' ' ); // replace commas with spaces\n\t\ttext = text.replace( /\\s\\s+/g, ' ' ); // replace white space/tabs etc by single whitespace\n\n\t\tconst array = text.split( ' ' );\n\n\t\treturn array;\n\n\t}\n\n\tfunction readArray( count, array ) {\n\n\t\twhile ( true ) {\n\n\t\t\tconst line = textArray[ lineNumber ++ ];\n\t\t\tconst lineData = textToArray( line );\n\n\t\t\tfor ( let i = 0; i < lineData.length; ++ i ) {\n\n\t\t\t\tarray.push( Number( lineData[ i ] ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length === count )\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction readTilt() {\n\n\t\tlet line = textArray[ lineNumber ++ ];\n\t\tlet lineData = textToArray( line );\n\n\t\t_self.tiltData.lampToLumGeometry = Number( lineData[ 0 ] );\n\n\t\tline = textArray[ lineNumber ++ ];\n\t\tlineData = textToArray( line );\n\n\t\t_self.tiltData.numAngles = Number( lineData[ 0 ] );\n\n\t\treadArray( _self.tiltData.numAngles, _self.tiltData.angles );\n\t\treadArray( _self.tiltData.numAngles, _self.tiltData.mulFactors );\n\n\t}\n\n\tfunction readLampValues() {\n\n\t\tconst values = [ ];\n\t\treadArray( 10, values );\n\n\t\t_self.count = Number( values[ 0 ] );\n\t\t_self.lumens = Number( values[ 1 ] );\n\t\t_self.multiplier = Number( values[ 2 ] );\n\t\t_self.numVerAngles = Number( values[ 3 ] );\n\t\t_self.numHorAngles = Number( values[ 4 ] );\n\t\t_self.gonioType = Number( values[ 5 ] );\n\t\t_self.units = Number( values[ 6 ] );\n\t\t_self.width = Number( values[ 7 ] );\n\t\t_self.length = Number( values[ 8 ] );\n\t\t_self.height = Number( values[ 9 ] );\n\n\t}\n\n\tfunction readLampFactors() {\n\n\t\tconst values = [ ];\n\t\treadArray( 3, values );\n\n\t\t_self.ballFactor = Number( values[ 0 ] );\n\t\t_self.blpFactor = Number( values[ 1 ] );\n\t\t_self.inputWatts = Number( values[ 2 ] );\n\n\t}\n\n\twhile ( true ) {\n\n\t\tline = textArray[ lineNumber ++ ];\n\n\t\tif ( line.includes( 'TILT' ) ) {\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tif ( ! line.includes( 'NONE' ) ) {\n\n\t\tif ( line.includes( 'INCLUDE' ) ) {\n\n\t\t\treadTilt();\n\n\t\t} else {\n\n\t\t\t// TODO:: Read tilt data from a file\n\n\t\t}\n\n\t}\n\n\treadLampValues();\n\n\treadLampFactors();\n\n\t// Initialize candela value array\n\tfor ( let i = 0; i < _self.numHorAngles; ++ i ) {\n\n\t\t_self.candelaValues.push( [ ] );\n\n\t}\n\n\t// Parse Angles\n\treadArray( _self.numVerAngles, _self.verAngles );\n\treadArray( _self.numHorAngles, _self.horAngles );\n\n\t// Parse Candela values\n\tfor ( let i = 0; i < _self.numHorAngles; ++ i ) {\n\n\t\treadArray( _self.numVerAngles, _self.candelaValues[ i ] );\n\n\t}\n\n\t// Calculate actual candela values, and normalize.\n\tfor ( let i = 0; i < _self.numHorAngles; ++ i ) {\n\n\t\tfor ( let j = 0; j < _self.numVerAngles; ++ j ) {\n\n\t\t\t_self.candelaValues[ i ][ j ] *= _self.candelaValues[ i ][ j ] * _self.multiplier\n\t\t\t\t* _self.ballFactor * _self.blpFactor;\n\n\t\t}\n\n\t}\n\n\tlet maxVal = - 1;\n\tfor ( let i = 0; i < _self.numHorAngles; ++ i ) {\n\n\t\tfor ( let j = 0; j < _self.numVerAngles; ++ j ) {\n\n\t\t\tconst value = _self.candelaValues[ i ][ j ];\n\t\t\tmaxVal = maxVal < value ? value : maxVal;\n\n\t\t}\n\n\t}\n\n\tconst bNormalize = true;\n\tif ( bNormalize && maxVal > 0 ) {\n\n\t\tfor ( let i = 0; i < _self.numHorAngles; ++ i ) {\n\n\t\t\tfor ( let j = 0; j < _self.numVerAngles; ++ j ) {\n\n\t\t\t\t_self.candelaValues[ i ][ j ] /= maxVal;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { IESLoader };\n","import {\n\tDataTextureLoader,\n\tDataUtils,\n\tFloatType,\n\tHalfFloatType,\n\tLinearFilter,\n\tLinearSRGBColorSpace\n} from 'three';\n\n// https://github.com/mrdoob/three.js/issues/5552\n// http://en.wikipedia.org/wiki/RGBE_image_format\n\nclass RGBELoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.type = HalfFloatType;\n\n\t}\n\n\t// adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\tparse( buffer ) {\n\n\t\tconst\n\t\t\t/* default error routine.  change this to change error handling */\n\t\t\trgbe_read_error = 1,\n\t\t\trgbe_write_error = 2,\n\t\t\trgbe_format_error = 3,\n\t\t\trgbe_memory_error = 4,\n\t\t\trgbe_error = function ( rgbe_error_code, msg ) {\n\n\t\t\t\tswitch ( rgbe_error_code ) {\n\n\t\t\t\t\tcase rgbe_read_error: throw new Error( 'THREE.RGBELoader: Read Error: ' + ( msg || '' ) );\n\t\t\t\t\tcase rgbe_write_error: throw new Error( 'THREE.RGBELoader: Write Error: ' + ( msg || '' ) );\n\t\t\t\t\tcase rgbe_format_error: throw new Error( 'THREE.RGBELoader: Bad File Format: ' + ( msg || '' ) );\n\t\t\t\t\tdefault:\n\t\t\t\t\tcase rgbe_memory_error: throw new Error( 'THREE.RGBELoader: Memory Error: ' + ( msg || '' ) );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t/* offsets to red, green, and blue components in a data (float) pixel */\n\t\t\t//RGBE_DATA_RED = 0,\n\t\t\t//RGBE_DATA_GREEN = 1,\n\t\t\t//RGBE_DATA_BLUE = 2,\n\n\t\t\t/* number of floats per pixel, use 4 since stored in rgba image format */\n\t\t\t//RGBE_DATA_SIZE = 4,\n\n\t\t\t/* flags indicating which fields in an rgbe_header_info are valid */\n\t\t\tRGBE_VALID_PROGRAMTYPE = 1,\n\t\t\tRGBE_VALID_FORMAT = 2,\n\t\t\tRGBE_VALID_DIMENSIONS = 4,\n\n\t\t\tNEWLINE = '\\n',\n\n\t\t\tfgets = function ( buffer, lineLimit, consume ) {\n\n\t\t\t\tconst chunkSize = 128;\n\n\t\t\t\tlineLimit = ! lineLimit ? 1024 : lineLimit;\n\t\t\t\tlet p = buffer.pos,\n\t\t\t\t\ti = - 1, len = 0, s = '',\n\t\t\t\t\tchunk = String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\twhile ( ( 0 > ( i = chunk.indexOf( NEWLINE ) ) ) && ( len < lineLimit ) && ( p < buffer.byteLength ) ) {\n\n\t\t\t\t\ts += chunk; len += chunk.length;\n\t\t\t\t\tp += chunkSize;\n\t\t\t\t\tchunk += String.fromCharCode.apply( null, new Uint16Array( buffer.subarray( p, p + chunkSize ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( - 1 < i ) {\n\n\t\t\t\t\t/*for (i=l-1; i>=0; i--) {\n\t\t\t\t\t\tbyteCode = m.charCodeAt(i);\n\t\t\t\t\t\tif (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n\t\t\t\t\t\telse if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n\t\t\t\t\t\tif (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n\t\t\t\t\t}*/\n\t\t\t\t\tif ( false !== consume ) buffer.pos += len + i + 1;\n\t\t\t\t\treturn s + chunk.slice( 0, i );\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t/* minimal header reading.  modify if you want to parse more information */\n\t\t\tRGBE_ReadHeader = function ( buffer ) {\n\n\n\t\t\t\t// regexes to parse header info fields\n\t\t\t\tconst magic_token_re = /^#\\?(\\S+)/,\n\t\t\t\t\tgamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\texposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n\t\t\t\t\tformat_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n\t\t\t\t\tdimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n\n\t\t\t\t\t// RGBE format header struct\n\t\t\t\t\theader = {\n\n\t\t\t\t\t\tvalid: 0, /* indicate which fields are valid */\n\n\t\t\t\t\t\tstring: '', /* the actual header string */\n\n\t\t\t\t\t\tcomments: '', /* comments found in header */\n\n\t\t\t\t\t\tprogramtype: 'RGBE', /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n\n\t\t\t\t\t\tformat: '', /* RGBE format, default 32-bit_rle_rgbe */\n\n\t\t\t\t\t\tgamma: 1.0, /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n\n\t\t\t\t\t\texposure: 1.0, /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n\n\t\t\t\t\t\twidth: 0, height: 0 /* image dimensions, width/height */\n\n\t\t\t\t\t};\n\n\t\t\t\tlet line, match;\n\n\t\t\t\tif ( buffer.pos >= buffer.byteLength || ! ( line = fgets( buffer ) ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_read_error, 'no header found' );\n\n\t\t\t\t}\n\n\t\t\t\t/* if you want to require the magic token then uncomment the next line */\n\t\t\t\tif ( ! ( match = line.match( magic_token_re ) ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'bad initial token' );\n\n\t\t\t\t}\n\n\t\t\t\theader.valid |= RGBE_VALID_PROGRAMTYPE;\n\t\t\t\theader.programtype = match[ 1 ];\n\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\twhile ( true ) {\n\n\t\t\t\t\tline = fgets( buffer );\n\t\t\t\t\tif ( false === line ) break;\n\t\t\t\t\theader.string += line + '\\n';\n\n\t\t\t\t\tif ( '#' === line.charAt( 0 ) ) {\n\n\t\t\t\t\t\theader.comments += line + '\\n';\n\t\t\t\t\t\tcontinue; // comment line\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( gamma_re ) ) {\n\n\t\t\t\t\t\theader.gamma = parseFloat( match[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( exposure_re ) ) {\n\n\t\t\t\t\t\theader.exposure = parseFloat( match[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( format_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_FORMAT;\n\t\t\t\t\t\theader.format = match[ 1 ];//'32-bit_rle_rgbe';\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( match = line.match( dimensions_re ) ) {\n\n\t\t\t\t\t\theader.valid |= RGBE_VALID_DIMENSIONS;\n\t\t\t\t\t\theader.height = parseInt( match[ 1 ], 10 );\n\t\t\t\t\t\theader.width = parseInt( match[ 2 ], 10 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( header.valid & RGBE_VALID_FORMAT ) && ( header.valid & RGBE_VALID_DIMENSIONS ) ) break;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_FORMAT ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'missing format specifier' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! ( header.valid & RGBE_VALID_DIMENSIONS ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'missing image size specifier' );\n\n\t\t\t\t}\n\n\t\t\t\treturn header;\n\n\t\t\t},\n\n\t\t\tRGBE_ReadPixels_RLE = function ( buffer, w, h ) {\n\n\t\t\t\tconst scanline_width = w;\n\n\t\t\t\tif (\n\t\t\t\t\t// run length encoding is not allowed so read flat\n\t\t\t\t\t( ( scanline_width < 8 ) || ( scanline_width > 0x7fff ) ) ||\n\t\t\t\t\t// this file is not run length encoded\n\t\t\t\t\t( ( 2 !== buffer[ 0 ] ) || ( 2 !== buffer[ 1 ] ) || ( buffer[ 2 ] & 0x80 ) )\n\t\t\t\t) {\n\n\t\t\t\t\t// return the flat buffer\n\t\t\t\t\treturn new Uint8Array( buffer );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scanline_width !== ( ( buffer[ 2 ] << 8 ) | buffer[ 3 ] ) ) {\n\n\t\t\t\t\trgbe_error( rgbe_format_error, 'wrong scanline width' );\n\n\t\t\t\t}\n\n\t\t\t\tconst data_rgba = new Uint8Array( 4 * w * h );\n\n\t\t\t\tif ( ! data_rgba.length ) {\n\n\t\t\t\t\trgbe_error( rgbe_memory_error, 'unable to allocate buffer space' );\n\n\t\t\t\t}\n\n\t\t\t\tlet offset = 0, pos = 0;\n\n\t\t\t\tconst ptr_end = 4 * scanline_width;\n\t\t\t\tconst rgbeStart = new Uint8Array( 4 );\n\t\t\t\tconst scanline_buffer = new Uint8Array( ptr_end );\n\t\t\t\tlet num_scanlines = h;\n\n\t\t\t\t// read in each successive scanline\n\t\t\t\twhile ( ( num_scanlines > 0 ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\tif ( pos + 4 > buffer.byteLength ) {\n\n\t\t\t\t\t\trgbe_error( rgbe_read_error );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trgbeStart[ 0 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 1 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 2 ] = buffer[ pos ++ ];\n\t\t\t\t\trgbeStart[ 3 ] = buffer[ pos ++ ];\n\n\t\t\t\t\tif ( ( 2 != rgbeStart[ 0 ] ) || ( 2 != rgbeStart[ 1 ] ) || ( ( ( rgbeStart[ 2 ] << 8 ) | rgbeStart[ 3 ] ) != scanline_width ) ) {\n\n\t\t\t\t\t\trgbe_error( rgbe_format_error, 'bad rgbe scanline format' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// read each of the four channels for the scanline into the buffer\n\t\t\t\t\t// first red, then green, then blue, then exponent\n\t\t\t\t\tlet ptr = 0, count;\n\n\t\t\t\t\twhile ( ( ptr < ptr_end ) && ( pos < buffer.byteLength ) ) {\n\n\t\t\t\t\t\tcount = buffer[ pos ++ ];\n\t\t\t\t\t\tconst isEncodedRun = count > 128;\n\t\t\t\t\t\tif ( isEncodedRun ) count -= 128;\n\n\t\t\t\t\t\tif ( ( 0 === count ) || ( ptr + count > ptr_end ) ) {\n\n\t\t\t\t\t\t\trgbe_error( rgbe_format_error, 'bad scanline data' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isEncodedRun ) {\n\n\t\t\t\t\t\t\t// a (encoded) run of the same value\n\t\t\t\t\t\t\tconst byteValue = buffer[ pos ++ ];\n\t\t\t\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\t\t\t\tscanline_buffer[ ptr ++ ] = byteValue;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//ptr += count;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// a literal-run\n\t\t\t\t\t\t\tscanline_buffer.set( buffer.subarray( pos, pos + count ), ptr );\n\t\t\t\t\t\t\tptr += count; pos += count;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t// now convert data from buffer into rgba\n\t\t\t\t\t// first red, then green, then blue, then exponent (alpha)\n\t\t\t\t\tconst l = scanline_width; //scanline_buffer.byteLength;\n\t\t\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\t\t\tlet off = 0;\n\t\t\t\t\t\tdata_rgba[ offset ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 1 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 2 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toff += scanline_width; //1;\n\t\t\t\t\t\tdata_rgba[ offset + 3 ] = scanline_buffer[ i + off ];\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnum_scanlines --;\n\n\t\t\t\t}\n\n\t\t\t\treturn data_rgba;\n\n\t\t\t};\n\n\t\tconst RGBEByteToRGBFloat = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\tdestArray[ destOffset + 0 ] = sourceArray[ sourceOffset + 0 ] * scale;\n\t\t\tdestArray[ destOffset + 1 ] = sourceArray[ sourceOffset + 1 ] * scale;\n\t\t\tdestArray[ destOffset + 2 ] = sourceArray[ sourceOffset + 2 ] * scale;\n\t\t\tdestArray[ destOffset + 3 ] = 1;\n\n\t\t};\n\n\t\tconst RGBEByteToRGBHalf = function ( sourceArray, sourceOffset, destArray, destOffset ) {\n\n\t\t\tconst e = sourceArray[ sourceOffset + 3 ];\n\t\t\tconst scale = Math.pow( 2.0, e - 128.0 ) / 255.0;\n\n\t\t\t// clamping to 65504, the maximum representable value in float16\n\t\t\tdestArray[ destOffset + 0 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 0 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 1 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 1 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 2 ] = DataUtils.toHalfFloat( Math.min( sourceArray[ sourceOffset + 2 ] * scale, 65504 ) );\n\t\t\tdestArray[ destOffset + 3 ] = DataUtils.toHalfFloat( 1 );\n\n\t\t};\n\n\t\tconst byteArray = new Uint8Array( buffer );\n\t\tbyteArray.pos = 0;\n\t\tconst rgbe_header_info = RGBE_ReadHeader( byteArray );\n\n\t\tconst w = rgbe_header_info.width,\n\t\t\th = rgbe_header_info.height,\n\t\t\timage_rgba_data = RGBE_ReadPixels_RLE( byteArray.subarray( byteArray.pos ), w, h );\n\n\n\t\tlet data, type;\n\t\tlet numElements;\n\n\t\tswitch ( this.type ) {\n\n\t\t\tcase FloatType:\n\n\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\tconst floatArray = new Float32Array( numElements * 4 );\n\n\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBFloat( image_rgba_data, j * 4, floatArray, j * 4 );\n\n\t\t\t\t}\n\n\t\t\t\tdata = floatArray;\n\t\t\t\ttype = FloatType;\n\t\t\t\tbreak;\n\n\t\t\tcase HalfFloatType:\n\n\t\t\t\tnumElements = image_rgba_data.length / 4;\n\t\t\t\tconst halfArray = new Uint16Array( numElements * 4 );\n\n\t\t\t\tfor ( let j = 0; j < numElements; j ++ ) {\n\n\t\t\t\t\tRGBEByteToRGBHalf( image_rgba_data, j * 4, halfArray, j * 4 );\n\n\t\t\t\t}\n\n\t\t\t\tdata = halfArray;\n\t\t\t\ttype = HalfFloatType;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tthrow new Error( 'THREE.RGBELoader: Unsupported type: ' + this.type );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: w, height: h,\n\t\t\tdata: data,\n\t\t\theader: rgbe_header_info.string,\n\t\t\tgamma: rgbe_header_info.gamma,\n\t\t\texposure: rgbe_header_info.exposure,\n\t\t\ttype: type\n\t\t};\n\n\t}\n\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tfunction onLoadCallback( texture, texData ) {\n\n\t\t\tswitch ( texture.type ) {\n\n\t\t\t\tcase FloatType:\n\t\t\t\tcase HalfFloatType:\n\n\t\t\t\t\ttexture.colorSpace = LinearSRGBColorSpace;\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\ttexture.magFilter = LinearFilter;\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttexture.flipY = true;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}\n\n\t\treturn super.load( url, onLoadCallback, onProgress, onError );\n\n\t}\n\n}\n\nexport { RGBELoader };\n","export function getScaledSettings() {\r\n\r\n\tlet tiles = 3;\r\n\tlet renderScale = Math.max( 1 / window.devicePixelRatio, 0.5 );\r\n\r\n\t// adjust performance parameters for mobile\r\n\tconst aspectRatio = window.innerWidth / window.innerHeight;\r\n\tif ( aspectRatio < 0.65 ) {\r\n\r\n\t\ttiles = 4;\r\n\t\trenderScale = 0.5 / window.devicePixelRatio;\r\n\r\n\t}\r\n\r\n\treturn { tiles, renderScale };\r\n\r\n}\r\n","let _styleElement;\r\nfunction initializeStyles() {\r\n\r\n\tif ( _styleElement ) {\r\n\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\t_styleElement = document.createElement( 'style' );\r\n\t_styleElement.textContent = /* css */`\r\n\r\n\t\t.loader-container, .description {\r\n\t\t\tposition: absolute;\r\n\t\t\twidth: 100%;\r\n\t\t\tfont-family: 'Courier New', Courier, monospace;\r\n\t\t\tcolor: white;\r\n\t\t\tfont-weight: light;\r\n\t\t\talign-items: flex-start;\r\n\t\t\tfont-size: 14px;\r\n\t\t\tpointer-events: none;\r\n\t\t\tuser-select: none;\r\n\t\t}\r\n\r\n\t\t.loader-container {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tbottom: 0;\r\n\t\t}\r\n\r\n\t\t.description {\r\n\t\t\ttop: 0;\r\n\t\t\twidth: 100%;\r\n\t\t\ttext-align: center;\r\n\t\t\tpadding: 5px 0;\r\n\t\t}\r\n\r\n\t\t.loader-container .bar {\r\n\t\t\theight: 2px;\r\n\t\t\tbackground: white;\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\r\n\t\t.loader-container .credits,\r\n\t\t.loader-container .samples,\r\n\t\t.loader-container .percentage {\r\n\t\t\tpadding: 5px;\r\n\t\t\tmargin: 0 0 1px 1px;\r\n\t\t\tbackground: rgba( 0, 0, 0, 0.2 );\r\n\t\t\tborder-radius: 2px;\r\n\t\t\tdisplay: inline-block;\r\n\t\t}\r\n\r\n\t\t.loader-container:not(.loading) .bar,\r\n\t\t.loader-container:not(.loading) .percentage,\r\n\t\t.loader-container.loading .credits,\r\n\t\t.loader-container.loading .samples,\r\n\t\t.loader-container .credits:empty {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\t.loader-container .credits a,\r\n\t\t.loader-container .credits,\r\n\t\t.loader-container .samples {\r\n\t\t\tcolor: rgba( 255, 255, 255, 0.75 );\r\n\t\t}\r\n\t`;\r\n\tdocument.head.appendChild( _styleElement );\r\n\r\n}\r\n\r\nexport class LoaderElement {\r\n\r\n\tconstructor() {\r\n\r\n\t\tinitializeStyles();\r\n\r\n\t\tconst container = document.createElement( 'div' );\r\n\t\tcontainer.classList.add( 'loader-container' );\r\n\r\n\t\tconst percentageEl = document.createElement( 'div' );\r\n\t\tpercentageEl.classList.add( 'percentage' );\r\n\t\tcontainer.appendChild( percentageEl );\r\n\r\n\t\tconst samplesEl = document.createElement( 'div' );\r\n\t\tsamplesEl.classList.add( 'samples' );\r\n\t\tcontainer.appendChild( samplesEl );\r\n\r\n\t\tconst creditsEl = document.createElement( 'div' );\r\n\t\tcreditsEl.classList.add( 'credits' );\r\n\t\tcontainer.appendChild( creditsEl );\r\n\r\n\t\tconst loaderBarEl = document.createElement( 'div' );\r\n\t\tloaderBarEl.classList.add( 'bar' );\r\n\t\tcontainer.appendChild( loaderBarEl );\r\n\r\n\t\tconst descriptionEl = document.createElement( 'div' );\r\n\t\tdescriptionEl.classList.add( 'description' );\r\n\t\tcontainer.appendChild( descriptionEl );\r\n\r\n\t\tthis._description = descriptionEl;\r\n\t\tthis._loaderBar = loaderBarEl;\r\n\t\tthis._percentage = percentageEl;\r\n\t\tthis._credits = creditsEl;\r\n\t\tthis._samples = samplesEl;\r\n\t\tthis._container = container;\r\n\r\n\t\tthis.setPercentage( 0 );\r\n\r\n\t}\r\n\r\n\tattach( container ) {\r\n\r\n\t\tcontainer.appendChild( this._container );\r\n\t\tcontainer.appendChild( this._description );\r\n\r\n\t}\r\n\r\n\tsetPercentage( perc ) {\r\n\r\n\t\tthis._loaderBar.style.width = `${ perc * 100 }%`;\r\n\r\n\t\tif ( perc === 0 ) {\r\n\r\n\t\t\tthis._percentage.innerText = 'Loading...';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._percentage.innerText = `${ ( perc * 100 ).toFixed( 0 ) }%`;\r\n\r\n\t\t}\r\n\r\n\t\tif ( perc >= 1 ) {\r\n\r\n\t\t\tthis._container.classList.remove( 'loading' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._container.classList.add( 'loading' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetSamples( count, compiling = false ) {\r\n\r\n\t\tif ( compiling ) {\r\n\r\n\t\t\tthis._samples.innerText = 'compiling shader...';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._samples.innerText = `${ Math.floor( count ) } samples`;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetCredits( credits ) {\r\n\r\n\t\tthis._credits.innerHTML = credits;\r\n\r\n\t}\r\n\r\n\tsetDescription( description ) {\r\n\r\n\t\tthis._description.innerHTML = description;\r\n\r\n\t}\r\n\r\n}\r\n","import { Box3, BufferAttribute } from 'three';\nimport { MeshBVH } from '../core/MeshBVH.js';\nimport { WorkerBase } from './utils/WorkerBase.js';\nimport { convertToBufferType, isSharedArrayBufferSupported } from '../utils/BufferUtils.js';\nimport { GenerateMeshBVHWorker } from './GenerateMeshBVHWorker.js';\nimport { ensureIndex } from '../core/build/geometryUtils.js';\n\nconst DEFAULT_WORKER_COUNT = typeof navigator !== 'undefined' ? navigator.hardwareConcurrency : 4;\nclass _ParallelMeshBVHWorker extends WorkerBase {\n\n\tconstructor() {\n\n\t\tconst worker = new Worker( new URL( './parallelMeshBVH.worker.js', import.meta.url ), { type: 'module' } );\n\t\tsuper( worker );\n\n\t\tthis.name = 'ParallelMeshBVHWorker';\n\t\tthis.maxWorkerCount = Math.max( DEFAULT_WORKER_COUNT, 4 );\n\n\t\tif ( ! isSharedArrayBufferSupported() ) {\n\n\t\t\tthrow new Error( 'ParallelMeshBVHWorker: Shared Array Buffers are not supported.' );\n\n\t\t}\n\n\t}\n\n\trunTask( worker, geometry, options = {} ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tif ( ! geometry.index && ! options.indirect ) {\n\n\t\t\t\tensureIndex( geometry, options );\n\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tgeometry.getAttribute( 'position' ).isInterleavedBufferAttribute ||\n\t\t\t\tgeometry.index && geometry.index.isInterleavedBufferAttribute\n\t\t\t) {\n\n\t\t\t\tthrow new Error( 'ParallelMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.' );\n\n\t\t\t}\n\n\t\t\tworker.onerror = e => {\n\n\t\t\t\treject( new Error( `ParallelMeshBVHWorker: ${ e.message }` ) );\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tconst { data } = e;\n\n\t\t\t\tif ( data.error ) {\n\n\t\t\t\t\treject( new Error( data.error ) );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( data.serialized ) {\n\n\t\t\t\t\tconst { serialized, position } = data;\n\t\t\t\t\tconst bvh = MeshBVH.deserialize( serialized, geometry, { setIndex: false } );\n\t\t\t\t\tconst boundsOptions = {\n\t\t\t\t\t\tsetBoundingBox: true,\n\t\t\t\t\t\t...options,\n\t\t\t\t\t};\n\n\t\t\t\t\t// we need to replace the arrays because they're neutered entirely by the\n\t\t\t\t\t// webworker transfer.\n\t\t\t\t\tgeometry.attributes.position.array = position;\n\t\t\t\t\tif ( serialized.index ) {\n\n\t\t\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\t\t\tgeometry.index.array = serialized.index;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst newIndex = new BufferAttribute( serialized.index, 1, false );\n\t\t\t\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boundsOptions.setBoundingBox ) {\n\n\t\t\t\t\t\tgeometry.boundingBox = bvh.getBoundingBox( new Box3() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( options.onProgress ) {\n\n\t\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( bvh );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( options.onProgress ) {\n\n\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst index = geometry.index ? geometry.index.array : null;\n\t\t\tconst position = geometry.attributes.position.array;\n\t\t\tworker.postMessage( {\n\n\t\t\t\toperation: 'BUILD_BVH',\n\t\t\t\tmaxWorkerCount: this.maxWorkerCount,\n\t\t\t\tindex: convertToBufferType( index, SharedArrayBuffer ),\n\t\t\t\tposition: convertToBufferType( position, SharedArrayBuffer ),\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tonProgress: null,\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\n\t\t\t\t\tgroups: [ ... geometry.groups ],\n\t\t\t\t},\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n}\n\nexport class ParallelMeshBVHWorker {\n\n\tconstructor() {\n\n\t\tif ( isSharedArrayBufferSupported() ) {\n\n\t\t\treturn new _ParallelMeshBVHWorker();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'ParallelMeshBVHWorker: SharedArrayBuffers not supported. Falling back to single-threaded GenerateMeshBVHWorker.' );\n\n\t\t\tconst object = new GenerateMeshBVHWorker();\n\t\t\tobject.maxWorkerCount = DEFAULT_WORKER_COUNT;\n\t\t\treturn object;\n\n\t\t}\n\n\t}\n\n}\n","export class WorkerBase {\n\n\tconstructor( worker ) {\n\n\t\tthis.name = 'WorkerBase';\n\t\tthis.running = false;\n\t\tthis.worker = worker;\n\t\tthis.worker.onerror = e => {\n\n\t\t\tif ( e.message ) {\n\n\t\t\t\tthrow new Error( `${ this.name }: Could not create Web Worker with error \"${ e.message }\"` );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( `${ this.name }: Could not create Web Worker.` );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\trunTask() {}\n\n\tgenerate( ...args ) {\n\n\t\tif ( this.running ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Already running job.' );\n\n\t\t}\n\n\t\tif ( this.worker === null ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Worker has been disposed.' );\n\n\t\t}\n\n\t\tthis.running = true;\n\n\t\tconst promise = this.runTask( this.worker, ...args );\n\t\tpromise.finally( () => {\n\n\t\t\tthis.running = false;\n\n\t\t} );\n\n\t\treturn promise;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.worker.terminate();\n\t\tthis.worker = null;\n\n\t}\n\n}\n","import { Box3, BufferAttribute } from 'three';\nimport { MeshBVH } from '../core/MeshBVH.js';\nimport { WorkerBase } from './utils/WorkerBase.js';\n\nexport class GenerateMeshBVHWorker extends WorkerBase {\n\n\tconstructor() {\n\n\t\tconst worker = new Worker( new URL( './generateMeshBVH.worker.js', import.meta.url ), { type: 'module' } );\n\t\tsuper( worker );\n\t\tthis.name = 'GenerateMeshBVHWorker';\n\n\t}\n\n\trunTask( worker, geometry, options = {} ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tif (\n\t\t\t\tgeometry.getAttribute( 'position' ).isInterleavedBufferAttribute ||\n\t\t\t\tgeometry.index && geometry.index.isInterleavedBufferAttribute\n\t\t\t) {\n\n\t\t\t\tthrow new Error( 'GenerateMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.' );\n\n\t\t\t}\n\n\t\t\tworker.onerror = e => {\n\n\t\t\t\treject( new Error( `GenerateMeshBVHWorker: ${ e.message }` ) );\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tconst { data } = e;\n\n\t\t\t\tif ( data.error ) {\n\n\t\t\t\t\treject( new Error( data.error ) );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( data.serialized ) {\n\n\t\t\t\t\tconst { serialized, position } = data;\n\t\t\t\t\tconst bvh = MeshBVH.deserialize( serialized, geometry, { setIndex: false } );\n\t\t\t\t\tconst boundsOptions = Object.assign( {\n\n\t\t\t\t\t\tsetBoundingBox: true,\n\n\t\t\t\t\t}, options );\n\n\t\t\t\t\t// we need to replace the arrays because they're neutered entirely by the\n\t\t\t\t\t// webworker transfer.\n\t\t\t\t\tgeometry.attributes.position.array = position;\n\t\t\t\t\tif ( serialized.index ) {\n\n\t\t\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\t\t\tgeometry.index.array = serialized.index;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconst newIndex = new BufferAttribute( serialized.index, 1, false );\n\t\t\t\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( boundsOptions.setBoundingBox ) {\n\n\t\t\t\t\t\tgeometry.boundingBox = bvh.getBoundingBox( new Box3() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( options.onProgress ) {\n\n\t\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( bvh );\n\t\t\t\t\tworker.onmessage = null;\n\n\t\t\t\t} else if ( options.onProgress ) {\n\n\t\t\t\t\toptions.onProgress( data.progress );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tconst index = geometry.index ? geometry.index.array : null;\n\t\t\tconst position = geometry.attributes.position.array;\n\t\t\tconst transferable = [ position ];\n\t\t\tif ( index ) {\n\n\t\t\t\ttransferable.push( index );\n\n\t\t\t}\n\n\t\t\tworker.postMessage( {\n\n\t\t\t\tindex,\n\t\t\t\tposition,\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tonProgress: null,\n\t\t\t\t\tincludedProgressCallback: Boolean( options.onProgress ),\n\t\t\t\t\tgroups: [ ... geometry.groups ],\n\t\t\t\t},\n\n\t\t\t}, transferable.map( arr => arr.buffer ).filter( v => ( typeof SharedArrayBuffer === 'undefined' ) || ! ( v instanceof SharedArrayBuffer ) ) );\n\n\t\t} );\n\n\t}\n\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('6VW2n') + \"generateMeshBVH.worker.e1a14054.js\";module.exports = workerURL(url, bundleURL.getOrigin(url), false);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('6VW2n') + \"parallelMeshBVH.worker.fa7afa10.js\";module.exports = workerURL(url, bundleURL.getOrigin(url), false);"],"names":[],"version":3,"file":"spotLights.fc115aaf.js.map","sourceRoot":"/__parcel_source_root/"}