{"mappings":"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","sources":["node_modules/three-mesh-bvh/src/workers/parallelMeshBVH.worker.js","node_modules/three-mesh-bvh/src/workers/utils/WorkerPool.js","node_modules/@parcel/runtime-js/lib/runtime-28485a0191794e34.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js"],"sourcesContent":["import { MathUtils, BufferGeometry, BufferAttribute } from 'three';\nimport { WorkerPool } from './utils/WorkerPool.js';\nimport { BYTES_PER_NODE } from '../core/Constants.js';\nimport { buildTree, generateIndirectBuffer } from '../core/build/buildTree.js';\nimport { countNodes, populateBuffer } from '../core/build/buildUtils.js';\nimport { computeTriangleBounds } from '../core/build/computeBoundsUtils.js';\nimport { getFullGeometryRange, getRootIndexRanges, getTriCount } from '../core/build/geometryUtils.js';\nimport { DEFAULT_OPTIONS } from '../core/MeshBVH.js';\n\nlet isRunning = false;\nlet prevTime = 0;\nconst workerPool = new WorkerPool( () => new Worker( new URL( './parallelMeshBVH.worker.js', import.meta.url ), { type: 'module' } ) );\n\nonmessage = async ( { data } ) => {\n\n\tif ( isRunning ) {\n\n\t\tthrow new Error( 'Worker is already running a task.' );\n\n\t}\n\n\tconst { operation } = data;\n\tif ( operation === 'BUILD_BVH' ) {\n\n\t\tisRunning = true;\n\n\t\tconst {\n\t\t\tmaxWorkerCount,\n\t\t\tindex,\n\t\t\tposition,\n\t\t\toptions,\n\t\t} = data;\n\n\t\t// initialize the number of workers balanced for a binary tree\n\t\tworkerPool.setWorkerCount( MathUtils.floorPowerOfTwo( maxWorkerCount ) );\n\n\t\t// generate necessary buffers and objects\n\t\tconst geometry = getGeometry( index, position );\n\t\tconst geometryRanges = options.indirect ? getFullGeometryRange( geometry ) : getRootIndexRanges( geometry );\n\t\tconst indirectBuffer = options.indirect ? generateIndirectBuffer( geometry, true ) : null;\n\t\tconst triCount = getTriCount( geometry );\n\t\tconst triangleBounds = new Float32Array( new SharedArrayBuffer( triCount * 6 * 4 ) );\n\n\t\t// generate portions of the triangle bounds buffer over multiple frames\n\t\tconst boundsPromises = [];\n\t\tfor ( let i = 0, l = workerPool.workerCount; i < l; i ++ ) {\n\n\t\t\tconst countPerWorker = Math.ceil( triCount / l );\n\t\t\tconst offset = i * countPerWorker;\n\t\t\tconst count = Math.min( countPerWorker, triCount - offset );\n\n\t\t\tboundsPromises.push( workerPool.runSubTask(\n\t\t\t\ti,\n\t\t\t\t{\n\t\t\t\t\toperation: 'BUILD_TRIANGLE_BOUNDS',\n\t\t\t\t\toffset,\n\t\t\t\t\tcount,\n\t\t\t\t\tindex,\n\t\t\t\t\tposition,\n\t\t\t\t\ttriangleBounds,\n\t\t\t\t}\n\t\t\t) );\n\n\t\t}\n\n\t\tawait Promise.all( boundsPromises );\n\n\t\t// create a proxy bvh structure\n\t\tconst proxyBvh = {\n\t\t\t_indirectBuffer: indirectBuffer,\n\t\t\tgeometry: geometry,\n\t\t};\n\n\t\tlet totalProgress = 0;\n\n\t\tconst localOptions = {\n\t\t\t...DEFAULT_OPTIONS,\n\t\t\t...options,\n\t\t\tverbose: false,\n\t\t\tmaxDepth: Math.round( Math.log2( workerPool.workerCount ) ),\n\t\t\tonProgress: options.includedProgressCallback ?\n\t\t\t\tgetOnProgressDeltaCallback( delta => {\n\n\t\t\t\t\ttotalProgress += 0.1 * delta;\n\t\t\t\t\ttriggerOnProgress( totalProgress );\n\n\t\t\t\t} ) :\n\t\t\t\tnull,\n\t\t};\n\n\t\t// generate the ranges for all roots asynchronously\n\t\tconst packedRoots = [];\n\t\tfor ( let i = 0, l = geometryRanges.length; i < l; i ++ ) {\n\n\t\t\t// build the tree down to the necessary depth\n\t\t\tconst promises = [];\n\t\t\tconst range = geometryRanges[ i ];\n\t\t\tconst root = buildTree( proxyBvh, triangleBounds, range.offset, range.count, localOptions );\n\t\t\tconst flatNodes = flattenNodes( root );\n\t\t\tlet bufferLengths = 0;\n\t\t\tlet remainingNodes = 0;\n\t\t\tlet nextWorker = 0;\n\n\t\t\t// trigger workers for each generated leaf node\n\t\t\tfor ( let j = 0, l = flatNodes.length; j < l; j ++ ) {\n\n\t\t\t\tconst node = flatNodes[ j ];\n\t\t\t\tconst isLeaf = Boolean( node.count );\n\t\t\t\tif ( isLeaf ) {\n\n\t\t\t\t\t// adjust the maxDepth to account for the depth we've already traversed\n\t\t\t\t\tconst workerOptions = {\n\t\t\t\t\t\t...DEFAULT_OPTIONS,\n\t\t\t\t\t\t...options\n\t\t\t\t\t};\n\n\t\t\t\t\tworkerOptions.maxDepth = workerOptions.maxDepth - node.depth;\n\n\t\t\t\t\tconst pr = workerPool.runSubTask(\n\t\t\t\t\t\tnextWorker ++,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toperation: 'BUILD_SUBTREE',\n\t\t\t\t\t\t\toffset: node.offset,\n\t\t\t\t\t\t\tcount: node.count,\n\t\t\t\t\t\t\tindirectBuffer,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\ttriangleBounds,\n\t\t\t\t\t\t\toptions: workerOptions,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetOnProgressDeltaCallback( delta => {\n\n\t\t\t\t\t\t\ttotalProgress += 0.9 * delta / nextWorker;\n\t\t\t\t\t\t\ttriggerOnProgress( totalProgress );\n\n\t\t\t\t\t\t} ),\n\t\t\t\t\t).then( data => {\n\n\t\t\t\t\t\tconst buffer = data.buffer;\n\t\t\t\t\t\tnode.buffer = buffer;\n\t\t\t\t\t\tbufferLengths += buffer.byteLength;\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tpromises.push( pr );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tremainingNodes ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// wait for the sub trees to complete\n\t\t\tawait Promise.all( promises );\n\n\t\t\tconst BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n\t\t\tconst buffer = new BufferConstructor( bufferLengths + remainingNodes * BYTES_PER_NODE );\n\t\t\tpopulateBuffer( 0, root, buffer );\n\n\t\t\tpackedRoots.push( buffer );\n\n\t\t}\n\n\t\t// transfer the data back\n\t\tpostMessage( {\n\t\t\terror: null,\n\t\t\tserialized: {\n\t\t\t\troots: packedRoots,\n\t\t\t\tindex: index,\n\t\t\t\tindirectBuffer: indirectBuffer,\n\t\t\t},\n\t\t\tposition,\n\t\t\tprogress: 1,\n\t\t} );\n\n\t\tisRunning = false;\n\n\t} else if ( operation === 'BUILD_SUBTREE' ) {\n\n\t\tconst {\n\t\t\toffset,\n\t\t\tcount,\n\t\t\tindirectBuffer,\n\t\t\tindex,\n\t\t\tposition,\n\t\t\ttriangleBounds,\n\t\t\toptions,\n\t\t} = data;\n\n\t\tconst proxyBvh = {\n\t\t\t_indirectBuffer: indirectBuffer,\n\t\t\tgeometry: getGeometry( index, position ),\n\t\t};\n\n\t\tconst localOptions = {\n\t\t\t...DEFAULT_OPTIONS,\n\t\t\t...options,\n\t\t\tonProgress: options.includedProgressCallback ? triggerOnProgress : null,\n\t\t};\n\n\t\tconst root = buildTree( proxyBvh, triangleBounds, offset, count, localOptions );\n\t\tconst nodeCount = countNodes( root );\n\t\tconst buffer = new ArrayBuffer( BYTES_PER_NODE * nodeCount );\n\t\tpopulateBuffer( 0, root, buffer );\n\t\tpostMessage( { type: 'result', buffer, progress: 1 }, [ buffer ] );\n\n\t} else if ( operation === 'BUILD_TRIANGLE_BOUNDS' ) {\n\n\t\tconst {\n\t\t\tindex,\n\t\t\tposition,\n\t\t\ttriangleBounds,\n\t\t\toffset,\n\t\t\tcount,\n\t\t} = data;\n\n\t\tconst geometry = getGeometry( index, position );\n\t\tcomputeTriangleBounds( geometry, triangleBounds, offset, count );\n\t\tpostMessage( { type: 'result' } );\n\n\t} else if ( operation === 'REFIT' ) {\n\n\t\t// TODO\n\n\t} else if ( operation === 'REFIT_SUBTREE' ) {\n\n\t\t// TODO\n\n\t}\n\n};\n\n// Helper functions and utils\nfunction getOnProgressDeltaCallback( cb ) {\n\n\tlet lastProgress = 0;\n\treturn function onProgressDeltaCallback( progress ) {\n\n\t\tcb( progress - lastProgress );\n\t\tlastProgress = progress;\n\n\t};\n\n}\n\nfunction triggerOnProgress( progress ) {\n\n\t// account for error\n\tprogress = Math.min( progress, 1 );\n\n\tconst currTime = performance.now();\n\tif ( currTime - prevTime >= 10 && progress !== 1.0 ) {\n\n\t\tpostMessage( {\n\n\t\t\terror: null,\n\t\t\tprogress,\n\t\t\ttype: 'progress'\n\n\t\t} );\n\t\tprevTime = currTime;\n\n\t}\n\n}\n\nfunction getGeometry( index, position ) {\n\n\tconst geometry = new BufferGeometry();\n\tif ( index ) {\n\n\t\tgeometry.index = new BufferAttribute( index, 1, false );\n\n\t}\n\n\tgeometry.setAttribute( 'position', new BufferAttribute( position, 3 ) );\n\treturn geometry;\n\n}\n\nfunction flattenNodes( node ) {\n\n\tconst arr = [];\n\ttraverse( node );\n\treturn arr;\n\n\tfunction traverse( node, depth = 0 ) {\n\n\t\tnode.depth = depth;\n\t\tarr.push( node );\n\n\t\tconst isLeaf = Boolean( node.count );\n\t\tif ( ! isLeaf ) {\n\n\t\t\ttraverse( node.left, depth + 1 );\n\t\t\ttraverse( node.right, depth + 1 );\n\n\t\t}\n\n\t}\n\n}\n","export class WorkerPool {\n\n\tget workerCount() {\n\n\t\treturn this.workers.length;\n\n\t}\n\n\tconstructor( getWorkerCallback ) {\n\n\t\tthis.workers = [];\n\t\tthis._getWorker = getWorkerCallback;\n\n\t}\n\n\tsetWorkerCount( count ) {\n\n\t\tconst workers = this.workers;\n\t\twhile ( workers.length < count ) {\n\n\t\t\tworkers.push( this._getWorker() );\n\n\t\t}\n\n\t\twhile ( workers.length > count ) {\n\n\t\t\tworkers.pop().terminate();\n\n\t\t}\n\n\t}\n\n\trunSubTask( i, msg, onProgress ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tconst worker = this.workers[ i ];\n\t\t\tif ( worker.isRunning ) {\n\n\t\t\t\tthrow new Error( `${ this.name }: Worker ${ i } is already running.` );\n\n\t\t\t}\n\n\t\t\tworker.isRunning = true;\n\t\t\tworker.postMessage( msg );\n\t\t\tworker.onerror = e => {\n\n\t\t\t\tworker.isRunning = false;\n\t\t\t\treject( e );\n\n\t\t\t};\n\n\t\t\tworker.onmessage = e => {\n\n\t\t\t\tif ( e.data.type === 'progress' ) {\n\n\t\t\t\t\tif ( onProgress ) {\n\n\t\t\t\t\t\tonProgress( e.data.progress );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( onProgress ) {\n\n\t\t\t\t\t\tonProgress( 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tworker.isRunning = false;\n\t\t\t\t\tresolve( e.data );\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} );\n\n\t}\n\n}\n","let workerURL = require('./helpers/get-worker-url');\nlet bundleURL = require('./helpers/bundle-url');\nlet url = bundleURL.getBundleURL('2so9O') + \"parallelMeshBVH.worker.fa7afa10.js\";module.exports = workerURL(url, bundleURL.getOrigin(url), false);","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;"],"names":[],"version":3,"file":"parallelMeshBVH.worker.fa7afa10.js.map","sourceRoot":"/__parcel_source_root/"}